

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri May 27 19:48:20 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
     9                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    56  0000                     
    57                           	psect	mediumconst
    58  007942                     __pmediumconst:
    59                           	opt stack 0
    60  007942  00                 	db	0
    61  007943                     _image:
    62                           	opt stack 0
    63  007943  00                 	db	0
    64  007944  00                 	db	0
    65  007945  00                 	db	0
    66  007946  00                 	db	0
    67  007947  00                 	db	0
    68  007948  00                 	db	0
    69  007949  00                 	db	0
    70  00794A  00                 	db	0
    71  00794B  00                 	db	0
    72  00794C  00                 	db	0
    73  00794D  00                 	db	0
    74  00794E  00                 	db	0
    75  00794F  00                 	db	0
    76  007950  00                 	db	0
    77  007951  00                 	db	0
    78  007952  00                 	db	0
    79  007953  00                 	db	0
    80  007954  00                 	db	0
    81  007955  00                 	db	0
    82  007956  00                 	db	0
    83  007957  00                 	db	0
    84  007958  00                 	db	0
    85  007959  00                 	db	0
    86  00795A  00                 	db	0
    87  00795B  00                 	db	0
    88  00795C  00                 	db	0
    89  00795D  00                 	db	0
    90  00795E  00                 	db	0
    91  00795F  00                 	db	0
    92  007960  00                 	db	0
    93  007961  00                 	db	0
    94  007962  00                 	db	0
    95  007963  00                 	db	0
    96  007964  00                 	db	0
    97  007965  00                 	db	0
    98  007966  00                 	db	0
    99  007967  00                 	db	0
   100  007968  00                 	db	0
   101  007969  00                 	db	0
   102  00796A  00                 	db	0
   103  00796B  00                 	db	0
   104  00796C  00                 	db	0
   105  00796D  00                 	db	0
   106  00796E  00                 	db	0
   107  00796F  00                 	db	0
   108  007970  00                 	db	0
   109  007971  00                 	db	0
   110  007972  00                 	db	0
   111  007973  00                 	db	0
   112  007974  00                 	db	0
   113  007975  00                 	db	0
   114  007976  00                 	db	0
   115  007977  00                 	db	0
   116  007978  00                 	db	0
   117  007979  00                 	db	0
   118  00797A  00                 	db	0
   119  00797B  00                 	db	0
   120  00797C  00                 	db	0
   121  00797D  00                 	db	0
   122  00797E  00                 	db	0
   123  00797F  00                 	db	0
   124  007980  00                 	db	0
   125  007981  00                 	db	0
   126  007982  00                 	db	0
   127  007983  00                 	db	0
   128  007984  00                 	db	0
   129  007985  00                 	db	0
   130  007986  03                 	db	3
   131  007987  0F                 	db	15
   132  007988  1C                 	db	28
   133  007989  30                 	db	48
   134  00798A  72                 	db	114
   135  00798B  7F                 	db	127
   136  00798C  F5                 	db	245
   137  00798D  CB                 	db	203
   138  00798E  CC                 	db	204
   139  00798F  61                 	db	97
   140  007990  D1                 	db	209
   141  007991  7F                 	db	127
   142  007992  3F                 	db	63
   143  007993  1F                 	db	31
   144  007994  0F                 	db	15
   145  007995  07                 	db	7
   146  007996  07                 	db	7
   147  007997  03                 	db	3
   148  007998  03                 	db	3
   149  007999  01                 	db	1
   150  00799A  01                 	db	1
   151  00799B  00                 	db	0
   152  00799C  00                 	db	0
   153  00799D  00                 	db	0
   154  00799E  00                 	db	0
   155  00799F  00                 	db	0
   156  0079A0  00                 	db	0
   157  0079A1  00                 	db	0
   158  0079A2  00                 	db	0
   159  0079A3  00                 	db	0
   160  0079A4  00                 	db	0
   161  0079A5  00                 	db	0
   162  0079A6  00                 	db	0
   163  0079A7  00                 	db	0
   164  0079A8  00                 	db	0
   165  0079A9  00                 	db	0
   166  0079AA  00                 	db	0
   167  0079AB  00                 	db	0
   168  0079AC  00                 	db	0
   169  0079AD  00                 	db	0
   170  0079AE  00                 	db	0
   171  0079AF  00                 	db	0
   172  0079B0  00                 	db	0
   173  0079B1  00                 	db	0
   174  0079B2  00                 	db	0
   175  0079B3  00                 	db	0
   176  0079B4  00                 	db	0
   177  0079B5  00                 	db	0
   178  0079B6  00                 	db	0
   179  0079B7  00                 	db	0
   180  0079B8  00                 	db	0
   181  0079B9  00                 	db	0
   182  0079BA  00                 	db	0
   183  0079BB  00                 	db	0
   184  0079BC  00                 	db	0
   185  0079BD  00                 	db	0
   186  0079BE  00                 	db	0
   187  0079BF  00                 	db	0
   188  0079C0  00                 	db	0
   189  0079C1  00                 	db	0
   190  0079C2  00                 	db	0
   191  0079C3  00                 	db	0
   192  0079C4  00                 	db	0
   193  0079C5  00                 	db	0
   194  0079C6  00                 	db	0
   195  0079C7  00                 	db	0
   196  0079C8  00                 	db	0
   197  0079C9  00                 	db	0
   198  0079CA  00                 	db	0
   199  0079CB  00                 	db	0
   200  0079CC  00                 	db	0
   201  0079CD  00                 	db	0
   202  0079CE  00                 	db	0
   203  0079CF  00                 	db	0
   204  0079D0  00                 	db	0
   205  0079D1  00                 	db	0
   206  0079D2  00                 	db	0
   207  0079D3  00                 	db	0
   208  0079D4  00                 	db	0
   209  0079D5  00                 	db	0
   210  0079D6  00                 	db	0
   211  0079D7  00                 	db	0
   212  0079D8  00                 	db	0
   213  0079D9  00                 	db	0
   214  0079DA  00                 	db	0
   215  0079DB  00                 	db	0
   216  0079DC  00                 	db	0
   217  0079DD  00                 	db	0
   218  0079DE  00                 	db	0
   219  0079DF  00                 	db	0
   220  0079E0  00                 	db	0
   221  0079E1  00                 	db	0
   222  0079E2  00                 	db	0
   223  0079E3  00                 	db	0
   224  0079E4  00                 	db	0
   225  0079E5  00                 	db	0
   226  0079E6  00                 	db	0
   227  0079E7  00                 	db	0
   228  0079E8  00                 	db	0
   229  0079E9  00                 	db	0
   230  0079EA  00                 	db	0
   231  0079EB  00                 	db	0
   232  0079EC  00                 	db	0
   233  0079ED  00                 	db	0
   234  0079EE  00                 	db	0
   235  0079EF  00                 	db	0
   236  0079F0  00                 	db	0
   237  0079F1  00                 	db	0
   238  0079F2  00                 	db	0
   239  0079F3  00                 	db	0
   240  0079F4  00                 	db	0
   241  0079F5  00                 	db	0
   242  0079F6  00                 	db	0
   243  0079F7  00                 	db	0
   244  0079F8  00                 	db	0
   245  0079F9  01                 	db	1
   246  0079FA  01                 	db	1
   247  0079FB  03                 	db	3
   248  0079FC  03                 	db	3
   249  0079FD  07                 	db	7
   250  0079FE  07                 	db	7
   251  0079FF  0F                 	db	15
   252  007A00  0F                 	db	15
   253  007A01  1F                 	db	31
   254  007A02  3F                 	db	63
   255  007A03  3F                 	db	63
   256  007A04  7F                 	db	127
   257  007A05  FF                 	db	255
   258  007A06  FF                 	db	255
   259  007A07  FF                 	db	255
   260  007A08  3F                 	db	63
   261  007A09  0F                 	db	15
   262  007A0A  0F                 	db	15
   263  007A0B  87                 	db	135
   264  007A0C  E3                 	db	227
   265  007A0D  F5                 	db	245
   266  007A0E  FF                 	db	255
   267  007A0F  FF                 	db	255
   268  007A10  F8                 	db	248
   269  007A11  E0                 	db	224
   270  007A12  E0                 	db	224
   271  007A13  C0                 	db	192
   272  007A14  80                 	db	128
   273  007A15  80                 	db	128
   274  007A16  80                 	db	128
   275  007A17  80                 	db	128
   276  007A18  00                 	db	0
   277  007A19  80                 	db	128
   278  007A1A  80                 	db	128
   279  007A1B  00                 	db	0
   280  007A1C  00                 	db	0
   281  007A1D  00                 	db	0
   282  007A1E  00                 	db	0
   283  007A1F  00                 	db	0
   284  007A20  00                 	db	0
   285  007A21  00                 	db	0
   286  007A22  00                 	db	0
   287  007A23  00                 	db	0
   288  007A24  00                 	db	0
   289  007A25  00                 	db	0
   290  007A26  00                 	db	0
   291  007A27  00                 	db	0
   292  007A28  00                 	db	0
   293  007A29  00                 	db	0
   294  007A2A  00                 	db	0
   295  007A2B  00                 	db	0
   296  007A2C  00                 	db	0
   297  007A2D  00                 	db	0
   298  007A2E  00                 	db	0
   299  007A2F  00                 	db	0
   300  007A30  00                 	db	0
   301  007A31  00                 	db	0
   302  007A32  00                 	db	0
   303  007A33  00                 	db	0
   304  007A34  00                 	db	0
   305  007A35  00                 	db	0
   306  007A36  00                 	db	0
   307  007A37  00                 	db	0
   308  007A38  00                 	db	0
   309  007A39  00                 	db	0
   310  007A3A  00                 	db	0
   311  007A3B  00                 	db	0
   312  007A3C  00                 	db	0
   313  007A3D  00                 	db	0
   314  007A3E  00                 	db	0
   315  007A3F  00                 	db	0
   316  007A40  00                 	db	0
   317  007A41  00                 	db	0
   318  007A42  00                 	db	0
   319  007A43  00                 	db	0
   320  007A44  00                 	db	0
   321  007A45  00                 	db	0
   322  007A46  00                 	db	0
   323  007A47  00                 	db	0
   324  007A48  00                 	db	0
   325  007A49  00                 	db	0
   326  007A4A  00                 	db	0
   327  007A4B  00                 	db	0
   328  007A4C  00                 	db	0
   329  007A4D  00                 	db	0
   330  007A4E  00                 	db	0
   331  007A4F  00                 	db	0
   332  007A50  00                 	db	0
   333  007A51  00                 	db	0
   334  007A52  00                 	db	0
   335  007A53  00                 	db	0
   336  007A54  00                 	db	0
   337  007A55  00                 	db	0
   338  007A56  00                 	db	0
   339  007A57  00                 	db	0
   340  007A58  00                 	db	0
   341  007A59  00                 	db	0
   342  007A5A  00                 	db	0
   343  007A5B  00                 	db	0
   344  007A5C  00                 	db	0
   345  007A5D  00                 	db	0
   346  007A5E  00                 	db	0
   347  007A5F  00                 	db	0
   348  007A60  00                 	db	0
   349  007A61  00                 	db	0
   350  007A62  00                 	db	0
   351  007A63  00                 	db	0
   352  007A64  00                 	db	0
   353  007A65  00                 	db	0
   354  007A66  00                 	db	0
   355  007A67  00                 	db	0
   356  007A68  00                 	db	0
   357  007A69  00                 	db	0
   358  007A6A  00                 	db	0
   359  007A6B  00                 	db	0
   360  007A6C  00                 	db	0
   361  007A6D  00                 	db	0
   362  007A6E  00                 	db	0
   363  007A6F  00                 	db	0
   364  007A70  03                 	db	3
   365  007A71  03                 	db	3
   366  007A72  0F                 	db	15
   367  007A73  0F                 	db	15
   368  007A74  1F                 	db	31
   369  007A75  3F                 	db	63
   370  007A76  7F                 	db	127
   371  007A77  7F                 	db	127
   372  007A78  FF                 	db	255
   373  007A79  FF                 	db	255
   374  007A7A  FF                 	db	255
   375  007A7B  FC                 	db	252
   376  007A7C  FA                 	db	250
   377  007A7D  F0                 	db	240
   378  007A7E  E0                 	db	224
   379  007A7F  E0                 	db	224
   380  007A80  C0                 	db	192
   381  007A81  80                 	db	128
   382  007A82  80                 	db	128
   383  007A83  80                 	db	128
   384  007A84  00                 	db	0
   385  007A85  00                 	db	0
   386  007A86  00                 	db	0
   387  007A87  00                 	db	0
   388  007A88  00                 	db	0
   389  007A89  80                 	db	128
   390  007A8A  00                 	db	0
   391  007A8B  C0                 	db	192
   392  007A8C  D2                 	db	210
   393  007A8D  FF                 	db	255
   394  007A8E  FF                 	db	255
   395  007A8F  7F                 	db	127
   396  007A90  3F                 	db	63
   397  007A91  1F                 	db	31
   398  007A92  0F                 	db	15
   399  007A93  01                 	db	1
   400  007A94  01                 	db	1
   401  007A95  00                 	db	0
   402  007A96  00                 	db	0
   403  007A97  00                 	db	0
   404  007A98  00                 	db	0
   405  007A99  00                 	db	0
   406  007A9A  00                 	db	0
   407  007A9B  00                 	db	0
   408  007A9C  00                 	db	0
   409  007A9D  00                 	db	0
   410  007A9E  00                 	db	0
   411  007A9F  00                 	db	0
   412  007AA0  00                 	db	0
   413  007AA1  00                 	db	0
   414  007AA2  00                 	db	0
   415  007AA3  00                 	db	0
   416  007AA4  00                 	db	0
   417  007AA5  00                 	db	0
   418  007AA6  00                 	db	0
   419  007AA7  00                 	db	0
   420  007AA8  00                 	db	0
   421  007AA9  00                 	db	0
   422  007AAA  00                 	db	0
   423  007AAB  00                 	db	0
   424  007AAC  00                 	db	0
   425  007AAD  00                 	db	0
   426  007AAE  00                 	db	0
   427  007AAF  00                 	db	0
   428  007AB0  00                 	db	0
   429  007AB1  00                 	db	0
   430  007AB2  00                 	db	0
   431  007AB3  00                 	db	0
   432  007AB4  00                 	db	0
   433  007AB5  00                 	db	0
   434  007AB6  00                 	db	0
   435  007AB7  00                 	db	0
   436  007AB8  00                 	db	0
   437  007AB9  00                 	db	0
   438  007ABA  00                 	db	0
   439  007ABB  00                 	db	0
   440  007ABC  00                 	db	0
   441  007ABD  00                 	db	0
   442  007ABE  00                 	db	0
   443  007ABF  00                 	db	0
   444  007AC0  00                 	db	0
   445  007AC1  00                 	db	0
   446  007AC2  00                 	db	0
   447  007AC3  00                 	db	0
   448  007AC4  00                 	db	0
   449  007AC5  00                 	db	0
   450  007AC6  00                 	db	0
   451  007AC7  00                 	db	0
   452  007AC8  00                 	db	0
   453  007AC9  00                 	db	0
   454  007ACA  00                 	db	0
   455  007ACB  00                 	db	0
   456  007ACC  00                 	db	0
   457  007ACD  00                 	db	0
   458  007ACE  00                 	db	0
   459  007ACF  00                 	db	0
   460  007AD0  00                 	db	0
   461  007AD1  00                 	db	0
   462  007AD2  00                 	db	0
   463  007AD3  00                 	db	0
   464  007AD4  00                 	db	0
   465  007AD5  00                 	db	0
   466  007AD6  00                 	db	0
   467  007AD7  00                 	db	0
   468  007AD8  00                 	db	0
   469  007AD9  00                 	db	0
   470  007ADA  00                 	db	0
   471  007ADB  00                 	db	0
   472  007ADC  00                 	db	0
   473  007ADD  00                 	db	0
   474  007ADE  00                 	db	0
   475  007ADF  00                 	db	0
   476  007AE0  00                 	db	0
   477  007AE1  00                 	db	0
   478  007AE2  00                 	db	0
   479  007AE3  00                 	db	0
   480  007AE4  00                 	db	0
   481  007AE5  00                 	db	0
   482  007AE6  00                 	db	0
   483  007AE7  00                 	db	0
   484  007AE8  00                 	db	0
   485  007AE9  00                 	db	0
   486  007AEA  00                 	db	0
   487  007AEB  02                 	db	2
   488  007AEC  0F                 	db	15
   489  007AED  3F                 	db	63
   490  007AEE  7C                 	db	124
   491  007AEF  F8                 	db	248
   492  007AF0  F0                 	db	240
   493  007AF1  E8                 	db	232
   494  007AF2  C0                 	db	192
   495  007AF3  C0                 	db	192
   496  007AF4  81                 	db	129
   497  007AF5  0F                 	db	15
   498  007AF6  3F                 	db	63
   499  007AF7  FD                 	db	253
   500  007AF8  F0                 	db	240
   501  007AF9  A0                 	db	160
   502  007AFA  00                 	db	0
   503  007AFB  00                 	db	0
   504  007AFC  00                 	db	0
   505  007AFD  00                 	db	0
   506  007AFE  00                 	db	0
   507  007AFF  00                 	db	0
   508  007B00  00                 	db	0
   509  007B01  00                 	db	0
   510  007B02  00                 	db	0
   511  007B03  00                 	db	0
   512  007B04  00                 	db	0
   513  007B05  00                 	db	0
   514  007B06  00                 	db	0
   515  007B07  01                 	db	1
   516  007B08  03                 	db	3
   517  007B09  07                 	db	7
   518  007B0A  1F                 	db	31
   519  007B0B  7E                 	db	126
   520  007B0C  F8                 	db	248
   521  007B0D  F0                 	db	240
   522  007B0E  C0                 	db	192
   523  007B0F  80                 	db	128
   524  007B10  E0                 	db	224
   525  007B11  E0                 	db	224
   526  007B12  F0                 	db	240
   527  007B13  F8                 	db	248
   528  007B14  FC                 	db	252
   529  007B15  7E                 	db	126
   530  007B16  3F                 	db	63
   531  007B17  07                 	db	7
   532  007B18  01                 	db	1
   533  007B19  00                 	db	0
   534  007B1A  00                 	db	0
   535  007B1B  00                 	db	0
   536  007B1C  00                 	db	0
   537  007B1D  00                 	db	0
   538  007B1E  00                 	db	0
   539  007B1F  00                 	db	0
   540  007B20  00                 	db	0
   541  007B21  00                 	db	0
   542  007B22  00                 	db	0
   543  007B23  00                 	db	0
   544  007B24  00                 	db	0
   545  007B25  00                 	db	0
   546  007B26  00                 	db	0
   547  007B27  00                 	db	0
   548  007B28  00                 	db	0
   549  007B29  00                 	db	0
   550  007B2A  00                 	db	0
   551  007B2B  00                 	db	0
   552  007B2C  00                 	db	0
   553  007B2D  00                 	db	0
   554  007B2E  00                 	db	0
   555  007B2F  00                 	db	0
   556  007B30  00                 	db	0
   557  007B31  00                 	db	0
   558  007B32  00                 	db	0
   559  007B33  00                 	db	0
   560  007B34  00                 	db	0
   561  007B35  00                 	db	0
   562  007B36  00                 	db	0
   563  007B37  00                 	db	0
   564  007B38  00                 	db	0
   565  007B39  00                 	db	0
   566  007B3A  00                 	db	0
   567  007B3B  00                 	db	0
   568  007B3C  00                 	db	0
   569  007B3D  00                 	db	0
   570  007B3E  00                 	db	0
   571  007B3F  00                 	db	0
   572  007B40  00                 	db	0
   573  007B41  00                 	db	0
   574  007B42  00                 	db	0
   575  007B43  00                 	db	0
   576  007B44  00                 	db	0
   577  007B45  00                 	db	0
   578  007B46  00                 	db	0
   579  007B47  00                 	db	0
   580  007B48  00                 	db	0
   581  007B49  00                 	db	0
   582  007B4A  00                 	db	0
   583  007B4B  00                 	db	0
   584  007B4C  00                 	db	0
   585  007B4D  00                 	db	0
   586  007B4E  00                 	db	0
   587  007B4F  00                 	db	0
   588  007B50  00                 	db	0
   589  007B51  00                 	db	0
   590  007B52  00                 	db	0
   591  007B53  00                 	db	0
   592  007B54  00                 	db	0
   593  007B55  00                 	db	0
   594  007B56  00                 	db	0
   595  007B57  00                 	db	0
   596  007B58  00                 	db	0
   597  007B59  00                 	db	0
   598  007B5A  00                 	db	0
   599  007B5B  00                 	db	0
   600  007B5C  00                 	db	0
   601  007B5D  00                 	db	0
   602  007B5E  00                 	db	0
   603  007B5F  00                 	db	0
   604  007B60  00                 	db	0
   605  007B61  00                 	db	0
   606  007B62  00                 	db	0
   607  007B63  00                 	db	0
   608  007B64  00                 	db	0
   609  007B65  00                 	db	0
   610  007B66  00                 	db	0
   611  007B67  00                 	db	0
   612  007B68  00                 	db	0
   613  007B69  00                 	db	0
   614  007B6A  00                 	db	0
   615  007B6B  80                 	db	128
   616  007B6C  00                 	db	0
   617  007B6D  00                 	db	0
   618  007B6E  00                 	db	0
   619  007B6F  00                 	db	0
   620  007B70  00                 	db	0
   621  007B71  00                 	db	0
   622  007B72  00                 	db	0
   623  007B73  2F                 	db	47
   624  007B74  FF                 	db	255
   625  007B75  FF                 	db	255
   626  007B76  C0                 	db	192
   627  007B77  00                 	db	0
   628  007B78  00                 	db	0
   629  007B79  00                 	db	0
   630  007B7A  00                 	db	0
   631  007B7B  00                 	db	0
   632  007B7C  00                 	db	0
   633  007B7D  00                 	db	0
   634  007B7E  00                 	db	0
   635  007B7F  00                 	db	0
   636  007B80  00                 	db	0
   637  007B81  00                 	db	0
   638  007B82  00                 	db	0
   639  007B83  00                 	db	0
   640  007B84  00                 	db	0
   641  007B85  00                 	db	0
   642  007B86  7B                 	db	123
   643  007B87  FF                 	db	255
   644  007B88  FF                 	db	255
   645  007B89  80                 	db	128
   646  007B8A  00                 	db	0
   647  007B8B  00                 	db	0
   648  007B8C  00                 	db	0
   649  007B8D  00                 	db	0
   650  007B8E  00                 	db	0
   651  007B8F  00                 	db	0
   652  007B90  00                 	db	0
   653  007B91  00                 	db	0
   654  007B92  00                 	db	0
   655  007B93  00                 	db	0
   656  007B94  00                 	db	0
   657  007B95  00                 	db	0
   658  007B96  80                 	db	128
   659  007B97  C0                 	db	192
   660  007B98  00                 	db	0
   661  007B99  00                 	db	0
   662  007B9A  00                 	db	0
   663  007B9B  00                 	db	0
   664  007B9C  00                 	db	0
   665  007B9D  00                 	db	0
   666  007B9E  00                 	db	0
   667  007B9F  00                 	db	0
   668  007BA0  00                 	db	0
   669  007BA1  00                 	db	0
   670  007BA2  00                 	db	0
   671  007BA3  00                 	db	0
   672  007BA4  00                 	db	0
   673  007BA5  00                 	db	0
   674  007BA6  00                 	db	0
   675  007BA7  00                 	db	0
   676  007BA8  00                 	db	0
   677  007BA9  00                 	db	0
   678  007BAA  00                 	db	0
   679  007BAB  00                 	db	0
   680  007BAC  00                 	db	0
   681  007BAD  00                 	db	0
   682  007BAE  00                 	db	0
   683  007BAF  00                 	db	0
   684  007BB0  00                 	db	0
   685  007BB1  00                 	db	0
   686  007BB2  00                 	db	0
   687  007BB3  00                 	db	0
   688  007BB4  00                 	db	0
   689  007BB5  00                 	db	0
   690  007BB6  00                 	db	0
   691  007BB7  00                 	db	0
   692  007BB8  00                 	db	0
   693  007BB9  00                 	db	0
   694  007BBA  00                 	db	0
   695  007BBB  00                 	db	0
   696  007BBC  00                 	db	0
   697  007BBD  00                 	db	0
   698  007BBE  00                 	db	0
   699  007BBF  00                 	db	0
   700  007BC0  00                 	db	0
   701  007BC1  00                 	db	0
   702  007BC2  00                 	db	0
   703  007BC3  00                 	db	0
   704  007BC4  00                 	db	0
   705  007BC5  00                 	db	0
   706  007BC6  00                 	db	0
   707  007BC7  00                 	db	0
   708  007BC8  00                 	db	0
   709  007BC9  00                 	db	0
   710  007BCA  00                 	db	0
   711  007BCB  00                 	db	0
   712  007BCC  00                 	db	0
   713  007BCD  00                 	db	0
   714  007BCE  00                 	db	0
   715  007BCF  00                 	db	0
   716  007BD0  00                 	db	0
   717  007BD1  00                 	db	0
   718  007BD2  00                 	db	0
   719  007BD3  00                 	db	0
   720  007BD4  00                 	db	0
   721  007BD5  00                 	db	0
   722  007BD6  00                 	db	0
   723  007BD7  00                 	db	0
   724  007BD8  00                 	db	0
   725  007BD9  00                 	db	0
   726  007BDA  00                 	db	0
   727  007BDB  00                 	db	0
   728  007BDC  00                 	db	0
   729  007BDD  00                 	db	0
   730  007BDE  00                 	db	0
   731  007BDF  00                 	db	0
   732  007BE0  00                 	db	0
   733  007BE1  00                 	db	0
   734  007BE2  00                 	db	0
   735  007BE3  00                 	db	0
   736  007BE4  00                 	db	0
   737  007BE5  00                 	db	0
   738  007BE6  00                 	db	0
   739  007BE7  00                 	db	0
   740  007BE8  00                 	db	0
   741  007BE9  00                 	db	0
   742  007BEA  00                 	db	0
   743  007BEB  00                 	db	0
   744  007BEC  00                 	db	0
   745  007BED  00                 	db	0
   746  007BEE  00                 	db	0
   747  007BEF  00                 	db	0
   748  007BF0  00                 	db	0
   749  007BF1  00                 	db	0
   750  007BF2  40                 	db	64
   751  007BF3  FD                 	db	253
   752  007BF4  FF                 	db	255
   753  007BF5  DF                 	db	223
   754  007BF6  02                 	db	2
   755  007BF7  00                 	db	0
   756  007BF8  00                 	db	0
   757  007BF9  00                 	db	0
   758  007BFA  00                 	db	0
   759  007BFB  00                 	db	0
   760  007BFC  00                 	db	0
   761  007BFD  00                 	db	0
   762  007BFE  00                 	db	0
   763  007BFF  00                 	db	0
   764  007C00  00                 	db	0
   765  007C01  00                 	db	0
   766  007C02  00                 	db	0
   767  007C03  00                 	db	0
   768  007C04  00                 	db	0
   769  007C05  00                 	db	0
   770  007C06  C0                 	db	192
   771  007C07  E0                 	db	224
   772  007C08  F8                 	db	248
   773  007C09  3F                 	db	63
   774  007C0A  1F                 	db	31
   775  007C0B  0F                 	db	15
   776  007C0C  00                 	db	0
   777  007C0D  00                 	db	0
   778  007C0E  00                 	db	0
   779  007C0F  00                 	db	0
   780  007C10  00                 	db	0
   781  007C11  00                 	db	0
   782  007C12  00                 	db	0
   783  007C13  00                 	db	0
   784  007C14  00                 	db	0
   785  007C15  00                 	db	0
   786  007C16  00                 	db	0
   787  007C17  00                 	db	0
   788  007C18  00                 	db	0
   789  007C19  00                 	db	0
   790  007C1A  00                 	db	0
   791  007C1B  00                 	db	0
   792  007C1C  00                 	db	0
   793  007C1D  00                 	db	0
   794  007C1E  00                 	db	0
   795  007C1F  00                 	db	0
   796  007C20  00                 	db	0
   797  007C21  00                 	db	0
   798  007C22  00                 	db	0
   799  007C23  00                 	db	0
   800  007C24  00                 	db	0
   801  007C25  00                 	db	0
   802  007C26  00                 	db	0
   803  007C27  00                 	db	0
   804  007C28  00                 	db	0
   805  007C29  00                 	db	0
   806  007C2A  00                 	db	0
   807  007C2B  00                 	db	0
   808  007C2C  00                 	db	0
   809  007C2D  00                 	db	0
   810  007C2E  00                 	db	0
   811  007C2F  00                 	db	0
   812  007C30  00                 	db	0
   813  007C31  00                 	db	0
   814  007C32  00                 	db	0
   815  007C33  00                 	db	0
   816  007C34  00                 	db	0
   817  007C35  00                 	db	0
   818  007C36  00                 	db	0
   819  007C37  00                 	db	0
   820  007C38  00                 	db	0
   821  007C39  00                 	db	0
   822  007C3A  00                 	db	0
   823  007C3B  00                 	db	0
   824  007C3C  00                 	db	0
   825  007C3D  00                 	db	0
   826  007C3E  00                 	db	0
   827  007C3F  00                 	db	0
   828  007C40  00                 	db	0
   829  007C41  00                 	db	0
   830  007C42  00                 	db	0
   831  007C43  00                 	db	0
   832  007C44  00                 	db	0
   833  007C45  00                 	db	0
   834  007C46  00                 	db	0
   835  007C47  00                 	db	0
   836  007C48  00                 	db	0
   837  007C49  00                 	db	0
   838  007C4A  00                 	db	0
   839  007C4B  00                 	db	0
   840  007C4C  00                 	db	0
   841  007C4D  00                 	db	0
   842  007C4E  00                 	db	0
   843  007C4F  00                 	db	0
   844  007C50  00                 	db	0
   845  007C51  00                 	db	0
   846  007C52  00                 	db	0
   847  007C53  00                 	db	0
   848  007C54  00                 	db	0
   849  007C55  00                 	db	0
   850  007C56  00                 	db	0
   851  007C57  00                 	db	0
   852  007C58  00                 	db	0
   853  007C59  00                 	db	0
   854  007C5A  00                 	db	0
   855  007C5B  00                 	db	0
   856  007C5C  00                 	db	0
   857  007C5D  00                 	db	0
   858  007C5E  00                 	db	0
   859  007C5F  00                 	db	0
   860  007C60  00                 	db	0
   861  007C61  00                 	db	0
   862  007C62  00                 	db	0
   863  007C63  00                 	db	0
   864  007C64  00                 	db	0
   865  007C65  00                 	db	0
   866  007C66  00                 	db	0
   867  007C67  00                 	db	0
   868  007C68  00                 	db	0
   869  007C69  00                 	db	0
   870  007C6A  00                 	db	0
   871  007C6B  00                 	db	0
   872  007C6C  00                 	db	0
   873  007C6D  00                 	db	0
   874  007C6E  00                 	db	0
   875  007C6F  00                 	db	0
   876  007C70  00                 	db	0
   877  007C71  00                 	db	0
   878  007C72  02                 	db	2
   879  007C73  0C                 	db	12
   880  007C74  FE                 	db	254
   881  007C75  FC                 	db	252
   882  007C76  FE                 	db	254
   883  007C77  3C                 	db	60
   884  007C78  1E                 	db	30
   885  007C79  0E                 	db	14
   886  007C7A  07                 	db	7
   887  007C7B  07                 	db	7
   888  007C7C  07                 	db	7
   889  007C7D  07                 	db	7
   890  007C7E  07                 	db	7
   891  007C7F  07                 	db	7
   892  007C80  0E                 	db	14
   893  007C81  1E                 	db	30
   894  007C82  1C                 	db	28
   895  007C83  1C                 	db	28
   896  007C84  3C                 	db	60
   897  007C85  1C                 	db	28
   898  007C86  38                 	db	56
   899  007C87  3C                 	db	60
   900  007C88  78                 	db	120
   901  007C89  FC                 	db	252
   902  007C8A  FE                 	db	254
   903  007C8B  BF                 	db	191
   904  007C8C  1F                 	db	31
   905  007C8D  1E                 	db	30
   906  007C8E  1C                 	db	28
   907  007C8F  3C                 	db	60
   908  007C90  3C                 	db	60
   909  007C91  2A                 	db	42
   910  007C92  00                 	db	0
   911  007C93  00                 	db	0
   912  007C94  00                 	db	0
   913  007C95  00                 	db	0
   914  007C96  00                 	db	0
   915  007C97  00                 	db	0
   916  007C98  00                 	db	0
   917  007C99  00                 	db	0
   918  007C9A  00                 	db	0
   919  007C9B  00                 	db	0
   920  007C9C  00                 	db	0
   921  007C9D  00                 	db	0
   922  007C9E  00                 	db	0
   923  007C9F  00                 	db	0
   924  007CA0  00                 	db	0
   925  007CA1  00                 	db	0
   926  007CA2  00                 	db	0
   927  007CA3  00                 	db	0
   928  007CA4  00                 	db	0
   929  007CA5  00                 	db	0
   930  007CA6  00                 	db	0
   931  007CA7  00                 	db	0
   932  007CA8  00                 	db	0
   933  007CA9  00                 	db	0
   934  007CAA  00                 	db	0
   935  007CAB  00                 	db	0
   936  007CAC  00                 	db	0
   937  007CAD  00                 	db	0
   938  007CAE  00                 	db	0
   939  007CAF  00                 	db	0
   940  007CB0  00                 	db	0
   941  007CB1  00                 	db	0
   942  007CB2  00                 	db	0
   943  007CB3  00                 	db	0
   944  007CB4  00                 	db	0
   945  007CB5  00                 	db	0
   946  007CB6  00                 	db	0
   947  007CB7  00                 	db	0
   948  007CB8  00                 	db	0
   949  007CB9  00                 	db	0
   950  007CBA  00                 	db	0
   951  007CBB  00                 	db	0
   952  007CBC  00                 	db	0
   953  007CBD  00                 	db	0
   954  007CBE  00                 	db	0
   955  007CBF  00                 	db	0
   956  007CC0  00                 	db	0
   957  007CC1  00                 	db	0
   958  007CC2  00                 	db	0
   959  007CC3  00                 	db	0
   960  007CC4  00                 	db	0
   961  007CC5  00                 	db	0
   962  007CC6  00                 	db	0
   963  007CC7  00                 	db	0
   964  007CC8  00                 	db	0
   965  007CC9  00                 	db	0
   966  007CCA  00                 	db	0
   967  007CCB  00                 	db	0
   968  007CCC  00                 	db	0
   969  007CCD  00                 	db	0
   970  007CCE  00                 	db	0
   971  007CCF  00                 	db	0
   972  007CD0  00                 	db	0
   973  007CD1  00                 	db	0
   974  007CD2  00                 	db	0
   975  007CD3  00                 	db	0
   976  007CD4  00                 	db	0
   977  007CD5  00                 	db	0
   978  007CD6  00                 	db	0
   979  007CD7  00                 	db	0
   980  007CD8  00                 	db	0
   981  007CD9  00                 	db	0
   982  007CDA  00                 	db	0
   983  007CDB  00                 	db	0
   984  007CDC  00                 	db	0
   985  007CDD  00                 	db	0
   986  007CDE  00                 	db	0
   987  007CDF  00                 	db	0
   988  007CE0  00                 	db	0
   989  007CE1  00                 	db	0
   990  007CE2  00                 	db	0
   991  007CE3  00                 	db	0
   992  007CE4  00                 	db	0
   993  007CE5  00                 	db	0
   994  007CE6  00                 	db	0
   995  007CE7  00                 	db	0
   996  007CE8  00                 	db	0
   997  007CE9  00                 	db	0
   998  007CEA  00                 	db	0
   999  007CEB  00                 	db	0
  1000  007CEC  00                 	db	0
  1001  007CED  00                 	db	0
  1002  007CEE  00                 	db	0
  1003  007CEF  00                 	db	0
  1004  007CF0  00                 	db	0
  1005  007CF1  00                 	db	0
  1006  007CF2  00                 	db	0
  1007  007CF3  00                 	db	0
  1008  007CF4  00                 	db	0
  1009  007CF5  00                 	db	0
  1010  007CF6  00                 	db	0
  1011  007CF7  00                 	db	0
  1012  007CF8  00                 	db	0
  1013  007CF9  04                 	db	4
  1014  007CFA  0C                 	db	12
  1015  007CFB  1C                 	db	28
  1016  007CFC  FC                 	db	252
  1017  007CFD  FE                 	db	254
  1018  007CFE  FF                 	db	255
  1019  007CFF  FC                 	db	252
  1020  007D00  1C                 	db	28
  1021  007D01  18                 	db	24
  1022  007D02  0C                 	db	12
  1023  007D03  00                 	db	0
  1024  007D04  00                 	db	0
  1025  007D05  00                 	db	0
  1026  007D06  00                 	db	0
  1027  007D07  00                 	db	0
  1028  007D08  00                 	db	0
  1029  007D09  00                 	db	0
  1030  007D0A  80                 	db	128
  1031  007D0B  80                 	db	128
  1032  007D0C  00                 	db	0
  1033  007D0D  00                 	db	0
  1034  007D0E  00                 	db	0
  1035  007D0F  00                 	db	0
  1036  007D10  00                 	db	0
  1037  007D11  00                 	db	0
  1038  007D12  00                 	db	0
  1039  007D13  00                 	db	0
  1040  007D14  00                 	db	0
  1041  007D15  00                 	db	0
  1042  007D16  00                 	db	0
  1043  007D17  00                 	db	0
  1044  007D18  00                 	db	0
  1045  007D19  00                 	db	0
  1046  007D1A  00                 	db	0
  1047  007D1B  00                 	db	0
  1048  007D1C  00                 	db	0
  1049  007D1D  00                 	db	0
  1050  007D1E  00                 	db	0
  1051  007D1F  00                 	db	0
  1052  007D20  00                 	db	0
  1053  007D21  00                 	db	0
  1054  007D22  00                 	db	0
  1055  007D23  00                 	db	0
  1056  007D24  00                 	db	0
  1057  007D25  00                 	db	0
  1058  007D26  00                 	db	0
  1059  007D27  00                 	db	0
  1060  007D28  00                 	db	0
  1061  007D29  00                 	db	0
  1062  007D2A  00                 	db	0
  1063  007D2B  00                 	db	0
  1064  007D2C  00                 	db	0
  1065  007D2D  00                 	db	0
  1066  007D2E  00                 	db	0
  1067  007D2F  00                 	db	0
  1068  007D30  00                 	db	0
  1069  007D31  00                 	db	0
  1070  007D32  00                 	db	0
  1071  007D33  00                 	db	0
  1072  007D34  00                 	db	0
  1073  007D35  00                 	db	0
  1074  007D36  00                 	db	0
  1075  007D37  00                 	db	0
  1076  007D38  00                 	db	0
  1077  007D39  00                 	db	0
  1078  007D3A  00                 	db	0
  1079  007D3B  00                 	db	0
  1080  007D3C  00                 	db	0
  1081  007D3D  00                 	db	0
  1082  007D3E  00                 	db	0
  1083  007D3F  00                 	db	0
  1084  007D40  00                 	db	0
  1085  007D41  00                 	db	0
  1086  007D42  00                 	db	0
  1087  007D43                     __end_of_image:
  1088                           	opt stack 0
  1089  007D43                     _pic:
  1090                           	opt stack 0
  1091  007D43  00                 	db	0
  1092  007D44  00                 	db	0
  1093  007D45  00                 	db	0
  1094  007D46  00                 	db	0
  1095  007D47  00                 	db	0
  1096  007D48  00                 	db	0
  1097  007D49  00                 	db	0
  1098  007D4A  BE                 	db	190
  1099  007D4B  00                 	db	0
  1100  007D4C  00                 	db	0
  1101  007D4D  00                 	db	0
  1102  007D4E  0E                 	db	14
  1103  007D4F  00                 	db	0
  1104  007D50  0E                 	db	14
  1105  007D51  00                 	db	0
  1106  007D52  44                 	db	68
  1107  007D53  FE                 	db	254
  1108  007D54  44                 	db	68
  1109  007D55  FE                 	db	254
  1110  007D56  44                 	db	68
  1111  007D57  48                 	db	72
  1112  007D58  54                 	db	84
  1113  007D59  FE                 	db	254
  1114  007D5A  54                 	db	84
  1115  007D5B  24                 	db	36
  1116  007D5C  46                 	db	70
  1117  007D5D  26                 	db	38
  1118  007D5E  10                 	db	16
  1119  007D5F  C8                 	db	200
  1120  007D60  C4                 	db	196
  1121  007D61  6C                 	db	108
  1122  007D62  92                 	db	146
  1123  007D63  AA                 	db	170
  1124  007D64  44                 	db	68
  1125  007D65  80                 	db	128
  1126  007D66  00                 	db	0
  1127  007D67  08                 	db	8
  1128  007D68  06                 	db	6
  1129  007D69  00                 	db	0
  1130  007D6A  00                 	db	0
  1131  007D6B  00                 	db	0
  1132  007D6C  00                 	db	0
  1133  007D6D  7C                 	db	124
  1134  007D6E  82                 	db	130
  1135  007D6F  00                 	db	0
  1136  007D70  00                 	db	0
  1137  007D71  82                 	db	130
  1138  007D72  7C                 	db	124
  1139  007D73  00                 	db	0
  1140  007D74  00                 	db	0
  1141  007D75  28                 	db	40
  1142  007D76  10                 	db	16
  1143  007D77  7C                 	db	124
  1144  007D78  10                 	db	16
  1145  007D79  28                 	db	40
  1146  007D7A  10                 	db	16
  1147  007D7B  10                 	db	16
  1148  007D7C  7C                 	db	124
  1149  007D7D  10                 	db	16
  1150  007D7E  10                 	db	16
  1151  007D7F  00                 	db	0
  1152  007D80  80                 	db	128
  1153  007D81  60                 	db	96
  1154  007D82  00                 	db	0
  1155  007D83  00                 	db	0
  1156  007D84  10                 	db	16
  1157  007D85  10                 	db	16
  1158  007D86  10                 	db	16
  1159  007D87  10                 	db	16
  1160  007D88  10                 	db	16
  1161  007D89  00                 	db	0
  1162  007D8A  C0                 	db	192
  1163  007D8B  C0                 	db	192
  1164  007D8C  00                 	db	0
  1165  007D8D  00                 	db	0
  1166  007D8E  40                 	db	64
  1167  007D8F  20                 	db	32
  1168  007D90  10                 	db	16
  1169  007D91  08                 	db	8
  1170  007D92  04                 	db	4
  1171  007D93  7C                 	db	124
  1172  007D94  82                 	db	130
  1173  007D95  82                 	db	130
  1174  007D96  7C                 	db	124
  1175  007D97  00                 	db	0
  1176  007D98  00                 	db	0
  1177  007D99  84                 	db	132
  1178  007D9A  FE                 	db	254
  1179  007D9B  80                 	db	128
  1180  007D9C  00                 	db	0
  1181  007D9D  84                 	db	132
  1182  007D9E  C2                 	db	194
  1183  007D9F  A2                 	db	162
  1184  007DA0  92                 	db	146
  1185  007DA1  8C                 	db	140
  1186  007DA2  44                 	db	68
  1187  007DA3  82                 	db	130
  1188  007DA4  92                 	db	146
  1189  007DA5  92                 	db	146
  1190  007DA6  6C                 	db	108
  1191  007DA7  30                 	db	48
  1192  007DA8  28                 	db	40
  1193  007DA9  24                 	db	36
  1194  007DAA  FE                 	db	254
  1195  007DAB  20                 	db	32
  1196  007DAC  4E                 	db	78
  1197  007DAD  8A                 	db	138
  1198  007DAE  8A                 	db	138
  1199  007DAF  8A                 	db	138
  1200  007DB0  72                 	db	114
  1201  007DB1  78                 	db	120
  1202  007DB2  94                 	db	148
  1203  007DB3  92                 	db	146
  1204  007DB4  92                 	db	146
  1205  007DB5  60                 	db	96
  1206  007DB6  02                 	db	2
  1207  007DB7  E2                 	db	226
  1208  007DB8  12                 	db	18
  1209  007DB9  0A                 	db	10
  1210  007DBA  06                 	db	6
  1211  007DBB  6C                 	db	108
  1212  007DBC  92                 	db	146
  1213  007DBD  92                 	db	146
  1214  007DBE  92                 	db	146
  1215  007DBF  6C                 	db	108
  1216  007DC0  0C                 	db	12
  1217  007DC1  92                 	db	146
  1218  007DC2  92                 	db	146
  1219  007DC3  52                 	db	82
  1220  007DC4  3C                 	db	60
  1221  007DC5  00                 	db	0
  1222  007DC6  66                 	db	102
  1223  007DC7  66                 	db	102
  1224  007DC8  00                 	db	0
  1225  007DC9  00                 	db	0
  1226  007DCA  00                 	db	0
  1227  007DCB  46                 	db	70
  1228  007DCC  36                 	db	54
  1229  007DCD  00                 	db	0
  1230  007DCE  00                 	db	0
  1231  007DCF  10                 	db	16
  1232  007DD0  28                 	db	40
  1233  007DD1  44                 	db	68
  1234  007DD2  82                 	db	130
  1235  007DD3  00                 	db	0
  1236  007DD4  28                 	db	40
  1237  007DD5  28                 	db	40
  1238  007DD6  28                 	db	40
  1239  007DD7  28                 	db	40
  1240  007DD8  28                 	db	40
  1241  007DD9  00                 	db	0
  1242  007DDA  82                 	db	130
  1243  007DDB  44                 	db	68
  1244  007DDC  28                 	db	40
  1245  007DDD  10                 	db	16
  1246  007DDE  04                 	db	4
  1247  007DDF  02                 	db	2
  1248  007DE0  A2                 	db	162
  1249  007DE1  12                 	db	18
  1250  007DE2  0C                 	db	12
  1251  007DE3  64                 	db	100
  1252  007DE4  92                 	db	146
  1253  007DE5  F2                 	db	242
  1254  007DE6  82                 	db	130
  1255  007DE7  7C                 	db	124
  1256  007DE8  FC                 	db	252
  1257  007DE9  22                 	db	34
  1258  007DEA  22                 	db	34
  1259  007DEB  22                 	db	34
  1260  007DEC  FC                 	db	252
  1261  007DED  FE                 	db	254
  1262  007DEE  92                 	db	146
  1263  007DEF  92                 	db	146
  1264  007DF0  92                 	db	146
  1265  007DF1  6C                 	db	108
  1266  007DF2  7C                 	db	124
  1267  007DF3  82                 	db	130
  1268  007DF4  82                 	db	130
  1269  007DF5  82                 	db	130
  1270  007DF6  44                 	db	68
  1271  007DF7  FE                 	db	254
  1272  007DF8  82                 	db	130
  1273  007DF9  82                 	db	130
  1274  007DFA  82                 	db	130
  1275  007DFB  7C                 	db	124
  1276  007DFC  FE                 	db	254
  1277  007DFD  92                 	db	146
  1278  007DFE  92                 	db	146
  1279  007DFF  92                 	db	146
  1280  007E00  92                 	db	146
  1281  007E01  FE                 	db	254
  1282  007E02  12                 	db	18
  1283  007E03  12                 	db	18
  1284  007E04  12                 	db	18
  1285  007E05  12                 	db	18
  1286  007E06  7C                 	db	124
  1287  007E07  82                 	db	130
  1288  007E08  92                 	db	146
  1289  007E09  92                 	db	146
  1290  007E0A  74                 	db	116
  1291  007E0B  FE                 	db	254
  1292  007E0C  10                 	db	16
  1293  007E0D  10                 	db	16
  1294  007E0E  10                 	db	16
  1295  007E0F  FE                 	db	254
  1296  007E10  00                 	db	0
  1297  007E11  00                 	db	0
  1298  007E12  FE                 	db	254
  1299  007E13  00                 	db	0
  1300  007E14  00                 	db	0
  1301  007E15  40                 	db	64
  1302  007E16  80                 	db	128
  1303  007E17  82                 	db	130
  1304  007E18  7E                 	db	126
  1305  007E19  02                 	db	2
  1306  007E1A  FE                 	db	254
  1307  007E1B  10                 	db	16
  1308  007E1C  28                 	db	40
  1309  007E1D  44                 	db	68
  1310  007E1E  82                 	db	130
  1311  007E1F  FE                 	db	254
  1312  007E20  80                 	db	128
  1313  007E21  80                 	db	128
  1314  007E22  80                 	db	128
  1315  007E23  80                 	db	128
  1316  007E24  FE                 	db	254
  1317  007E25  04                 	db	4
  1318  007E26  08                 	db	8
  1319  007E27  04                 	db	4
  1320  007E28  FE                 	db	254
  1321  007E29  FE                 	db	254
  1322  007E2A  04                 	db	4
  1323  007E2B  08                 	db	8
  1324  007E2C  10                 	db	16
  1325  007E2D  FE                 	db	254
  1326  007E2E  7C                 	db	124
  1327  007E2F  82                 	db	130
  1328  007E30  82                 	db	130
  1329  007E31  82                 	db	130
  1330  007E32  7C                 	db	124
  1331  007E33  FE                 	db	254
  1332  007E34  12                 	db	18
  1333  007E35  12                 	db	18
  1334  007E36  12                 	db	18
  1335  007E37  0C                 	db	12
  1336  007E38  7C                 	db	124
  1337  007E39  82                 	db	130
  1338  007E3A  A2                 	db	162
  1339  007E3B  42                 	db	66
  1340  007E3C  BC                 	db	188
  1341  007E3D  FE                 	db	254
  1342  007E3E  12                 	db	18
  1343  007E3F  32                 	db	50
  1344  007E40  52                 	db	82
  1345  007E41  8C                 	db	140
  1346  007E42  8C                 	db	140
  1347  007E43  92                 	db	146
  1348  007E44  92                 	db	146
  1349  007E45  92                 	db	146
  1350  007E46  62                 	db	98
  1351  007E47  02                 	db	2
  1352  007E48  02                 	db	2
  1353  007E49  FE                 	db	254
  1354  007E4A  02                 	db	2
  1355  007E4B  02                 	db	2
  1356  007E4C  7E                 	db	126
  1357  007E4D  80                 	db	128
  1358  007E4E  80                 	db	128
  1359  007E4F  80                 	db	128
  1360  007E50  7E                 	db	126
  1361  007E51  3E                 	db	62
  1362  007E52  40                 	db	64
  1363  007E53  80                 	db	128
  1364  007E54  40                 	db	64
  1365  007E55  3E                 	db	62
  1366  007E56  7E                 	db	126
  1367  007E57  80                 	db	128
  1368  007E58  7E                 	db	126
  1369  007E59  80                 	db	128
  1370  007E5A  7E                 	db	126
  1371  007E5B  C6                 	db	198
  1372  007E5C  28                 	db	40
  1373  007E5D  10                 	db	16
  1374  007E5E  28                 	db	40
  1375  007E5F  C6                 	db	198
  1376  007E60  0E                 	db	14
  1377  007E61  10                 	db	16
  1378  007E62  F0                 	db	240
  1379  007E63  10                 	db	16
  1380  007E64  0E                 	db	14
  1381  007E65  C2                 	db	194
  1382  007E66  A2                 	db	162
  1383  007E67  92                 	db	146
  1384  007E68  8A                 	db	138
  1385  007E69  86                 	db	134
  1386  007E6A  00                 	db	0
  1387  007E6B  00                 	db	0
  1388  007E6C  FE                 	db	254
  1389  007E6D  82                 	db	130
  1390  007E6E  00                 	db	0
  1391  007E6F  04                 	db	4
  1392  007E70  08                 	db	8
  1393  007E71  10                 	db	16
  1394  007E72  20                 	db	32
  1395  007E73  40                 	db	64
  1396  007E74  00                 	db	0
  1397  007E75  82                 	db	130
  1398  007E76  FE                 	db	254
  1399  007E77  00                 	db	0
  1400  007E78  00                 	db	0
  1401  007E79  08                 	db	8
  1402  007E7A  04                 	db	4
  1403  007E7B  02                 	db	2
  1404  007E7C  04                 	db	4
  1405  007E7D  08                 	db	8
  1406  007E7E  80                 	db	128
  1407  007E7F  80                 	db	128
  1408  007E80  80                 	db	128
  1409  007E81  80                 	db	128
  1410  007E82  80                 	db	128
  1411  007E83  00                 	db	0
  1412  007E84  00                 	db	0
  1413  007E85  01                 	db	1
  1414  007E86  02                 	db	2
  1415  007E87  04                 	db	4
  1416  007E88  40                 	db	64
  1417  007E89  A8                 	db	168
  1418  007E8A  A8                 	db	168
  1419  007E8B  A8                 	db	168
  1420  007E8C  F0                 	db	240
  1421  007E8D  FE                 	db	254
  1422  007E8E  88                 	db	136
  1423  007E8F  88                 	db	136
  1424  007E90  88                 	db	136
  1425  007E91  70                 	db	112
  1426  007E92  70                 	db	112
  1427  007E93  88                 	db	136
  1428  007E94  88                 	db	136
  1429  007E95  88                 	db	136
  1430  007E96  40                 	db	64
  1431  007E97  70                 	db	112
  1432  007E98  88                 	db	136
  1433  007E99  88                 	db	136
  1434  007E9A  90                 	db	144
  1435  007E9B  FE                 	db	254
  1436  007E9C  70                 	db	112
  1437  007E9D  A8                 	db	168
  1438  007E9E  A8                 	db	168
  1439  007E9F  A8                 	db	168
  1440  007EA0  30                 	db	48
  1441  007EA1  10                 	db	16
  1442  007EA2  FC                 	db	252
  1443  007EA3  12                 	db	18
  1444  007EA4  02                 	db	2
  1445  007EA5  04                 	db	4
  1446  007EA6  18                 	db	24
  1447  007EA7  A4                 	db	164
  1448  007EA8  A4                 	db	164
  1449  007EA9  A4                 	db	164
  1450  007EAA  7C                 	db	124
  1451  007EAB  FE                 	db	254
  1452  007EAC  10                 	db	16
  1453  007EAD  08                 	db	8
  1454  007EAE  08                 	db	8
  1455  007EAF  F0                 	db	240
  1456  007EB0  00                 	db	0
  1457  007EB1  00                 	db	0
  1458  007EB2  FA                 	db	250
  1459  007EB3  00                 	db	0
  1460  007EB4  00                 	db	0
  1461  007EB5  00                 	db	0
  1462  007EB6  80                 	db	128
  1463  007EB7  7A                 	db	122
  1464  007EB8  00                 	db	0
  1465  007EB9  00                 	db	0
  1466  007EBA  FE                 	db	254
  1467  007EBB  20                 	db	32
  1468  007EBC  50                 	db	80
  1469  007EBD  88                 	db	136
  1470  007EBE  00                 	db	0
  1471  007EBF  00                 	db	0
  1472  007EC0  FE                 	db	254
  1473  007EC1  00                 	db	0
  1474  007EC2  00                 	db	0
  1475  007EC3  00                 	db	0
  1476  007EC4  F8                 	db	248
  1477  007EC5  08                 	db	8
  1478  007EC6  10                 	db	16
  1479  007EC7  08                 	db	8
  1480  007EC8  F0                 	db	240
  1481  007EC9  F8                 	db	248
  1482  007ECA  10                 	db	16
  1483  007ECB  08                 	db	8
  1484  007ECC  08                 	db	8
  1485  007ECD  F0                 	db	240
  1486  007ECE  70                 	db	112
  1487  007ECF  88                 	db	136
  1488  007ED0  88                 	db	136
  1489  007ED1  88                 	db	136
  1490  007ED2  70                 	db	112
  1491  007ED3  F8                 	db	248
  1492  007ED4  28                 	db	40
  1493  007ED5  28                 	db	40
  1494  007ED6  28                 	db	40
  1495  007ED7  10                 	db	16
  1496  007ED8  10                 	db	16
  1497  007ED9  28                 	db	40
  1498  007EDA  28                 	db	40
  1499  007EDB  30                 	db	48
  1500  007EDC  FC                 	db	252
  1501  007EDD  F8                 	db	248
  1502  007EDE  10                 	db	16
  1503  007EDF  08                 	db	8
  1504  007EE0  08                 	db	8
  1505  007EE1  10                 	db	16
  1506  007EE2  90                 	db	144
  1507  007EE3  A8                 	db	168
  1508  007EE4  A8                 	db	168
  1509  007EE5  A8                 	db	168
  1510  007EE6  40                 	db	64
  1511  007EE7  08                 	db	8
  1512  007EE8  7E                 	db	126
  1513  007EE9  88                 	db	136
  1514  007EEA  80                 	db	128
  1515  007EEB  40                 	db	64
  1516  007EEC  78                 	db	120
  1517  007EED  80                 	db	128
  1518  007EEE  80                 	db	128
  1519  007EEF  40                 	db	64
  1520  007EF0  F8                 	db	248
  1521  007EF1  38                 	db	56
  1522  007EF2  40                 	db	64
  1523  007EF3  80                 	db	128
  1524  007EF4  40                 	db	64
  1525  007EF5  38                 	db	56
  1526  007EF6  78                 	db	120
  1527  007EF7  80                 	db	128
  1528  007EF8  78                 	db	120
  1529  007EF9  80                 	db	128
  1530  007EFA  78                 	db	120
  1531  007EFB  88                 	db	136
  1532  007EFC  50                 	db	80
  1533  007EFD  20                 	db	32
  1534  007EFE  50                 	db	80
  1535  007EFF  88                 	db	136
  1536  007F00  18                 	db	24
  1537  007F01  A0                 	db	160
  1538  007F02  A0                 	db	160
  1539  007F03  A0                 	db	160
  1540  007F04  78                 	db	120
  1541  007F05  88                 	db	136
  1542  007F06  C8                 	db	200
  1543  007F07  A8                 	db	168
  1544  007F08  98                 	db	152
  1545  007F09  88                 	db	136
  1546  007F0A  10                 	db	16
  1547  007F0B  6C                 	db	108
  1548  007F0C  82                 	db	130
  1549  007F0D  00                 	db	0
  1550  007F0E  00                 	db	0
  1551  007F0F  00                 	db	0
  1552  007F10  00                 	db	0
  1553  007F11  7E                 	db	126
  1554  007F12  00                 	db	0
  1555  007F13  00                 	db	0
  1556  007F14  00                 	db	0
  1557  007F15  82                 	db	130
  1558  007F16  6C                 	db	108
  1559  007F17  10                 	db	16
  1560  007F18  00                 	db	0
  1561  007F19  20                 	db	32
  1562  007F1A  10                 	db	16
  1563  007F1B  10                 	db	16
  1564  007F1C  08                 	db	8
  1565  007F1D  00                 	db	0
  1566  007F1E  FA                 	db	250
  1567  007F1F  FE                 	db	254
  1568  007F20  FE                 	db	254
  1569  007F21  FA                 	db	250
  1570  007F22  00                 	db	0
  1571  007F23  FE                 	db	254
  1572  007F24  A2                 	db	162
  1573  007F25  92                 	db	146
  1574  007F26  8A                 	db	138
  1575  007F27  8A                 	db	138
  1576  007F28  8A                 	db	138
  1577  007F29  8A                 	db	138
  1578  007F2A  CC                 	db	204
  1579  007F2B  38                 	db	56
  1580  007F2C  00                 	db	0
  1581  007F2D                     __end_of_pic:
  1582                           	opt stack 0
  1583  007F2D                     _dpowers:
  1584                           	opt stack 0
  1585  007F2D  0001               	dw	1
  1586  007F2F  0000               	dw	0
  1587  007F31  000A               	dw	10
  1588  007F33  0000               	dw	0
  1589  007F35  0064               	dw	100
  1590  007F37  0000               	dw	0
  1591  007F39  03E8               	dw	1000
  1592  007F3B  0000               	dw	0
  1593  007F3D  2710               	dw	10000
  1594  007F3F  0000               	dw	0
  1595  007F41  86A0               	dw	34464
  1596  007F43  0001               	dw	1
  1597  007F45  4240               	dw	16960
  1598  007F47  000F               	dw	15
  1599  007F49  9680               	dw	38528
  1600  007F4B  0098               	dw	152
  1601  007F4D  E100               	dw	57600
  1602  007F4F  05F5               	dw	1525
  1603  007F51  CA00               	dw	51712
  1604  007F53  3B9A               	dw	15258
  1605  007F55                     __end_of_dpowers:
  1606                           	opt stack 0
  1607  007F55                     __npowers_:
  1608                           	opt stack 0
  1609  007F55  00                 	db	0
  1610  007F56  80                 	db	128
  1611  007F57  3F                 	db	63
  1612  007F58  CD                 	db	205
  1613  007F59  CC                 	db	204
  1614  007F5A  3D                 	db	61
  1615  007F5B  D7                 	db	215
  1616  007F5C  23                 	db	35
  1617  007F5D  3C                 	db	60
  1618  007F5E  12                 	db	18
  1619  007F5F  83                 	db	131
  1620  007F60  3A                 	db	58
  1621  007F61  B7                 	db	183
  1622  007F62  D1                 	db	209
  1623  007F63  38                 	db	56
  1624  007F64  C6                 	db	198
  1625  007F65  27                 	db	39
  1626  007F66  37                 	db	55
  1627  007F67  38                 	db	56
  1628  007F68  86                 	db	134
  1629  007F69  35                 	db	53
  1630  007F6A  C0                 	db	192
  1631  007F6B  D6                 	db	214
  1632  007F6C  33                 	db	51
  1633  007F6D  CC                 	db	204
  1634  007F6E  2B                 	db	43
  1635  007F6F  32                 	db	50
  1636  007F70  70                 	db	112
  1637  007F71  89                 	db	137
  1638  007F72  30                 	db	48
  1639  007F73  E7                 	db	231
  1640  007F74  DB                 	db	219
  1641  007F75  2E                 	db	46
  1642  007F76  E5                 	db	229
  1643  007F77  3C                 	db	60
  1644  007F78  1E                 	db	30
  1645  007F79  42                 	db	66
  1646  007F7A  A2                 	db	162
  1647  007F7B  0D                 	db	13
  1648  007F7C                     __end_of__npowers_:
  1649                           	opt stack 0
  1650  007F7C                     __powers_:
  1651                           	opt stack 0
  1652  007F7C  00                 	db	0
  1653  007F7D  80                 	db	128
  1654  007F7E  3F                 	db	63
  1655  007F7F  00                 	db	0
  1656  007F80  20                 	db	32
  1657  007F81  41                 	db	65
  1658  007F82  00                 	db	0
  1659  007F83  C8                 	db	200
  1660  007F84  42                 	db	66
  1661  007F85  00                 	db	0
  1662  007F86  7A                 	db	122
  1663  007F87  44                 	db	68
  1664  007F88  40                 	db	64
  1665  007F89  1C                 	db	28
  1666  007F8A  46                 	db	70
  1667  007F8B  50                 	db	80
  1668  007F8C  C3                 	db	195
  1669  007F8D  47                 	db	71
  1670  007F8E  24                 	db	36
  1671  007F8F  74                 	db	116
  1672  007F90  49                 	db	73
  1673  007F91  97                 	db	151
  1674  007F92  18                 	db	24
  1675  007F93  4B                 	db	75
  1676  007F94  BC                 	db	188
  1677  007F95  BE                 	db	190
  1678  007F96  4C                 	db	76
  1679  007F97  6B                 	db	107
  1680  007F98  6E                 	db	110
  1681  007F99  4E                 	db	78
  1682  007F9A  03                 	db	3
  1683  007F9B  15                 	db	21
  1684  007F9C  50                 	db	80
  1685  007F9D  79                 	db	121
  1686  007F9E  AD                 	db	173
  1687  007F9F  60                 	db	96
  1688  007FA0  F3                 	db	243
  1689  007FA1  49                 	db	73
  1690  007FA2  71                 	db	113
  1691  007FA3                     __end_of__powers_:
  1692                           	opt stack 0
  1693  007FA3                     lcdplotpixel2@F4573:
  1694                           	opt stack 0
  1695  007FA3  01                 	db	1
  1696  007FA4  02                 	db	2
  1697  007FA5  04                 	db	4
  1698  007FA6  08                 	db	8
  1699  007FA7  10                 	db	16
  1700  007FA8  20                 	db	32
  1701  007FA9  40                 	db	64
  1702  007FAA  80                 	db	128
  1703  007FAB  00                 	db	0
  1704  007FAC                     __end_oflcdplotpixel2@F4573:
  1705                           	opt stack 0
  1706  0000                     _ADCON0	set	4034
  1707  0000                     _ADCON0bits	set	4034
  1708  0000                     _ADCON1bits	set	4033
  1709  0000                     _ADCON2bits	set	4032
  1710  0000                     _ADRESL	set	4035
  1711  0000                     _LATCbits	set	3979
  1712  0000                     _LATEbits	set	3981
  1713  0000                     _PORTBbits	set	3969
  1714  0000                     _PORTC	set	3970
  1715  0000                     _PORTD	set	3971
  1716  0000                     _PORTE	set	3972
  1717  0000                     _TRISA	set	3986
  1718  0000                     _TRISB	set	3987
  1719  0000                     _TRISC	set	3988
  1720  0000                     _TRISD	set	3989
  1721  0000                     _TRISE	set	3990
  1722  0000                     _ADRESH	set	4036
  1723  007FAC                     STR_8:
  1724  007FAC  25                 	db	37
  1725  007FAD  2E                 	db	46
  1726  007FAE  32                 	db	50	;'2'
  1727  007FAF  66                 	db	102	;'f'
  1728  007FB0  20                 	db	32
  1729  007FB1  6D                 	db	109	;'m'
  1730  007FB2  73                 	db	115	;'s'
  1731  007FB3  2F                 	db	47
  1732  007FB4  64                 	db	100	;'d'
  1733  007FB5  00                 	db	0
  1734  007FB6                     STR_9:
  1735  007FB6  25                 	db	37
  1736  007FB7  2E                 	db	46
  1737  007FB8  32                 	db	50	;'2'
  1738  007FB9  66                 	db	102	;'f'
  1739  007FBA  20                 	db	32
  1740  007FBB  75                 	db	117	;'u'
  1741  007FBC  73                 	db	115	;'s'
  1742  007FBD  2F                 	db	47
  1743  007FBE  64                 	db	100	;'d'
  1744  007FBF  00                 	db	0
  1745  007FC0                     STR_11:
  1746  007FC0  25                 	db	37
  1747  007FC1  2E                 	db	46
  1748  007FC2  32                 	db	50	;'2'
  1749  007FC3  66                 	db	102	;'f'
  1750  007FC4  6D                 	db	109	;'m'
  1751  007FC5  56                 	db	86	;'V'
  1752  007FC6  2F                 	db	47
  1753  007FC7  64                 	db	100	;'d'
  1754  007FC8  00                 	db	0
  1755  007FC9                     STR_12:
  1756  007FC9  20                 	db	32
  1757  007FCA  25                 	db	37
  1758  007FCB  2E                 	db	46
  1759  007FCC  32                 	db	50	;'2'
  1760  007FCD  66                 	db	102	;'f'
  1761  007FCE  56                 	db	86	;'V'
  1762  007FCF  70                 	db	112	;'p'
  1763  007FD0  70                 	db	112	;'p'
  1764  007FD1  00                 	db	0
  1765  007FD2                     STR_10:
  1766  007FD2  25                 	db	37
  1767  007FD3  2E                 	db	46
  1768  007FD4  32                 	db	50	;'2'
  1769  007FD5  66                 	db	102	;'f'
  1770  007FD6  56                 	db	86	;'V'
  1771  007FD7  2F                 	db	47
  1772  007FD8  64                 	db	100	;'d'
  1773  007FD9  00                 	db	0
  1774  007FDA                     STR_2:
  1775  007FDA  25                 	db	37
  1776  007FDB  2E                 	db	46
  1777  007FDC  32                 	db	50	;'2'
  1778  007FDD  66                 	db	102	;'f'
  1779  007FDE  6D                 	db	109	;'m'
  1780  007FDF  56                 	db	86	;'V'
  1781  007FE0  00                 	db	0
  1782  007FE1                     STR_3:
  1783  007FE1  25                 	db	37
  1784  007FE2  2E                 	db	46
  1785  007FE3  32                 	db	50	;'2'
  1786  007FE4  66                 	db	102	;'f'
  1787  007FE5  6D                 	db	109	;'m'
  1788  007FE6  73                 	db	115	;'s'
  1789  007FE7  00                 	db	0
  1790  007FE8                     STR_4:
  1791  007FE8  25                 	db	37
  1792  007FE9  2E                 	db	46
  1793  007FEA  32                 	db	50	;'2'
  1794  007FEB  66                 	db	102	;'f'
  1795  007FEC  75                 	db	117	;'u'
  1796  007FED  73                 	db	115	;'s'
  1797  007FEE  00                 	db	0
  1798  007FEF                     STR_1:
  1799  007FEF  25                 	db	37
  1800  007FF0  2E                 	db	46
  1801  007FF1  32                 	db	50	;'2'
  1802  007FF2  66                 	db	102	;'f'
  1803  007FF3  56                 	db	86	;'V'
  1804  007FF4  00                 	db	0
  1805  007FF5                     STR_5:
  1806  007FF5  25                 	db	37
  1807  007FF6  35                 	db	53	;'5'
  1808  007FF7  2E                 	db	46
  1809  007FF8  32                 	db	50	;'2'
  1810  007FF9  66                 	db	102	;'f'
  1811  007FFA  00                 	db	0
  1812  007FFB                     STR_7:
  1813  007FFB  25                 	db	37
  1814  007FFC  75                 	db	117	;'u'
  1815  007FFD  00                 	db	0
  1816  0000                     
  1817                           ; #config settings
  1818  007FFE  00                 	db	0	; dummy byte at the end
  1819  0000                     
  1820                           	psect	cinit
  1821  0037CC                     __pcinit:
  1822                           	opt stack 0
  1823  0037CC                     start_initialization:
  1824                           	opt stack 0
  1825  0037CC                     __initialization:
  1826                           	opt stack 0
  1827                           
  1828                           ; Clear objects allocated to BIGRAM (1025 bytes)
  1829  0037CC  EE03  F0FF         	lfsr	0,__pbssBIGRAM
  1830  0037D0  EE14 F001          	lfsr	1,1025
  1831  0037D4                     clear_0:
  1832  0037D4  6AEE               	clrf	postinc0,c
  1833  0037D6  50E5               	movf	postdec1,w,c
  1834  0037D8  50E1               	movf	fsr1l,w,c
  1835  0037DA  E1FC               	bnz	clear_0
  1836  0037DC  50E2               	movf	fsr1h,w,c
  1837  0037DE  E1FA               	bnz	clear_0
  1838                           
  1839                           ; Clear objects allocated to BANK2 (8 bytes)
  1840  0037E0  EE02  F041         	lfsr	0,__pbssBANK2
  1841  0037E4  0E08               	movlw	8
  1842  0037E6                     clear_1:
  1843  0037E6  6AEE               	clrf	postinc0,c
  1844  0037E8  06E8               	decf	wreg,f,c
  1845  0037EA  E1FD               	bnz	clear_1
  1846  0037EC                     end_of_initialization:
  1847                           	opt stack 0
  1848  0037EC                     __end_of__initialization:
  1849                           	opt stack 0
  1850  0037EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1851  0037EE  6EF8               	movwf	tblptru,c
  1852  0037F0  0100               	movlb	0
  1853  0037F2  EFC0  F031         	goto	_main	;jump to C main() function
  1854                           tblptru	equ	0xFF8
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           postdec1	equ	0xFE5
  1858                           fsr1h	equ	0xFE2
  1859                           fsr1l	equ	0xFE1
  1860                           
  1861                           	psect	bssBANK2
  1862  000241                     __pbssBANK2:
  1863                           	opt stack 0
  1864  000241                     _char_index:
  1865                           	opt stack 0
  1866  000241                     	ds	2
  1867  000243                     _curr_y_pos:
  1868                           	opt stack 0
  1869  000243                     	ds	2
  1870  000245                     _selected_side:
  1871                           	opt stack 0
  1872  000245                     	ds	2
  1873  000247                     _curr_page:
  1874                           	opt stack 0
  1875  000247                     	ds	2
  1876                           tblptru	equ	0xFF8
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           postdec1	equ	0xFE5
  1880                           fsr1h	equ	0xFE2
  1881                           fsr1l	equ	0xFE1
  1882                           
  1883                           	psect	bssBIGRAM
  1884  0003FF                     __pbssBIGRAM:
  1885                           	opt stack 0
  1886  0003FF                     _pixels:
  1887                           	opt stack 0
  1888  0003FF                     	ds	1025
  1889                           tblptru	equ	0xFF8
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           postdec1	equ	0xFE5
  1893                           fsr1h	equ	0xFE2
  1894                           fsr1l	equ	0xFE1
  1895                           
  1896                           	psect	cstackBANK2
  1897  000200                     __pcstackBANK2:
  1898                           	opt stack 0
  1899  000200                     main@delta:
  1900                           	opt stack 0
  1901                           
  1902                           ; 3 bytes @ 0x0
  1903  000200                     	ds	3
  1904  000203                     main@delta_370:
  1905                           	opt stack 0
  1906                           
  1907                           ; 3 bytes @ 0x3
  1908  000203                     	ds	3
  1909  000206                     main@tmp:
  1910                           	opt stack 0
  1911                           
  1912                           ; 2 bytes @ 0x6
  1913  000206                     	ds	2
  1914  000208                     main@y_393:
  1915                           	opt stack 0
  1916                           
  1917                           ; 2 bytes @ 0x8
  1918  000208                     	ds	2
  1919  00020A                     main@cur1_y_new:
  1920                           	opt stack 0
  1921                           
  1922                           ; 2 bytes @ 0xA
  1923  00020A                     	ds	2
  1924  00020C                     main@cur2_y_new:
  1925                           	opt stack 0
  1926                           
  1927                           ; 2 bytes @ 0xC
  1928  00020C                     	ds	2
  1929  00020E                     main@i:
  1930                           	opt stack 0
  1931                           
  1932                           ; 2 bytes @ 0xE
  1933  00020E                     	ds	2
  1934  000210                     main@i_353:
  1935                           	opt stack 0
  1936                           
  1937                           ; 2 bytes @ 0x10
  1938  000210                     	ds	2
  1939  000212                     main@cur1_x_new:
  1940                           	opt stack 0
  1941                           
  1942                           ; 2 bytes @ 0x12
  1943  000212                     	ds	2
  1944  000214                     main@cur2_x_new:
  1945                           	opt stack 0
  1946                           
  1947                           ; 2 bytes @ 0x14
  1948  000214                     	ds	2
  1949  000216                     main@i_366:
  1950                           	opt stack 0
  1951                           
  1952                           ; 2 bytes @ 0x16
  1953  000216                     	ds	2
  1954  000218                     main@i_369:
  1955                           	opt stack 0
  1956                           
  1957                           ; 2 bytes @ 0x18
  1958  000218                     	ds	2
  1959  00021A                     main@i_377:
  1960                           	opt stack 0
  1961                           
  1962                           ; 2 bytes @ 0x1A
  1963  00021A                     	ds	2
  1964  00021C                     main@y_div:
  1965                           	opt stack 0
  1966                           
  1967                           ; 3 bytes @ 0x1C
  1968  00021C                     	ds	3
  1969  00021F                     main@div:
  1970                           	opt stack 0
  1971                           
  1972                           ; 3 bytes @ 0x1F
  1973  00021F                     	ds	3
  1974  000222                     main@a_348:
  1975                           	opt stack 0
  1976                           
  1977                           ; 2 bytes @ 0x22
  1978  000222                     	ds	2
  1979  000224                     main@a_351:
  1980                           	opt stack 0
  1981                           
  1982                           ; 2 bytes @ 0x24
  1983  000224                     	ds	2
  1984  000226                     main@a_365:
  1985                           	opt stack 0
  1986                           
  1987                           ; 2 bytes @ 0x26
  1988  000226                     	ds	2
  1989  000228                     main@a_368:
  1990                           	opt stack 0
  1991                           
  1992                           ; 2 bytes @ 0x28
  1993  000228                     	ds	2
  1994  00022A                     main@a_359:
  1995                           	opt stack 0
  1996                           
  1997                           ; 2 bytes @ 0x2A
  1998  00022A                     	ds	2
  1999  00022C                     main@i_388:
  2000                           	opt stack 0
  2001                           
  2002                           ; 2 bytes @ 0x2C
  2003  00022C                     	ds	2
  2004  00022E                     main@a:
  2005                           	opt stack 0
  2006                           
  2007                           ; 2 bytes @ 0x2E
  2008  00022E                     	ds	2
  2009  000230                     main@cur1_y:
  2010                           	opt stack 0
  2011                           
  2012                           ; 2 bytes @ 0x30
  2013  000230                     	ds	2
  2014  000232                     main@cur2_y:
  2015                           	opt stack 0
  2016                           
  2017                           ; 2 bytes @ 0x32
  2018  000232                     	ds	2
  2019  000234                     main@cur1_x:
  2020                           	opt stack 0
  2021                           
  2022                           ; 2 bytes @ 0x34
  2023  000234                     	ds	2
  2024  000236                     main@cur2_x:
  2025                           	opt stack 0
  2026                           
  2027                           ; 2 bytes @ 0x36
  2028  000236                     	ds	2
  2029  000238                     _main$1209:
  2030                           	opt stack 0
  2031                           
  2032                           ; 3 bytes @ 0x38
  2033  000238                     	ds	3
  2034  00023B                     _main$1210:
  2035                           	opt stack 0
  2036                           
  2037                           ; 3 bytes @ 0x3B
  2038  00023B                     	ds	3
  2039  00023E                     main@val1:
  2040                           	opt stack 0
  2041                           
  2042                           ; 3 bytes @ 0x3E
  2043  00023E                     	ds	3
  2044                           tblptru	equ	0xFF8
  2045                           postinc0	equ	0xFEE
  2046                           wreg	equ	0xFE8
  2047                           postdec1	equ	0xFE5
  2048                           fsr1h	equ	0xFE2
  2049                           fsr1l	equ	0xFE1
  2050                           
  2051                           	psect	cstackBANK1
  2052  000100                     __pcstackBANK1:
  2053                           	opt stack 0
  2054  000100                     main@data:
  2055                           	opt stack 0
  2056                           
  2057                           ; 256 bytes @ 0x0
  2058  000100                     	ds	256
  2059                           tblptru	equ	0xFF8
  2060                           postinc0	equ	0xFEE
  2061                           wreg	equ	0xFE8
  2062                           postdec1	equ	0xFE5
  2063                           fsr1h	equ	0xFE2
  2064                           fsr1l	equ	0xFE1
  2065                           
  2066                           	psect	cstackBANK0
  2067  000060                     __pcstackBANK0:
  2068                           	opt stack 0
  2069  000060                     _sprintf$1215:
  2070                           	opt stack 0
  2071                           
  2072                           ; 3 bytes @ 0x0
  2073  000060                     	ds	3
  2074  000063                     sprintf@ap:
  2075                           	opt stack 0
  2076                           
  2077                           ; 2 bytes @ 0x3
  2078  000063                     	ds	2
  2079  000065                     sprintf@flag:
  2080                           	opt stack 0
  2081                           
  2082                           ; 2 bytes @ 0x5
  2083  000065                     	ds	2
  2084  000067                     sprintf@val:
  2085                           	opt stack 0
  2086                           
  2087                           ; 4 bytes @ 0x7
  2088  000067                     	ds	4
  2089  00006B                     sprintf@width:
  2090                           	opt stack 0
  2091                           
  2092                           ; 2 bytes @ 0xB
  2093  00006B                     	ds	2
  2094  00006D                     sprintf@tmpval:
  2095                           	opt stack 0
  2096                           
  2097                           ; 4 bytes @ 0xD
  2098  00006D                     	ds	4
  2099  000071                     sprintf@exp:
  2100                           	opt stack 0
  2101                           
  2102                           ; 2 bytes @ 0x11
  2103  000071                     	ds	2
  2104  000073                     sprintf@fval:
  2105                           	opt stack 0
  2106                           
  2107                           ; 3 bytes @ 0x13
  2108  000073                     	ds	3
  2109  000076                     sprintf@prec:
  2110                           	opt stack 0
  2111                           
  2112                           ; 2 bytes @ 0x16
  2113  000076                     	ds	2
  2114  000078                     sprintf@c:
  2115                           	opt stack 0
  2116                           
  2117                           ; 1 bytes @ 0x18
  2118  000078                     	ds	1
  2119  000079                     main@buf_384:
  2120                           	opt stack 0
  2121                           
  2122                           ; 40 bytes @ 0x19
  2123  000079                     	ds	40
  2124  0000A1                     main@str:
  2125                           	opt stack 0
  2126                           
  2127                           ; 15 bytes @ 0x41
  2128  0000A1                     	ds	15
  2129  0000B0                     main@old1:
  2130                           	opt stack 0
  2131                           
  2132                           ; 3 bytes @ 0x50
  2133  0000B0                     	ds	3
  2134  0000B3                     main@old2:
  2135                           	opt stack 0
  2136                           
  2137                           ; 3 bytes @ 0x53
  2138  0000B3                     	ds	3
  2139  0000B6                     main@buf2:
  2140                           	opt stack 0
  2141                           
  2142                           ; 17 bytes @ 0x56
  2143  0000B6                     	ds	17
  2144  0000C7                     main@buf:
  2145                           	opt stack 0
  2146                           
  2147                           ; 10 bytes @ 0x67
  2148  0000C7                     	ds	10
  2149  0000D1                     main@buf_371:
  2150                           	opt stack 0
  2151                           
  2152                           ; 10 bytes @ 0x71
  2153  0000D1                     	ds	10
  2154  0000DB                     main@y2:
  2155                           	opt stack 0
  2156                           
  2157                           ; 2 bytes @ 0x7B
  2158  0000DB                     	ds	2
  2159  0000DD                     main@y:
  2160                           	opt stack 0
  2161                           
  2162                           ; 2 bytes @ 0x7D
  2163  0000DD                     	ds	2
  2164  0000DF                     main@y_352:
  2165                           	opt stack 0
  2166                           
  2167                           ; 2 bytes @ 0x7F
  2168  0000DF                     	ds	2
  2169  0000E1                     main@y_364:
  2170                           	opt stack 0
  2171                           
  2172                           ; 2 bytes @ 0x81
  2173  0000E1                     	ds	2
  2174  0000E3                     main@y_367:
  2175                           	opt stack 0
  2176                           
  2177                           ; 2 bytes @ 0x83
  2178  0000E3                     	ds	2
  2179  0000E5                     main@freeze:
  2180                           	opt stack 0
  2181                           
  2182                           ; 2 bytes @ 0x85
  2183  0000E5                     	ds	2
  2184  0000E7                     main@min_y:
  2185                           	opt stack 0
  2186                           
  2187                           ; 1 bytes @ 0x87
  2188  0000E7                     	ds	1
  2189  0000E8                     main@max_y:
  2190                           	opt stack 0
  2191                           
  2192                           ; 1 bytes @ 0x88
  2193  0000E8                     	ds	1
  2194  0000E9                     main@val2:
  2195                           	opt stack 0
  2196                           
  2197                           ; 3 bytes @ 0x89
  2198  0000E9                     	ds	3
  2199  0000EC                     main@y_360:
  2200                           	opt stack 0
  2201                           
  2202                           ; 2 bytes @ 0x8C
  2203  0000EC                     	ds	2
  2204  0000EE                     main@Vpp:
  2205                           	opt stack 0
  2206                           
  2207                           ; 3 bytes @ 0x8E
  2208  0000EE                     	ds	3
  2209  0000F1                     _main$1211:
  2210                           	opt stack 0
  2211                           
  2212                           ; 3 bytes @ 0x91
  2213  0000F1                     	ds	3
  2214  0000F4                     main@s_val:
  2215                           	opt stack 0
  2216                           
  2217                           ; 2 bytes @ 0x94
  2218  0000F4                     	ds	2
  2219  0000F6                     main@s_val_363:
  2220                           	opt stack 0
  2221                           
  2222                           ; 2 bytes @ 0x96
  2223  0000F6                     	ds	2
  2224  0000F8                     main@j:
  2225                           	opt stack 0
  2226                           
  2227                           ; 2 bytes @ 0x98
  2228  0000F8                     	ds	2
  2229  0000FA                     main@min:
  2230                           	opt stack 0
  2231                           
  2232                           ; 2 bytes @ 0x9A
  2233  0000FA                     	ds	2
  2234  0000FC                     main@max:
  2235                           	opt stack 0
  2236                           
  2237                           ; 2 bytes @ 0x9C
  2238  0000FC                     	ds	2
  2239  0000FE                     main@i_398:
  2240                           	opt stack 0
  2241                           
  2242                           ; 2 bytes @ 0x9E
  2243  0000FE                     	ds	2
  2244                           tblptru	equ	0xFF8
  2245                           postinc0	equ	0xFEE
  2246                           wreg	equ	0xFE8
  2247                           postdec1	equ	0xFE5
  2248                           fsr1h	equ	0xFE2
  2249                           fsr1l	equ	0xFE1
  2250                           
  2251                           	psect	cstackCOMRAM
  2252  000001                     __pcstackCOMRAM:
  2253                           	opt stack 0
  2254  000001                     ??_isdigit:
  2255  000001                     ?_strlen:
  2256                           	opt stack 0
  2257  000001                     ?_abs:
  2258                           	opt stack 0
  2259  000001                     ?___awmod:
  2260                           	opt stack 0
  2261  000001                     ?___ftpack:
  2262                           	opt stack 0
  2263  000001                     ?___ftneg:
  2264                           	opt stack 0
  2265  000001                     ?__tdiv_to_l_:
  2266                           	opt stack 0
  2267  000001                     ?__div_to_l_:
  2268                           	opt stack 0
  2269  000001                     ?___lldiv:
  2270                           	opt stack 0
  2271  000001                     __lcd_status@status:
  2272                           	opt stack 0
  2273  000001                     LCDcmd@data:
  2274                           	opt stack 0
  2275  000001                     abs@a:
  2276                           	opt stack 0
  2277  000001                     ___awmod@dividend:
  2278                           	opt stack 0
  2279  000001                     strcat@to:
  2280                           	opt stack 0
  2281  000001                     strlen@s:
  2282                           	opt stack 0
  2283  000001                     __div_to_l_@f1:
  2284                           	opt stack 0
  2285  000001                     ___ftpack@arg:
  2286                           	opt stack 0
  2287  000001                     __tdiv_to_l_@f1:
  2288                           	opt stack 0
  2289  000001                     ___ftge@ff1:
  2290                           	opt stack 0
  2291  000001                     ___ftneg@f1:
  2292                           	opt stack 0
  2293  000001                     ___lldiv@dividend:
  2294                           	opt stack 0
  2295                           
  2296                           ; 4 bytes @ 0x0
  2297  000001                     	ds	1
  2298  000002                     ??_emptycolumn:
  2299  000002                     __lcd_status@cs1:
  2300                           	opt stack 0
  2301  000002                     _isdigit$869:
  2302                           	opt stack 0
  2303                           
  2304                           ; 1 bytes @ 0x1
  2305  000002                     	ds	1
  2306  000003                     ??_strlen:
  2307  000003                     ??_abs:
  2308  000003                     __lcd_status@cs2:
  2309                           	opt stack 0
  2310  000003                     isdigit@c:
  2311                           	opt stack 0
  2312  000003                     ___awmod@divisor:
  2313                           	opt stack 0
  2314  000003                     strcat@from:
  2315                           	opt stack 0
  2316                           
  2317                           ; 2 bytes @ 0x2
  2318  000003                     	ds	1
  2319  000004                     ??_LCDreset:
  2320  000004                     ??__lcd_waitbusy:
  2321  000004                     ___ftpack@exp:
  2322                           	opt stack 0
  2323  000004                     __div_to_l_@f2:
  2324                           	opt stack 0
  2325  000004                     __tdiv_to_l_@f2:
  2326                           	opt stack 0
  2327  000004                     ___ftge@ff2:
  2328                           	opt stack 0
  2329                           
  2330                           ; 3 bytes @ 0x3
  2331  000004                     	ds	1
  2332  000005                     LCDpage@page:
  2333                           	opt stack 0
  2334  000005                     LCDon@on:
  2335                           	opt stack 0
  2336  000005                     LCDy@value:
  2337                           	opt stack 0
  2338  000005                     ___awmod@counter:
  2339                           	opt stack 0
  2340  000005                     ___ftpack@sign:
  2341                           	opt stack 0
  2342  000005                     strcat@cp:
  2343                           	opt stack 0
  2344  000005                     strlen@cp:
  2345                           	opt stack 0
  2346  000005                     ___lldiv@divisor:
  2347                           	opt stack 0
  2348                           
  2349                           ; 4 bytes @ 0x4
  2350  000005                     	ds	1
  2351  000006                     ??___ftpack:
  2352  000006                     LCDpage@side:
  2353                           	opt stack 0
  2354  000006                     LCDy@side:
  2355                           	opt stack 0
  2356  000006                     ___awmod@sign:
  2357                           	opt stack 0
  2358                           
  2359                           ; 1 bytes @ 0x5
  2360  000006                     	ds	1
  2361  000007                     ??__tdiv_to_l_:
  2362  000007                     ??___ftge:
  2363  000007                     ?___awdiv:
  2364                           	opt stack 0
  2365  000007                     ___awdiv@dividend:
  2366                           	opt stack 0
  2367  000007                     __div_to_l_@quot:
  2368                           	opt stack 0
  2369                           
  2370                           ; 4 bytes @ 0x6
  2371  000007                     	ds	2
  2372  000009                     ?___lltoft:
  2373                           	opt stack 0
  2374  000009                     ?___lwtoft:
  2375                           	opt stack 0
  2376  000009                     ___awdiv@divisor:
  2377                           	opt stack 0
  2378  000009                     ___lwtoft@c:
  2379                           	opt stack 0
  2380  000009                     ___lldiv@quotient:
  2381                           	opt stack 0
  2382  000009                     ___lltoft@c:
  2383                           	opt stack 0
  2384                           
  2385                           ; 4 bytes @ 0x8
  2386  000009                     	ds	1
  2387  00000A                     __tdiv_to_l_@quot:
  2388                           	opt stack 0
  2389                           
  2390                           ; 4 bytes @ 0x9
  2391  00000A                     	ds	1
  2392  00000B                     ___awdiv@counter:
  2393                           	opt stack 0
  2394  00000B                     __div_to_l_@cntr:
  2395                           	opt stack 0
  2396                           
  2397                           ; 1 bytes @ 0xA
  2398  00000B                     	ds	1
  2399  00000C                     ___awdiv@sign:
  2400                           	opt stack 0
  2401  00000C                     __div_to_l_@exp1:
  2402                           	opt stack 0
  2403                           
  2404                           ; 1 bytes @ 0xB
  2405  00000C                     	ds	1
  2406  00000D                     ??___lltoft:
  2407  00000D                     ___lldiv@counter:
  2408                           	opt stack 0
  2409  00000D                     ___awdiv@quotient:
  2410                           	opt stack 0
  2411                           
  2412                           ; 2 bytes @ 0xC
  2413  00000D                     	ds	1
  2414  00000E                     ?___llmod:
  2415                           	opt stack 0
  2416  00000E                     __tdiv_to_l_@cntr:
  2417                           	opt stack 0
  2418  00000E                     ___llmod@dividend:
  2419                           	opt stack 0
  2420                           
  2421                           ; 4 bytes @ 0xD
  2422  00000E                     	ds	1
  2423  00000F                     ?___wmul:
  2424                           	opt stack 0
  2425  00000F                     lcdplotpixel2@ry:
  2426                           	opt stack 0
  2427  00000F                     __tdiv_to_l_@exp1:
  2428                           	opt stack 0
  2429  00000F                     ___wmul@multiplier:
  2430                           	opt stack 0
  2431                           
  2432                           ; 2 bytes @ 0xE
  2433  00000F                     	ds	1
  2434  000010                     lcdplotpixel2@blank:
  2435                           	opt stack 0
  2436                           
  2437                           ; 2 bytes @ 0xF
  2438  000010                     	ds	1
  2439  000011                     ___lltoft@exp:
  2440                           	opt stack 0
  2441  000011                     ___wmul@multiplicand:
  2442                           	opt stack 0
  2443                           
  2444                           ; 2 bytes @ 0x10
  2445  000011                     	ds	1
  2446  000012                     ??_lcdplotpixel2:
  2447  000012                     ___llmod@divisor:
  2448                           	opt stack 0
  2449                           
  2450                           ; 4 bytes @ 0x11
  2451  000012                     	ds	1
  2452  000013                     ___wmul@product:
  2453                           	opt stack 0
  2454                           
  2455                           ; 2 bytes @ 0x12
  2456  000013                     	ds	1
  2457  000014                     lcdplotpixel2@data:
  2458                           	opt stack 0
  2459                           
  2460                           ; 9 bytes @ 0x13
  2461  000014                     	ds	1
  2462  000015                     ?___awtoft:
  2463                           	opt stack 0
  2464  000015                     LCDchar@position:
  2465                           	opt stack 0
  2466  000015                     ___awtoft@c:
  2467                           	opt stack 0
  2468                           
  2469                           ; 2 bytes @ 0x14
  2470  000015                     	ds	1
  2471  000016                     ??_LCDchar:
  2472  000016                     ___llmod@counter:
  2473                           	opt stack 0
  2474                           
  2475                           ; 1 bytes @ 0x15
  2476  000016                     	ds	2
  2477  000018                     ___awtoft@sign:
  2478                           	opt stack 0
  2479                           
  2480                           ; 1 bytes @ 0x17
  2481  000018                     	ds	1
  2482  000019                     ?___ftdiv:
  2483                           	opt stack 0
  2484  000019                     ?___ftmul:
  2485                           	opt stack 0
  2486  000019                     ___ftdiv@f1:
  2487                           	opt stack 0
  2488  000019                     ___ftmul@f1:
  2489                           	opt stack 0
  2490                           
  2491                           ; 3 bytes @ 0x18
  2492  000019                     	ds	2
  2493  00001B                     LCDchar@c:
  2494                           	opt stack 0
  2495                           
  2496                           ; 1 bytes @ 0x1A
  2497  00001B                     	ds	1
  2498  00001C                     LCDchar@k:
  2499                           	opt stack 0
  2500  00001C                     ___ftdiv@f2:
  2501                           	opt stack 0
  2502  00001C                     ___ftmul@f2:
  2503                           	opt stack 0
  2504                           
  2505                           ; 3 bytes @ 0x1B
  2506  00001C                     	ds	1
  2507  00001D                     lcdplotpixel2@page:
  2508                           	opt stack 0
  2509                           
  2510                           ; 1 bytes @ 0x1C
  2511  00001D                     	ds	1
  2512  00001E                     LCDchar@l:
  2513                           	opt stack 0
  2514  00001E                     lcdplotpixel2@x:
  2515                           	opt stack 0
  2516                           
  2517                           ; 1 bytes @ 0x1D
  2518  00001E                     	ds	1
  2519  00001F                     ??___ftdiv:
  2520  00001F                     ??___ftmul:
  2521  00001F                     lcdplotpixel2@pixel:
  2522                           	opt stack 0
  2523  00001F                     LCDchar@a:
  2524                           	opt stack 0
  2525                           
  2526                           ; 2 bytes @ 0x1E
  2527  00001F                     	ds	1
  2528  000020                     lcdplotpixel2@value:
  2529                           	opt stack 0
  2530                           
  2531                           ; 2 bytes @ 0x1F
  2532  000020                     	ds	1
  2533  000021                     LCDclear@i:
  2534                           	opt stack 0
  2535  000021                     LCDstring@buffer:
  2536                           	opt stack 0
  2537                           
  2538                           ; 2 bytes @ 0x20
  2539  000021                     	ds	1
  2540  000022                     lcdplotpixel2@side:
  2541                           	opt stack 0
  2542  000022                     ___ftdiv@cntr:
  2543                           	opt stack 0
  2544  000022                     ___ftmul@exp:
  2545                           	opt stack 0
  2546                           
  2547                           ; 1 bytes @ 0x21
  2548  000022                     	ds	1
  2549  000023                     ??_LCDstring:
  2550  000023                     LCDclear@i_556:
  2551                           	opt stack 0
  2552  000023                     lcdplotpixel2@index:
  2553                           	opt stack 0
  2554  000023                     ___ftdiv@f3:
  2555                           	opt stack 0
  2556  000023                     ___ftmul@f3_as_product:
  2557                           	opt stack 0
  2558                           
  2559                           ; 3 bytes @ 0x22
  2560  000023                     	ds	2
  2561  000025                     lcdplotpixel2@rx:
  2562                           	opt stack 0
  2563  000025                     LCDclear@j:
  2564                           	opt stack 0
  2565                           
  2566                           ; 2 bytes @ 0x24
  2567  000025                     	ds	1
  2568  000026                     ___ftdiv@exp:
  2569                           	opt stack 0
  2570  000026                     ___ftmul@cntr:
  2571                           	opt stack 0
  2572  000026                     xyaxis@i:
  2573                           	opt stack 0
  2574                           
  2575                           ; 2 bytes @ 0x25
  2576  000026                     	ds	1
  2577  000027                     ??_LCDinit:
  2578  000027                     ___ftdiv@sign:
  2579                           	opt stack 0
  2580  000027                     ___ftmul@sign:
  2581                           	opt stack 0
  2582                           
  2583                           ; 1 bytes @ 0x26
  2584  000027                     	ds	1
  2585  000028                     ?_fround:
  2586                           	opt stack 0
  2587  000028                     ?_scale:
  2588                           	opt stack 0
  2589  000028                     LCDinit@i:
  2590                           	opt stack 0
  2591  000028                     LCDstring@mem2:
  2592                           	opt stack 0
  2593  000028                     xyaxis@i_585:
  2594                           	opt stack 0
  2595                           
  2596                           ; 2 bytes @ 0x27
  2597  000028                     	ds	2
  2598  00002A                     LCDstring@i:
  2599                           	opt stack 0
  2600                           
  2601                           ; 2 bytes @ 0x29
  2602  00002A                     	ds	1
  2603  00002B                     _fround$1213:
  2604                           	opt stack 0
  2605  00002B                     _scale$1214:
  2606                           	opt stack 0
  2607                           
  2608                           ; 3 bytes @ 0x2A
  2609  00002B                     	ds	1
  2610  00002C                     LCDstring@a:
  2611                           	opt stack 0
  2612                           
  2613                           ; 1 bytes @ 0x2B
  2614  00002C                     	ds	1
  2615  00002D                     LCDstring@n:
  2616                           	opt stack 0
  2617                           
  2618                           ; 2 bytes @ 0x2C
  2619  00002D                     	ds	1
  2620  00002E                     scale@scl:
  2621                           	opt stack 0
  2622  00002E                     _fround$1212:
  2623                           	opt stack 0
  2624                           
  2625                           ; 3 bytes @ 0x2D
  2626  00002E                     	ds	1
  2627  00002F                     LCDstring@mem1:
  2628                           	opt stack 0
  2629                           
  2630                           ; 2 bytes @ 0x2E
  2631  00002F                     	ds	2
  2632  000031                     fround@prec:
  2633                           	opt stack 0
  2634  000031                     LCDstring@l:
  2635                           	opt stack 0
  2636                           
  2637                           ; 2 bytes @ 0x30
  2638  000031                     	ds	1
  2639  000032                     ?___ftadd:
  2640                           	opt stack 0
  2641  000032                     ___ftadd@f1:
  2642                           	opt stack 0
  2643                           
  2644                           ; 3 bytes @ 0x31
  2645  000032                     	ds	1
  2646  000033                     LCDstring@dim:
  2647                           	opt stack 0
  2648                           
  2649                           ; 2 bytes @ 0x32
  2650  000033                     	ds	2
  2651  000035                     ___ftadd@f2:
  2652                           	opt stack 0
  2653                           
  2654                           ; 3 bytes @ 0x34
  2655  000035                     	ds	3
  2656  000038                     ??___ftadd:
  2657                           
  2658                           ; 1 bytes @ 0x37
  2659  000038                     	ds	3
  2660  00003B                     ___ftadd@sign:
  2661                           	opt stack 0
  2662                           
  2663                           ; 1 bytes @ 0x3A
  2664  00003B                     	ds	1
  2665  00003C                     ___ftadd@exp2:
  2666                           	opt stack 0
  2667                           
  2668                           ; 1 bytes @ 0x3B
  2669  00003C                     	ds	1
  2670  00003D                     ___ftadd@exp1:
  2671                           	opt stack 0
  2672                           
  2673                           ; 1 bytes @ 0x3C
  2674  00003D                     	ds	1
  2675  00003E                     ?___ftsub:
  2676                           	opt stack 0
  2677  00003E                     ?___fttol:
  2678                           	opt stack 0
  2679  00003E                     ___ftsub@f1:
  2680                           	opt stack 0
  2681  00003E                     ___fttol@f1:
  2682                           	opt stack 0
  2683                           
  2684                           ; 3 bytes @ 0x3D
  2685  00003E                     	ds	3
  2686  000041                     ___ftsub@f2:
  2687                           	opt stack 0
  2688                           
  2689                           ; 3 bytes @ 0x40
  2690  000041                     	ds	1
  2691  000042                     ??___fttol:
  2692                           
  2693                           ; 1 bytes @ 0x41
  2694  000042                     	ds	2
  2695  000044                     
  2696                           ; 1 bytes @ 0x43
  2697  000044                     	ds	3
  2698  000047                     ___fttol@sign1:
  2699                           	opt stack 0
  2700                           
  2701                           ; 1 bytes @ 0x46
  2702  000047                     	ds	1
  2703  000048                     ___fttol@lval:
  2704                           	opt stack 0
  2705                           
  2706                           ; 4 bytes @ 0x47
  2707  000048                     	ds	4
  2708  00004C                     ___fttol@exp1:
  2709                           	opt stack 0
  2710                           
  2711                           ; 1 bytes @ 0x4B
  2712  00004C                     	ds	1
  2713  00004D                     ?_sprintf:
  2714                           	opt stack 0
  2715  00004D                     sprintf@sp:
  2716                           	opt stack 0
  2717                           
  2718                           ; 2 bytes @ 0x4C
  2719  00004D                     	ds	2
  2720  00004F                     sprintf@f:
  2721                           	opt stack 0
  2722                           
  2723                           ; 2 bytes @ 0x4E
  2724  00004F                     	ds	5
  2725  000054                     ??_sprintf:
  2726                           
  2727                           ; 1 bytes @ 0x53
  2728  000054                     	ds	6
  2729  00005A                     ??_main:
  2730                           
  2731                           ; 1 bytes @ 0x59
  2732  00005A                     	ds	2
  2733  00005C                     main@count:
  2734                           	opt stack 0
  2735                           
  2736                           ; 2 bytes @ 0x5B
  2737  00005C                     	ds	2
  2738  00005E                     main@y1:
  2739                           	opt stack 0
  2740                           
  2741                           ; 2 bytes @ 0x5D
  2742  00005E                     	ds	2
  2743                           tblptru	equ	0xFF8
  2744                           postinc0	equ	0xFEE
  2745                           wreg	equ	0xFE8
  2746                           postdec1	equ	0xFE5
  2747                           fsr1h	equ	0xFE2
  2748                           fsr1l	equ	0xFE1
  2749                           
  2750 ;;
  2751 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2752 ;;
  2753 ;; *************** function _main *****************
  2754 ;; Defined at:
  2755 ;;		line 26 in file "main.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  y               2  140[BANK0 ] int 
  2760 ;;  y               2  127[BANK0 ] int 
  2761 ;;  y               2  125[BANK0 ] int 
  2762 ;;  i               2   24[BANK2 ] int 
  2763 ;;  a               2   40[BANK2 ] int 
  2764 ;;  i               2   22[BANK2 ] int 
  2765 ;;  a               2   38[BANK2 ] int 
  2766 ;;  a               2   42[BANK2 ] int 
  2767 ;;  i               2   16[BANK2 ] int 
  2768 ;;  a               2   36[BANK2 ] int 
  2769 ;;  i               2   14[BANK2 ] int 
  2770 ;;  a               2   34[BANK2 ] int 
  2771 ;;  a               2   46[BANK2 ] int 
  2772 ;;  y               2  131[BANK0 ] int 
  2773 ;;  y               2  129[BANK0 ] int 
  2774 ;;  y2              2  123[BANK0 ] int 
  2775 ;;  y1              2   93[COMRAM] int 
  2776 ;;  j               2  152[BANK0 ] int 
  2777 ;;  buf            10  113[BANK0 ] unsigned char [10]
  2778 ;;  delta           3    3[BANK2 ] float 
  2779 ;;  cur2_x_new      2   20[BANK2 ] int 
  2780 ;;  cur1_x_new      2   18[BANK2 ] int 
  2781 ;;  s_val           2  150[BANK0 ] int 
  2782 ;;  buf            10  103[BANK0 ] unsigned char [10]
  2783 ;;  delta           3    0[BANK2 ] float 
  2784 ;;  cur2_y_new      2   12[BANK2 ] int 
  2785 ;;  cur1_y_new      2   10[BANK2 ] int 
  2786 ;;  s_val           2  148[BANK0 ] int 
  2787 ;;  i               2  158[BANK0 ] int 
  2788 ;;  y               2    8[BANK2 ] int 
  2789 ;;  i               2   26[BANK2 ] int 
  2790 ;;  cur2_x          2   54[BANK2 ] int 
  2791 ;;  cur1_x          2   52[BANK2 ] int 
  2792 ;;  cur2_y          2   50[BANK2 ] int 
  2793 ;;  cur1_y          2   48[BANK2 ] int 
  2794 ;;  buf            40   25[BANK0 ] unsigned char [40]
  2795 ;;  buf2           17   86[BANK0 ] unsigned char [17]
  2796 ;;  str            15   65[BANK0 ] unsigned char [15]
  2797 ;;  i               2   44[BANK2 ] int 
  2798 ;;  tmp             2    6[BANK2 ] int 
  2799 ;;  max             2  156[BANK0 ] unsigned int 
  2800 ;;  min             2  154[BANK0 ] unsigned int 
  2801 ;;  count           2   91[COMRAM] int 
  2802 ;;  max_y           1  136[BANK0 ] unsigned char 
  2803 ;;  min_y           1  135[BANK0 ] unsigned char 
  2804 ;;  data          256    0[BANK1 ] unsigned int [128]
  2805 ;;  val1            3   62[BANK2 ] float 
  2806 ;;  div             3   31[BANK2 ] float 
  2807 ;;  y_div           3   28[BANK2 ] float 
  2808 ;;  Vpp             3  142[BANK0 ] float 
  2809 ;;  val2            3  137[BANK0 ] float 
  2810 ;;  old2            3   83[BANK0 ] float 
  2811 ;;  old1            3   80[BANK0 ] float 
  2812 ;;  freeze          2  133[BANK0 ] int 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2822 ;;      Params:         0       0       0       0       0       0       0       0       0
  2823 ;;      Locals:         4     135     256      65       0       0       0       0       0
  2824 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2825 ;;      Totals:         6     135     256      65       0       0       0       0       0
  2826 ;;Total ram usage:      462 bytes
  2827 ;; Hardware stack levels required when called:    7
  2828 ;; This function calls:
  2829 ;;		_LCDclear
  2830 ;;		_LCDinit
  2831 ;;		_LCDpage
  2832 ;;		_LCDstring
  2833 ;;		___awdiv
  2834 ;;		___awtoft
  2835 ;;		___ftadd
  2836 ;;		___ftdiv
  2837 ;;		___ftge
  2838 ;;		___ftmul
  2839 ;;		___fttol
  2840 ;;		___lwtoft
  2841 ;;		___wmul
  2842 ;;		_abs
  2843 ;;		_lcdplotpixel2
  2844 ;;		_sprintf
  2845 ;;		_strcat
  2846 ;;		_xyaxis
  2847 ;; This function is called by:
  2848 ;;		Startup code after reset
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text0
  2853  006380                     __ptext0:
  2854                           	opt stack 0
  2855  006380                     _main:
  2856                           	opt stack 24
  2857                           
  2858                           ;main.c: 28: TRISA = 0xff;
  2859                           
  2860                           ;incstack = 0
  2861  006380  6892               	setf	3986,c	;volatile
  2862                           
  2863                           ;main.c: 29: TRISB = 0xff;
  2864  006382  6893               	setf	3987,c	;volatile
  2865                           
  2866                           ;main.c: 30: TRISC = 0x00;
  2867  006384  0E00               	movlw	0
  2868  006386  6E94               	movwf	3988,c	;volatile
  2869                           
  2870                           ;main.c: 31: TRISD = 0x00;
  2871  006388  0E00               	movlw	0
  2872  00638A  6E95               	movwf	3989,c	;volatile
  2873                           
  2874                           ;main.c: 32: TRISE = 0x00;
  2875  00638C  0E00               	movlw	0
  2876  00638E  6E96               	movwf	3990,c	;volatile
  2877                           
  2878                           ;main.c: 34: PORTC = 0x00;
  2879  006390  0E00               	movlw	0
  2880  006392  6E82               	movwf	3970,c	;volatile
  2881                           
  2882                           ;main.c: 35: PORTD = 0x00;
  2883  006394  0E00               	movlw	0
  2884  006396  6E83               	movwf	3971,c	;volatile
  2885                           
  2886                           ;main.c: 36: PORTE = 0x00;
  2887  006398  0E00               	movlw	0
  2888  00639A  6E84               	movwf	3972,c	;volatile
  2889                           
  2890                           ;main.c: 45: ADCON1bits.VCFG1=0;
  2891  00639C  9AC1               	bcf	4033,5,c	;volatile
  2892                           
  2893                           ;main.c: 46: ADCON1bits.VCFG0=0;
  2894  00639E  98C1               	bcf	4033,4,c	;volatile
  2895                           
  2896                           ;main.c: 49: ADCON1bits.PCFG0=1;
  2897  0063A0  80C1               	bsf	4033,0,c	;volatile
  2898                           
  2899                           ;main.c: 50: ADCON1bits.PCFG1=0;
  2900  0063A2  92C1               	bcf	4033,1,c	;volatile
  2901                           
  2902                           ;main.c: 51: ADCON1bits.PCFG2=0;
  2903  0063A4  94C1               	bcf	4033,2,c	;volatile
  2904                           
  2905                           ;main.c: 52: ADCON1bits.PCFG3=1;
  2906  0063A6  86C1               	bsf	4033,3,c	;volatile
  2907                           
  2908                           ;main.c: 54: ADCON2bits.ADFM=1;
  2909  0063A8  8EC0               	bsf	4032,7,c	;volatile
  2910                           
  2911                           ;main.c: 56: ADCON0=0x01;
  2912  0063AA  0E01               	movlw	1
  2913  0063AC  6EC2               	movwf	4034,c	;volatile
  2914                           
  2915                           ;main.c: 59: ADCON2bits.ACQT2=0;
  2916  0063AE  9AC0               	bcf	4032,5,c	;volatile
  2917                           
  2918                           ;main.c: 60: ADCON2bits.ACQT1=0;
  2919  0063B0  98C0               	bcf	4032,4,c	;volatile
  2920                           
  2921                           ;main.c: 61: ADCON2bits.ACQT0=1;
  2922  0063B2  86C0               	bsf	4032,3,c	;volatile
  2923                           
  2924                           ;main.c: 64: ADCON2bits.ADCS2=1;
  2925  0063B4  84C0               	bsf	4032,2,c	;volatile
  2926                           
  2927                           ;main.c: 65: ADCON2bits.ADCS1=0;
  2928  0063B6  92C0               	bcf	4032,1,c	;volatile
  2929                           
  2930                           ;main.c: 66: ADCON2bits.ADCS0=1;
  2931  0063B8  80C0               	bsf	4032,0,c	;volatile
  2932                           
  2933                           ;main.c: 69: ADCON0bits.ADON=1;
  2934  0063BA  80C2               	bsf	4034,0,c	;volatile
  2935                           
  2936                           ;main.c: 72: unsigned int data[128];
  2937                           ;main.c: 74: float Vpp = 0;
  2938  0063BC  0E00               	movlw	0
  2939  0063BE  0100               	movlb	0	; () banked
  2940  0063C0  6FEE               	movwf	main@Vpp& (0+255),b
  2941  0063C2  0E00               	movlw	0
  2942  0063C4  0100               	movlb	0	; () banked
  2943  0063C6  6FEF               	movwf	(main@Vpp+1)& (0+255),b
  2944  0063C8  0E00               	movlw	0
  2945  0063CA  0100               	movlb	0	; () banked
  2946  0063CC  6FF0               	movwf	(main@Vpp+2)& (0+255),b
  2947                           
  2948                           ;main.c: 76: float val1, val2;
  2949                           ;main.c: 77: float old1 = -1;
  2950  0063CE  0E00               	movlw	0
  2951  0063D0  0100               	movlb	0	; () banked
  2952  0063D2  6FB0               	movwf	main@old1& (0+255),b
  2953  0063D4  0E80               	movlw	128
  2954  0063D6  0100               	movlb	0	; () banked
  2955  0063D8  6FB1               	movwf	(main@old1+1)& (0+255),b
  2956  0063DA  0EBF               	movlw	191
  2957  0063DC  0100               	movlb	0	; () banked
  2958  0063DE  6FB2               	movwf	(main@old1+2)& (0+255),b
  2959                           
  2960                           ;main.c: 78: float old2 = -1;
  2961  0063E0  0E00               	movlw	0
  2962  0063E2  0100               	movlb	0	; () banked
  2963  0063E4  6FB3               	movwf	main@old2& (0+255),b
  2964  0063E6  0E80               	movlw	128
  2965  0063E8  0100               	movlb	0	; () banked
  2966  0063EA  6FB4               	movwf	(main@old2+1)& (0+255),b
  2967  0063EC  0EBF               	movlw	191
  2968  0063EE  0100               	movlb	0	; () banked
  2969  0063F0  6FB5               	movwf	(main@old2+2)& (0+255),b
  2970                           
  2971                           ;main.c: 79: float y_div,div;
  2972                           ;main.c: 81: int freeze = 0;
  2973  0063F2  0E00               	movlw	0
  2974  0063F4  0100               	movlb	0	; () banked
  2975  0063F6  6FE6               	movwf	(main@freeze+1)& (0+255),b
  2976  0063F8  0E00               	movlw	0
  2977  0063FA  6FE5               	movwf	main@freeze& (0+255),b
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;main.c: 84: LCDinit();
  2981  0063FC  EC75  F01C         	call	_LCDinit	;wreg free
  2982  006400                     l4853:
  2983                           
  2984                           ;main.c: 88: {
  2985                           ;main.c: 90: if (PORTBbits.RB0 == 1)
  2986  006400  A081               	btfss	3969,0,c	;volatile
  2987  006402  EF8E  F039         	goto	l5153
  2988                           
  2989                           ;main.c: 91: {
  2990                           ;main.c: 92: freeze = 1;
  2991  006406  0E00               	movlw	0
  2992  006408  0100               	movlb	0	; () banked
  2993  00640A  6FE6               	movwf	(main@freeze+1)& (0+255),b
  2994  00640C  0E01               	movlw	1
  2995  00640E  6FE5               	movwf	main@freeze& (0+255),b
  2996                           
  2997                           ;main.c: 94: int cur1_y = 0;
  2998  006410  0E00               	movlw	0
  2999  006412  0102               	movlb	2	; () banked
  3000  006414  6F31               	movwf	(main@cur1_y+1)& (0+255),b
  3001  006416  0E00               	movlw	0
  3002  006418  6F30               	movwf	main@cur1_y& (0+255),b
  3003                           
  3004                           ;main.c: 95: int cur2_y = 0;
  3005  00641A  0E00               	movlw	0
  3006  00641C  0102               	movlb	2	; () banked
  3007  00641E  6F33               	movwf	(main@cur2_y+1)& (0+255),b
  3008  006420  0E00               	movlw	0
  3009  006422  6F32               	movwf	main@cur2_y& (0+255),b
  3010                           
  3011                           ;main.c: 96: int cur1_x = 0;
  3012  006424  0E00               	movlw	0
  3013  006426  0102               	movlb	2	; () banked
  3014  006428  6F35               	movwf	(main@cur1_x+1)& (0+255),b
  3015  00642A  0E00               	movlw	0
  3016  00642C  6F34               	movwf	main@cur1_x& (0+255),b
  3017                           
  3018                           ;main.c: 97: int cur2_x = 0;
  3019  00642E  0E00               	movlw	0
  3020  006430  0102               	movlb	2	; () banked
  3021  006432  6F37               	movwf	(main@cur2_x+1)& (0+255),b
  3022  006434  0E00               	movlw	0
  3023  006436  6F36               	movwf	main@cur2_x& (0+255),b
  3024                           
  3025                           ;main.c: 98: while(freeze)
  3026  006438  EF87  F039         	goto	l5151
  3027  00643C                     l63:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;main.c: 99: {
  3031                           ;main.c: 101: if (PORTBbits.RB1 == 1)
  3032  00643C  A281               	btfss	3969,1,c	;volatile
  3033  00643E  D3E1               	goto	l4999
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;main.c: 102: {
  3037                           ;main.c: 104: if (cur1_x != 0 || cur2_x != 0)
  3038  006440  0102               	movlb	2	; () banked
  3039  006442  5134               	movf	main@cur1_x& (0+255),w,b
  3040  006444  0102               	movlb	2	; () banked
  3041  006446  1135               	iorwf	(main@cur1_x+1)& (0+255),w,b
  3042  006448  A4D8               	btfss	status,2,c
  3043  00644A  D006               	goto	l4861
  3044                           
  3045                           ; BSR set to: 2
  3046  00644C  0102               	movlb	2	; () banked
  3047  00644E  5136               	movf	main@cur2_x& (0+255),w,b
  3048  006450  0102               	movlb	2	; () banked
  3049  006452  1137               	iorwf	(main@cur2_x+1)& (0+255),w,b
  3050  006454  B4D8               	btfsc	status,2,c
  3051  006456  D143               	goto	l65
  3052  006458                     l4861:
  3053                           
  3054                           ; BSR set to: 2
  3055                           ;main.c: 105: {
  3056                           ;main.c: 106: int y1 = (int)(((((float)5/1024)*data[64-cur1_x])-2.50f)*val1*2);
  3057  006458  0E00               	movlw	0
  3058  00645A  6E35               	movwf	___ftadd@f2,c
  3059  00645C  0E20               	movlw	32
  3060  00645E  6E36               	movwf	___ftadd@f2+1,c
  3061  006460  0EC0               	movlw	192
  3062  006462  6E37               	movwf	___ftadd@f2+2,c
  3063  006464  0E00               	movlw	0
  3064  006466  6E1C               	movwf	___ftmul@f2,c
  3065  006468  0EA0               	movlw	160
  3066  00646A  6E1D               	movwf	___ftmul@f2+1,c
  3067  00646C  0E3B               	movlw	59
  3068  00646E  6E1E               	movwf	___ftmul@f2+2,c
  3069  006470  C234  F05A         	movff	main@cur1_x,??_main
  3070  006474  C235  F05B         	movff	main@cur1_x+1,??_main+1
  3071  006478  1E5A               	comf	??_main,f,c
  3072  00647A  1E5B               	comf	??_main+1,f,c
  3073  00647C  4A5A               	infsnz	??_main,f,c
  3074  00647E  2A5B               	incf	??_main+1,f,c
  3075  006480  90D8               	bcf	status,0,c
  3076  006482  365A               	rlcf	??_main,f,c
  3077  006484  365B               	rlcf	??_main+1,f,c
  3078  006486  0E80               	movlw	128
  3079  006488  265A               	addwf	??_main,f,c
  3080  00648A  0E00               	movlw	0
  3081  00648C  225B               	addwfc	??_main+1,f,c
  3082  00648E  0E00               	movlw	low main@data
  3083  006490  245A               	addwf	??_main,w,c
  3084  006492  6ED9               	movwf	fsr2l,c
  3085  006494  0E01               	movlw	high main@data
  3086  006496  205B               	addwfc	??_main+1,w,c
  3087  006498  6EDA               	movwf	fsr2h,c
  3088  00649A  CFDE F009          	movff	postinc2,___lwtoft@c
  3089  00649E  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3090  0064A2  EC9B  F01B         	call	___lwtoft	;wreg free
  3091  0064A6  C009  F019         	movff	?___lwtoft,___ftmul@f1
  3092  0064AA  C00A  F01A         	movff	?___lwtoft+1,___ftmul@f1+1
  3093  0064AE  C00B  F01B         	movff	?___lwtoft+2,___ftmul@f1+2
  3094  0064B2  EC58  F020         	call	___ftmul	;wreg free
  3095  0064B6  C019  F032         	movff	?___ftmul,___ftadd@f1
  3096  0064BA  C01A  F033         	movff	?___ftmul+1,___ftadd@f1+1
  3097  0064BE  C01B  F034         	movff	?___ftmul+2,___ftadd@f1+2
  3098  0064C2  EC45  F023         	call	___ftadd	;wreg free
  3099  0064C6  C032  F238         	movff	?___ftadd,_main$1209
  3100  0064CA  C033  F239         	movff	?___ftadd+1,_main$1209+1
  3101  0064CE  C034  F23A         	movff	?___ftadd+2,_main$1209+2
  3102                           
  3103                           ;main.c: 105: {
  3104                           ;main.c: 106: int y1 = (int)(((((float)5/1024)*data[64-cur1_x])-2.50f)*val1*2);
  3105  0064D2  C23E  F01C         	movff	main@val1,___ftmul@f2
  3106  0064D6  C23F  F01D         	movff	main@val1+1,___ftmul@f2+1
  3107  0064DA  C240  F01E         	movff	main@val1+2,___ftmul@f2+2
  3108  0064DE  C238  F019         	movff	_main$1209,___ftmul@f1
  3109  0064E2  C239  F01A         	movff	_main$1209+1,___ftmul@f1+1
  3110  0064E6  C23A  F01B         	movff	_main$1209+2,___ftmul@f1+2
  3111  0064EA  EC58  F020         	call	___ftmul	;wreg free
  3112  0064EE  C019  F23B         	movff	?___ftmul,_main$1210
  3113  0064F2  C01A  F23C         	movff	?___ftmul+1,_main$1210+1
  3114  0064F6  C01B  F23D         	movff	?___ftmul+2,_main$1210+2
  3115                           
  3116                           ;main.c: 105: {
  3117                           ;main.c: 106: int y1 = (int)(((((float)5/1024)*data[64-cur1_x])-2.50f)*val1*2);
  3118  0064FA  0E00               	movlw	0
  3119  0064FC  6E1C               	movwf	___ftmul@f2,c
  3120  0064FE  0E00               	movlw	0
  3121  006500  6E1D               	movwf	___ftmul@f2+1,c
  3122  006502  0E40               	movlw	64
  3123  006504  6E1E               	movwf	___ftmul@f2+2,c
  3124  006506  C23B  F019         	movff	_main$1210,___ftmul@f1
  3125  00650A  C23C  F01A         	movff	_main$1210+1,___ftmul@f1+1
  3126  00650E  C23D  F01B         	movff	_main$1210+2,___ftmul@f1+2
  3127  006512  EC58  F020         	call	___ftmul	;wreg free
  3128  006516  C019  F03E         	movff	?___ftmul,___fttol@f1
  3129  00651A  C01A  F03F         	movff	?___ftmul+1,___fttol@f1+1
  3130  00651E  C01B  F040         	movff	?___ftmul+2,___fttol@f1+2
  3131  006522  ECDE  F01F         	call	___fttol	;wreg free
  3132  006526  C03E  F05E         	movff	?___fttol,main@y1
  3133  00652A  C03F  F05F         	movff	?___fttol+1,main@y1+1
  3134                           
  3135                           ;main.c: 107: int y2 = (int)(((((float)5/1024)*data[64-cur2_x])-2.50f)*val1*2);
  3136  00652E  0E00               	movlw	0
  3137  006530  6E35               	movwf	___ftadd@f2,c
  3138  006532  0E20               	movlw	32
  3139  006534  6E36               	movwf	___ftadd@f2+1,c
  3140  006536  0EC0               	movlw	192
  3141  006538  6E37               	movwf	___ftadd@f2+2,c
  3142  00653A  0E00               	movlw	0
  3143  00653C  6E1C               	movwf	___ftmul@f2,c
  3144  00653E  0EA0               	movlw	160
  3145  006540  6E1D               	movwf	___ftmul@f2+1,c
  3146  006542  0E3B               	movlw	59
  3147  006544  6E1E               	movwf	___ftmul@f2+2,c
  3148  006546  C236  F05A         	movff	main@cur2_x,??_main
  3149  00654A  C237  F05B         	movff	main@cur2_x+1,??_main+1
  3150  00654E  1E5A               	comf	??_main,f,c
  3151  006550  1E5B               	comf	??_main+1,f,c
  3152  006552  4A5A               	infsnz	??_main,f,c
  3153  006554  2A5B               	incf	??_main+1,f,c
  3154  006556  90D8               	bcf	status,0,c
  3155  006558  365A               	rlcf	??_main,f,c
  3156  00655A  365B               	rlcf	??_main+1,f,c
  3157  00655C  0E80               	movlw	128
  3158  00655E  265A               	addwf	??_main,f,c
  3159  006560  0E00               	movlw	0
  3160  006562  225B               	addwfc	??_main+1,f,c
  3161  006564  0E00               	movlw	low main@data
  3162  006566  245A               	addwf	??_main,w,c
  3163  006568  6ED9               	movwf	fsr2l,c
  3164  00656A  0E01               	movlw	high main@data
  3165  00656C  205B               	addwfc	??_main+1,w,c
  3166  00656E  6EDA               	movwf	fsr2h,c
  3167  006570  CFDE F009          	movff	postinc2,___lwtoft@c
  3168  006574  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3169  006578  EC9B  F01B         	call	___lwtoft	;wreg free
  3170  00657C  C009  F019         	movff	?___lwtoft,___ftmul@f1
  3171  006580  C00A  F01A         	movff	?___lwtoft+1,___ftmul@f1+1
  3172  006584  C00B  F01B         	movff	?___lwtoft+2,___ftmul@f1+2
  3173  006588  EC58  F020         	call	___ftmul	;wreg free
  3174  00658C  C019  F032         	movff	?___ftmul,___ftadd@f1
  3175  006590  C01A  F033         	movff	?___ftmul+1,___ftadd@f1+1
  3176  006594  C01B  F034         	movff	?___ftmul+2,___ftadd@f1+2
  3177  006598  EC45  F023         	call	___ftadd	;wreg free
  3178  00659C  C032  F238         	movff	?___ftadd,_main$1209
  3179  0065A0  C033  F239         	movff	?___ftadd+1,_main$1209+1
  3180  0065A4  C034  F23A         	movff	?___ftadd+2,_main$1209+2
  3181                           
  3182                           ;main.c: 107: int y2 = (int)(((((float)5/1024)*data[64-cur2_x])-2.50f)*val1*2);
  3183  0065A8  C23E  F01C         	movff	main@val1,___ftmul@f2
  3184  0065AC  C23F  F01D         	movff	main@val1+1,___ftmul@f2+1
  3185  0065B0  C240  F01E         	movff	main@val1+2,___ftmul@f2+2
  3186  0065B4  C238  F019         	movff	_main$1209,___ftmul@f1
  3187  0065B8  C239  F01A         	movff	_main$1209+1,___ftmul@f1+1
  3188  0065BC  C23A  F01B         	movff	_main$1209+2,___ftmul@f1+2
  3189  0065C0  EC58  F020         	call	___ftmul	;wreg free
  3190  0065C4  C019  F23B         	movff	?___ftmul,_main$1210
  3191  0065C8  C01A  F23C         	movff	?___ftmul+1,_main$1210+1
  3192  0065CC  C01B  F23D         	movff	?___ftmul+2,_main$1210+2
  3193                           
  3194                           ;main.c: 107: int y2 = (int)(((((float)5/1024)*data[64-cur2_x])-2.50f)*val1*2);
  3195  0065D0  0E00               	movlw	0
  3196  0065D2  6E1C               	movwf	___ftmul@f2,c
  3197  0065D4  0E00               	movlw	0
  3198  0065D6  6E1D               	movwf	___ftmul@f2+1,c
  3199  0065D8  0E40               	movlw	64
  3200  0065DA  6E1E               	movwf	___ftmul@f2+2,c
  3201  0065DC  C23B  F019         	movff	_main$1210,___ftmul@f1
  3202  0065E0  C23C  F01A         	movff	_main$1210+1,___ftmul@f1+1
  3203  0065E4  C23D  F01B         	movff	_main$1210+2,___ftmul@f1+2
  3204  0065E8  EC58  F020         	call	___ftmul	;wreg free
  3205  0065EC  C019  F03E         	movff	?___ftmul,___fttol@f1
  3206  0065F0  C01A  F03F         	movff	?___ftmul+1,___fttol@f1+1
  3207  0065F4  C01B  F040         	movff	?___ftmul+2,___fttol@f1+2
  3208  0065F8  ECDE  F01F         	call	___fttol	;wreg free
  3209  0065FC  C03E  F0DB         	movff	?___fttol,main@y2
  3210  006600  C03F  F0DC         	movff	?___fttol+1,main@y2+1
  3211                           
  3212                           ;main.c: 108: for (int a = 8; a < 56; a++)
  3213  006604  0E00               	movlw	0
  3214  006606  0102               	movlb	2	; () banked
  3215  006608  6F2F               	movwf	(main@a+1)& (0+255),b
  3216  00660A  0E08               	movlw	8
  3217  00660C  6F2E               	movwf	main@a& (0+255),b
  3218  00660E                     l4873:
  3219                           
  3220                           ; BSR set to: 2
  3221  00660E  0102               	movlb	2	; () banked
  3222  006610  BF2F               	btfsc	(main@a+1)& (0+255),7,b
  3223  006612  D008               	goto	l4877
  3224  006614  0102               	movlb	2	; () banked
  3225  006616  512F               	movf	(main@a+1)& (0+255),w,b
  3226  006618  E159               	bnz	l4893
  3227  00661A  0E38               	movlw	56
  3228  00661C  0102               	movlb	2	; () banked
  3229  00661E  5D2E               	subwf	main@a& (0+255),w,b
  3230  006620  B0D8               	btfsc	status,0,c
  3231  006622  D054               	goto	l4893
  3232  006624                     l4877:
  3233                           
  3234                           ; BSR set to: 2
  3235                           ;main.c: 109: {
  3236                           ;main.c: 111: if (a != (32-y1) && a != 32 )
  3237  006624  C05E  F05A         	movff	main@y1,??_main
  3238  006628  C05F  F05B         	movff	main@y1+1,??_main+1
  3239  00662C  1E5A               	comf	??_main,f,c
  3240  00662E  1E5B               	comf	??_main+1,f,c
  3241  006630  4A5A               	infsnz	??_main,f,c
  3242  006632  2A5B               	incf	??_main+1,f,c
  3243  006634  0E20               	movlw	32
  3244  006636  265A               	addwf	??_main,f,c
  3245  006638  0E00               	movlw	0
  3246  00663A  225B               	addwfc	??_main+1,f,c
  3247  00663C  0102               	movlb	2	; () banked
  3248  00663E  512E               	movf	main@a& (0+255),w,b
  3249  006640  185A               	xorwf	??_main,w,c
  3250  006642  E105               	bnz	u5350
  3251  006644  0102               	movlb	2	; () banked
  3252  006646  512F               	movf	(main@a+1)& (0+255),w,b
  3253  006648  185B               	xorwf	??_main+1,w,c
  3254  00664A  B4D8               	btfsc	status,2,c
  3255  00664C  D013               	goto	l4883
  3256  00664E                     u5350:
  3257                           
  3258                           ; BSR set to: 2
  3259  00664E  0E20               	movlw	32
  3260  006650  0102               	movlb	2	; () banked
  3261  006652  192E               	xorwf	main@a& (0+255),w,b
  3262  006654  0102               	movlb	2	; () banked
  3263  006656  112F               	iorwf	(main@a+1)& (0+255),w,b
  3264  006658  B4D8               	btfsc	status,2,c
  3265  00665A  D00C               	goto	l4883
  3266                           
  3267                           ; BSR set to: 2
  3268                           ;main.c: 112: {
  3269                           ;main.c: 113: lcdplotpixel2(64-cur1_x,a,1);
  3270  00665C  C22E  F00F         	movff	main@a,lcdplotpixel2@ry
  3271  006660  0E00               	movlw	0
  3272  006662  6E11               	movwf	lcdplotpixel2@blank+1,c
  3273  006664  0E01               	movlw	1
  3274  006666  6E10               	movwf	lcdplotpixel2@blank,c
  3275  006668  0102               	movlb	2	; () banked
  3276  00666A  5134               	movf	main@cur1_x& (0+255),w,b
  3277  00666C  0800               	sublw	0
  3278  00666E  0F40               	addlw	64
  3279  006670  ECFF  F021         	call	_lcdplotpixel2
  3280  006674                     l4883:
  3281                           
  3282                           ;main.c: 114: }
  3283                           ;main.c: 115: if (a != (32-y2) && a != 32 )
  3284  006674  C0DB  F05A         	movff	main@y2,??_main
  3285  006678  C0DC  F05B         	movff	main@y2+1,??_main+1
  3286  00667C  1E5A               	comf	??_main,f,c
  3287  00667E  1E5B               	comf	??_main+1,f,c
  3288  006680  4A5A               	infsnz	??_main,f,c
  3289  006682  2A5B               	incf	??_main+1,f,c
  3290  006684  0E20               	movlw	32
  3291  006686  265A               	addwf	??_main,f,c
  3292  006688  0E00               	movlw	0
  3293  00668A  225B               	addwfc	??_main+1,f,c
  3294  00668C  0102               	movlb	2	; () banked
  3295  00668E  512E               	movf	main@a& (0+255),w,b
  3296  006690  185A               	xorwf	??_main,w,c
  3297  006692  E105               	bnz	u5370
  3298  006694  0102               	movlb	2	; () banked
  3299  006696  512F               	movf	(main@a+1)& (0+255),w,b
  3300  006698  185B               	xorwf	??_main+1,w,c
  3301  00669A  B4D8               	btfsc	status,2,c
  3302  00669C  D013               	goto	l4889
  3303  00669E                     u5370:
  3304                           
  3305                           ; BSR set to: 2
  3306  00669E  0E20               	movlw	32
  3307  0066A0  0102               	movlb	2	; () banked
  3308  0066A2  192E               	xorwf	main@a& (0+255),w,b
  3309  0066A4  0102               	movlb	2	; () banked
  3310  0066A6  112F               	iorwf	(main@a+1)& (0+255),w,b
  3311  0066A8  B4D8               	btfsc	status,2,c
  3312  0066AA  D00C               	goto	l4889
  3313                           
  3314                           ; BSR set to: 2
  3315                           ;main.c: 116: {
  3316                           ;main.c: 117: lcdplotpixel2(64-cur2_x,a,1);
  3317  0066AC  C22E  F00F         	movff	main@a,lcdplotpixel2@ry
  3318  0066B0  0E00               	movlw	0
  3319  0066B2  6E11               	movwf	lcdplotpixel2@blank+1,c
  3320  0066B4  0E01               	movlw	1
  3321  0066B6  6E10               	movwf	lcdplotpixel2@blank,c
  3322  0066B8  0102               	movlb	2	; () banked
  3323  0066BA  5136               	movf	main@cur2_x& (0+255),w,b
  3324  0066BC  0800               	sublw	0
  3325  0066BE  0F40               	addlw	64
  3326  0066C0  ECFF  F021         	call	_lcdplotpixel2
  3327  0066C4                     l4889:
  3328  0066C4  0102               	movlb	2	; () banked
  3329  0066C6  4B2E               	infsnz	main@a& (0+255),f,b
  3330  0066C8  2B2F               	incf	(main@a+1)& (0+255),f,b
  3331  0066CA  D7A1               	goto	l4873
  3332  0066CC                     l4893:
  3333                           
  3334                           ; BSR set to: 2
  3335                           ;main.c: 118: }
  3336                           ;main.c: 119: }
  3337                           ;main.c: 120: cur1_x = cur2_x = 0;
  3338  0066CC  0E00               	movlw	0
  3339  0066CE  0102               	movlb	2	; () banked
  3340  0066D0  6F37               	movwf	(main@cur2_x+1)& (0+255),b
  3341  0066D2  0E00               	movlw	0
  3342  0066D4  6F36               	movwf	main@cur2_x& (0+255),b
  3343  0066D6  C236  F234         	movff	main@cur2_x,main@cur1_x
  3344  0066DA  C237  F235         	movff	main@cur2_x+1,main@cur1_x+1
  3345  0066DE                     l65:
  3346                           
  3347                           ; BSR set to: 2
  3348                           ;main.c: 121: }
  3349                           ;main.c: 122: int cur1_y_new = 0;
  3350  0066DE  0E00               	movlw	0
  3351  0066E0  0102               	movlb	2	; () banked
  3352  0066E2  6F0B               	movwf	(main@cur1_y_new+1)& (0+255),b
  3353  0066E4  0E00               	movlw	0
  3354  0066E6  6F0A               	movwf	main@cur1_y_new& (0+255),b
  3355                           
  3356                           ;main.c: 123: int cur2_y_new = 0;
  3357  0066E8  0E00               	movlw	0
  3358  0066EA  0102               	movlb	2	; () banked
  3359  0066EC  6F0D               	movwf	(main@cur2_y_new+1)& (0+255),b
  3360  0066EE  0E00               	movlw	0
  3361  0066F0  6F0C               	movwf	main@cur2_y_new& (0+255),b
  3362                           
  3363                           ;main.c: 126: ADCON0 = 0b00001101;
  3364  0066F2  0E0D               	movlw	13
  3365  0066F4  6EC2               	movwf	4034,c	;volatile
  3366                           
  3367                           ; BSR set to: 2
  3368                           ;main.c: 128: ADCON0bits.GO = 1;
  3369  0066F6  82C2               	bsf	4034,1,c	;volatile
  3370  0066F8                     l72:
  3371  0066F8  B2C2               	btfsc	4034,1,c	;volatile
  3372  0066FA  D7FE               	goto	l72
  3373                           
  3374                           ;main.c: 132: int s_val = ((unsigned int)(ADRESH << 8) | ADRESL);
  3375  0066FC  50C4               	movf	4036,w,c	;volatile
  3376  0066FE  6E5A               	movwf	??_main& (0+255),c
  3377  006700  50C3               	movf	4035,w,c	;volatile
  3378  006702  0100               	movlb	0	; () banked
  3379  006704  6FF4               	movwf	main@s_val& (0+255),b
  3380  006706  C05A  F0F5         	movff	??_main,main@s_val+1
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;main.c: 133: cur1_y_new = ((1024/2)-s_val)/21;
  3384  00670A  C0F4  F05A         	movff	main@s_val,??_main
  3385  00670E  C0F5  F05B         	movff	main@s_val+1,??_main+1
  3386  006712  1E5A               	comf	??_main,f,c
  3387  006714  1E5B               	comf	??_main+1,f,c
  3388  006716  4A5A               	infsnz	??_main,f,c
  3389  006718  2A5B               	incf	??_main+1,f,c
  3390  00671A  0E00               	movlw	0
  3391  00671C  245A               	addwf	??_main,w,c
  3392  00671E  6E07               	movwf	___awdiv@dividend,c
  3393  006720  0E02               	movlw	2
  3394  006722  205B               	addwfc	??_main+1,w,c
  3395  006724  6E08               	movwf	___awdiv@dividend+1,c
  3396  006726  0E00               	movlw	0
  3397  006728  6E0A               	movwf	___awdiv@divisor+1,c
  3398  00672A  0E15               	movlw	21
  3399  00672C  6E09               	movwf	___awdiv@divisor,c
  3400  00672E  ECF4  F01D         	call	___awdiv	;wreg free
  3401  006732  C007  F20A         	movff	?___awdiv,main@cur1_y_new
  3402  006736  C008  F20B         	movff	?___awdiv+1,main@cur1_y_new+1
  3403                           
  3404                           ;main.c: 136: if (cur1_y_new != cur1_y)
  3405  00673A  0102               	movlb	2	; () banked
  3406  00673C  5130               	movf	main@cur1_y& (0+255),w,b
  3407  00673E  0102               	movlb	2	; () banked
  3408  006740  190A               	xorwf	main@cur1_y_new& (0+255),w,b
  3409  006742  E106               	bnz	u5410
  3410  006744  0102               	movlb	2	; () banked
  3411  006746  5131               	movf	(main@cur1_y+1)& (0+255),w,b
  3412  006748  0102               	movlb	2	; () banked
  3413  00674A  190B               	xorwf	(main@cur1_y_new+1)& (0+255),w,b
  3414  00674C  B4D8               	btfsc	status,2,c
  3415  00674E  D0D5               	goto	l4939
  3416  006750                     u5410:
  3417                           
  3418                           ; BSR set to: 2
  3419                           ;main.c: 137: {
  3420                           ;main.c: 139: for (int a = 0; a < 128; a++)
  3421  006750  0E00               	movlw	0
  3422  006752  0102               	movlb	2	; () banked
  3423  006754  6F23               	movwf	(main@a_348+1)& (0+255),b
  3424  006756  0E00               	movlw	0
  3425  006758  6F22               	movwf	main@a_348& (0+255),b
  3426                           
  3427                           ; BSR set to: 2
  3428  00675A  0102               	movlb	2	; () banked
  3429  00675C  BF23               	btfsc	(main@a_348+1)& (0+255),7,b
  3430  00675E  D00A               	goto	l4909
  3431  006760  0102               	movlb	2	; () banked
  3432  006762  5123               	movf	(main@a_348+1)& (0+255),w,b
  3433  006764  E106               	bnz	u5420
  3434  006766  0E80               	movlw	128
  3435  006768  0102               	movlb	2	; () banked
  3436  00676A  5D22               	subwf	main@a_348& (0+255),w,b
  3437  00676C  B0D8               	btfsc	status,0,c
  3438  00676E  D0A4               	goto	l77
  3439  006770  D001               	goto	l4909
  3440  006772                     u5420:
  3441                           
  3442                           ; BSR set to: 2
  3443  006772  D0A2               	goto	l77
  3444  006774                     l4909:
  3445                           
  3446                           ; BSR set to: 2
  3447                           ;main.c: 140: {
  3448                           ;main.c: 141: int y = (int)(((((float)5/1024)*data[a])-2.50f)*val1*2);
  3449  006774  0E00               	movlw	0
  3450  006776  6E35               	movwf	___ftadd@f2,c
  3451  006778  0E20               	movlw	32
  3452  00677A  6E36               	movwf	___ftadd@f2+1,c
  3453  00677C  0EC0               	movlw	192
  3454  00677E  6E37               	movwf	___ftadd@f2+2,c
  3455  006780  0E00               	movlw	0
  3456  006782  6E1C               	movwf	___ftmul@f2,c
  3457  006784  0EA0               	movlw	160
  3458  006786  6E1D               	movwf	___ftmul@f2+1,c
  3459  006788  0E3B               	movlw	59
  3460  00678A  6E1E               	movwf	___ftmul@f2+2,c
  3461  00678C  90D8               	bcf	status,0,c
  3462  00678E  0102               	movlb	2	; () banked
  3463  006790  3522               	rlcf	main@a_348& (0+255),w,b
  3464  006792  6ED9               	movwf	fsr2l,c
  3465  006794  0102               	movlb	2	; () banked
  3466  006796  3523               	rlcf	(main@a_348+1)& (0+255),w,b
  3467  006798  6EDA               	movwf	fsr2h,c
  3468  00679A  0E00               	movlw	low main@data
  3469  00679C  26D9               	addwf	fsr2l,f,c
  3470  00679E  0E01               	movlw	high main@data
  3471  0067A0  22DA               	addwfc	fsr2h,f,c
  3472  0067A2  CFDE F009          	movff	postinc2,___lwtoft@c
  3473  0067A6  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3474  0067AA  EC9B  F01B         	call	___lwtoft	;wreg free
  3475  0067AE  C009  F019         	movff	?___lwtoft,___ftmul@f1
  3476  0067B2  C00A  F01A         	movff	?___lwtoft+1,___ftmul@f1+1
  3477  0067B6  C00B  F01B         	movff	?___lwtoft+2,___ftmul@f1+2
  3478  0067BA  EC58  F020         	call	___ftmul	;wreg free
  3479  0067BE  C019  F032         	movff	?___ftmul,___ftadd@f1
  3480  0067C2  C01A  F033         	movff	?___ftmul+1,___ftadd@f1+1
  3481  0067C6  C01B  F034         	movff	?___ftmul+2,___ftadd@f1+2
  3482  0067CA  EC45  F023         	call	___ftadd	;wreg free
  3483  0067CE  C032  F238         	movff	?___ftadd,_main$1209
  3484  0067D2  C033  F239         	movff	?___ftadd+1,_main$1209+1
  3485  0067D6  C034  F23A         	movff	?___ftadd+2,_main$1209+2
  3486                           
  3487                           ;main.c: 140: {
  3488                           ;main.c: 141: int y = (int)(((((float)5/1024)*data[a])-2.50f)*val1*2);
  3489  0067DA  C23E  F01C         	movff	main@val1,___ftmul@f2
  3490  0067DE  C23F  F01D         	movff	main@val1+1,___ftmul@f2+1
  3491  0067E2  C240  F01E         	movff	main@val1+2,___ftmul@f2+2
  3492  0067E6  C238  F019         	movff	_main$1209,___ftmul@f1
  3493  0067EA  C239  F01A         	movff	_main$1209+1,___ftmul@f1+1
  3494  0067EE  C23A  F01B         	movff	_main$1209+2,___ftmul@f1+2
  3495  0067F2  EC58  F020         	call	___ftmul	;wreg free
  3496  0067F6  C019  F23B         	movff	?___ftmul,_main$1210
  3497  0067FA  C01A  F23C         	movff	?___ftmul+1,_main$1210+1
  3498  0067FE  C01B  F23D         	movff	?___ftmul+2,_main$1210+2
  3499                           
  3500                           ;main.c: 140: {
  3501                           ;main.c: 141: int y = (int)(((((float)5/1024)*data[a])-2.50f)*val1*2);
  3502  006802  0E00               	movlw	0
  3503  006804  6E1C               	movwf	___ftmul@f2,c
  3504  006806  0E00               	movlw	0
  3505  006808  6E1D               	movwf	___ftmul@f2+1,c
  3506  00680A  0E40               	movlw	64
  3507  00680C  6E1E               	movwf	___ftmul@f2+2,c
  3508  00680E  C23B  F019         	movff	_main$1210,___ftmul@f1
  3509  006812  C23C  F01A         	movff	_main$1210+1,___ftmul@f1+1
  3510  006816  C23D  F01B         	movff	_main$1210+2,___ftmul@f1+2
  3511  00681A  EC58  F020         	call	___ftmul	;wreg free
  3512  00681E  C019  F03E         	movff	?___ftmul,___fttol@f1
  3513  006822  C01A  F03F         	movff	?___ftmul+1,___fttol@f1+1
  3514  006826  C01B  F040         	movff	?___ftmul+2,___fttol@f1+2
  3515  00682A  ECDE  F01F         	call	___fttol	;wreg free
  3516  00682E  C03E  F0DD         	movff	?___fttol,main@y
  3517  006832  C03F  F0DE         	movff	?___fttol+1,main@y+1
  3518                           
  3519                           ;main.c: 143: if (y != cur1_y && a != 64 && cur1_y != cur2_y )
  3520  006836  0102               	movlb	2	; () banked
  3521  006838  5130               	movf	main@cur1_y& (0+255),w,b
  3522  00683A  0100               	movlb	0	; () banked
  3523  00683C  19DD               	xorwf	main@y& (0+255),w,b
  3524  00683E  E106               	bnz	u5430
  3525  006840  0102               	movlb	2	; () banked
  3526  006842  5131               	movf	(main@cur1_y+1)& (0+255),w,b
  3527  006844  0100               	movlb	0	; () banked
  3528  006846  19DE               	xorwf	(main@y+1)& (0+255),w,b
  3529  006848  B4D8               	btfsc	status,2,c
  3530  00684A  D01F               	goto	l78
  3531  00684C                     u5430:
  3532                           
  3533                           ; BSR set to: 0
  3534  00684C  0E40               	movlw	64
  3535  00684E  0102               	movlb	2	; () banked
  3536  006850  1922               	xorwf	main@a_348& (0+255),w,b
  3537  006852  0102               	movlb	2	; () banked
  3538  006854  1123               	iorwf	(main@a_348+1)& (0+255),w,b
  3539  006856  B4D8               	btfsc	status,2,c
  3540  006858  D018               	goto	l78
  3541                           
  3542                           ; BSR set to: 2
  3543  00685A  0102               	movlb	2	; () banked
  3544  00685C  5132               	movf	main@cur2_y& (0+255),w,b
  3545  00685E  0102               	movlb	2	; () banked
  3546  006860  1930               	xorwf	main@cur1_y& (0+255),w,b
  3547  006862  E106               	bnz	u5450
  3548  006864  0102               	movlb	2	; () banked
  3549  006866  5133               	movf	(main@cur2_y+1)& (0+255),w,b
  3550  006868  0102               	movlb	2	; () banked
  3551  00686A  1931               	xorwf	(main@cur1_y+1)& (0+255),w,b
  3552  00686C  B4D8               	btfsc	status,2,c
  3553  00686E  D00D               	goto	l78
  3554  006870                     u5450:
  3555                           
  3556                           ; BSR set to: 2
  3557                           ;main.c: 144: {
  3558                           ;main.c: 145: lcdplotpixel2(a,32-cur1_y,1);
  3559  006870  0102               	movlb	2	; () banked
  3560  006872  5130               	movf	main@cur1_y& (0+255),w,b
  3561  006874  0800               	sublw	0
  3562  006876  0F20               	addlw	32
  3563  006878  6E0F               	movwf	lcdplotpixel2@ry,c
  3564  00687A  0E00               	movlw	0
  3565  00687C  6E11               	movwf	lcdplotpixel2@blank+1,c
  3566  00687E  0E01               	movlw	1
  3567  006880  6E10               	movwf	lcdplotpixel2@blank,c
  3568  006882  0102               	movlb	2	; () banked
  3569  006884  5122               	movf	main@a_348& (0+255),w,b
  3570  006886  ECFF  F021         	call	_lcdplotpixel2
  3571  00688A                     l78:
  3572                           
  3573                           ;main.c: 146: }
  3574                           ;main.c: 148: lcdplotpixel2(a,32-cur1_y_new,0);
  3575  00688A  0102               	movlb	2	; () banked
  3576  00688C  510A               	movf	main@cur1_y_new& (0+255),w,b
  3577  00688E  0800               	sublw	0
  3578  006890  0F20               	addlw	32
  3579  006892  6E0F               	movwf	lcdplotpixel2@ry,c
  3580  006894  0E00               	movlw	0
  3581  006896  6E11               	movwf	lcdplotpixel2@blank+1,c
  3582  006898  0E00               	movlw	0
  3583  00689A  6E10               	movwf	lcdplotpixel2@blank,c
  3584  00689C  0102               	movlb	2	; () banked
  3585  00689E  5122               	movf	main@a_348& (0+255),w,b
  3586  0068A0  ECFF  F021         	call	_lcdplotpixel2
  3587  0068A4  0102               	movlb	2	; () banked
  3588  0068A6  4B22               	infsnz	main@a_348& (0+255),f,b
  3589  0068A8  2B23               	incf	(main@a_348+1)& (0+255),f,b
  3590                           
  3591                           ; BSR set to: 2
  3592  0068AA  0102               	movlb	2	; () banked
  3593  0068AC  BF23               	btfsc	(main@a_348+1)& (0+255),7,b
  3594  0068AE  D762               	goto	l4909
  3595  0068B0  0102               	movlb	2	; () banked
  3596  0068B2  5123               	movf	(main@a_348+1)& (0+255),w,b
  3597  0068B4  E101               	bnz	u5460
  3598  0068B6  D757               	goto	L1
  3599  0068B8                     u5460:
  3600  0068B8                     l77:
  3601                           
  3602                           ; BSR set to: 2
  3603                           ;main.c: 149: }
  3604                           ;main.c: 151: cur1_y = cur1_y_new;
  3605  0068B8  C20A  F230         	movff	main@cur1_y_new,main@cur1_y
  3606  0068BC  C20B  F231         	movff	main@cur1_y_new+1,main@cur1_y+1
  3607                           
  3608                           ; BSR set to: 2
  3609                           ;main.c: 153: for (int i = 70; i < 128; i++)
  3610  0068C0  0E00               	movlw	0
  3611  0068C2  0102               	movlb	2	; () banked
  3612  0068C4  6F0F               	movwf	(main@i+1)& (0+255),b
  3613  0068C6  0E46               	movlw	70
  3614  0068C8  6F0E               	movwf	main@i& (0+255),b
  3615  0068CA                     l4929:
  3616                           
  3617                           ; BSR set to: 2
  3618  0068CA  0102               	movlb	2	; () banked
  3619  0068CC  BF0F               	btfsc	(main@i+1)& (0+255),7,b
  3620  0068CE  D008               	goto	l4933
  3621  0068D0  0102               	movlb	2	; () banked
  3622  0068D2  510F               	movf	(main@i+1)& (0+255),w,b
  3623  0068D4  E112               	bnz	l4939
  3624  0068D6  0E80               	movlw	128
  3625  0068D8  0102               	movlb	2	; () banked
  3626  0068DA  5D0E               	subwf	main@i& (0+255),w,b
  3627  0068DC  B0D8               	btfsc	status,0,c
  3628  0068DE  D00D               	goto	l4939
  3629  0068E0                     l4933:
  3630                           
  3631                           ; BSR set to: 2
  3632                           ;main.c: 154: {
  3633                           ;main.c: 155: lcdplotpixel2(i,0,-1);
  3634  0068E0  0E00               	movlw	0
  3635  0068E2  6E0F               	movwf	lcdplotpixel2@ry,c
  3636  0068E4  0EFF               	movlw	255
  3637  0068E6  6E11               	movwf	lcdplotpixel2@blank+1,c
  3638  0068E8  6810               	setf	lcdplotpixel2@blank,c
  3639  0068EA  0102               	movlb	2	; () banked
  3640  0068EC  510E               	movf	main@i& (0+255),w,b
  3641  0068EE  ECFF  F021         	call	_lcdplotpixel2
  3642  0068F2  0102               	movlb	2	; () banked
  3643  0068F4  4B0E               	infsnz	main@i& (0+255),f,b
  3644  0068F6  2B0F               	incf	(main@i+1)& (0+255),f,b
  3645  0068F8  D7E8               	goto	l4929
  3646  0068FA                     l4939:
  3647                           
  3648                           ; BSR set to: 2
  3649                           ;main.c: 156: }
  3650                           ;main.c: 157: }
  3651                           ;main.c: 160: ADCON0=0b00010001;
  3652  0068FA  0E11               	movlw	17
  3653  0068FC  6EC2               	movwf	4034,c	;volatile
  3654                           
  3655                           ; BSR set to: 2
  3656                           ;main.c: 162: ADCON0bits.GO=1;
  3657  0068FE  82C2               	bsf	4034,1,c	;volatile
  3658  006900                     l81:
  3659  006900  B2C2               	btfsc	4034,1,c	;volatile
  3660  006902  D7FE               	goto	l81
  3661                           
  3662                           ;main.c: 165: int s_val = ((unsigned int)(ADRESH << 8) | ADRESL);
  3663  006904  50C4               	movf	4036,w,c	;volatile
  3664  006906  6E5A               	movwf	??_main& (0+255),c
  3665  006908  50C3               	movf	4035,w,c	;volatile
  3666  00690A  0100               	movlb	0	; () banked
  3667  00690C  6FF4               	movwf	main@s_val& (0+255),b
  3668  00690E  C05A  F0F5         	movff	??_main,main@s_val+1
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;main.c: 166: cur2_y_new = ((1024/2)-s_val)/21;
  3672  006912  C0F4  F05A         	movff	main@s_val,??_main
  3673  006916  C0F5  F05B         	movff	main@s_val+1,??_main+1
  3674  00691A  1E5A               	comf	??_main,f,c
  3675  00691C  1E5B               	comf	??_main+1,f,c
  3676  00691E  4A5A               	infsnz	??_main,f,c
  3677  006920  2A5B               	incf	??_main+1,f,c
  3678  006922  0E00               	movlw	0
  3679  006924  245A               	addwf	??_main,w,c
  3680  006926  6E07               	movwf	___awdiv@dividend,c
  3681  006928  0E02               	movlw	2
  3682  00692A  205B               	addwfc	??_main+1,w,c
  3683  00692C  6E08               	movwf	___awdiv@dividend+1,c
  3684  00692E  0E00               	movlw	0
  3685  006930  6E0A               	movwf	___awdiv@divisor+1,c
  3686  006932  0E15               	movlw	21
  3687  006934  6E09               	movwf	___awdiv@divisor,c
  3688  006936  ECF4  F01D         	call	___awdiv	;wreg free
  3689  00693A  C007  F20C         	movff	?___awdiv,main@cur2_y_new
  3690  00693E  C008  F20D         	movff	?___awdiv+1,main@cur2_y_new+1
  3691                           
  3692                           ;main.c: 168: if (cur2_y_new != cur2_y)
  3693  006942  0102               	movlb	2	; () banked
  3694  006944  5132               	movf	main@cur2_y& (0+255),w,b
  3695  006946  0102               	movlb	2	; () banked
  3696  006948  190C               	xorwf	main@cur2_y_new& (0+255),w,b
  3697  00694A  E106               	bnz	u5500
  3698  00694C  0102               	movlb	2	; () banked
  3699  00694E  5133               	movf	(main@cur2_y+1)& (0+255),w,b
  3700  006950  0102               	movlb	2	; () banked
  3701  006952  190D               	xorwf	(main@cur2_y_new+1)& (0+255),w,b
  3702  006954  B4D8               	btfsc	status,2,c
  3703  006956  D0D7               	goto	l4987
  3704  006958                     u5500:
  3705                           
  3706                           ; BSR set to: 2
  3707                           ;main.c: 169: {
  3708                           ;main.c: 171: for (int a = 0; a < 128; a++)
  3709  006958  0E00               	movlw	0
  3710  00695A  0102               	movlb	2	; () banked
  3711  00695C  6F25               	movwf	(main@a_351+1)& (0+255),b
  3712  00695E  0E00               	movlw	0
  3713  006960  6F24               	movwf	main@a_351& (0+255),b
  3714                           
  3715                           ; BSR set to: 2
  3716  006962  0102               	movlb	2	; () banked
  3717  006964  BF25               	btfsc	(main@a_351+1)& (0+255),7,b
  3718  006966  D00A               	goto	l4955
  3719  006968  0102               	movlb	2	; () banked
  3720  00696A  5125               	movf	(main@a_351+1)& (0+255),w,b
  3721  00696C  E106               	bnz	u5510
  3722  00696E  0E80               	movlw	128
  3723  006970  0102               	movlb	2	; () banked
  3724  006972  5D24               	subwf	main@a_351& (0+255),w,b
  3725  006974  B0D8               	btfsc	status,0,c
  3726  006976  D0A4               	goto	l86
  3727  006978  D001               	goto	l4955
  3728  00697A                     u5510:
  3729                           
  3730                           ; BSR set to: 2
  3731  00697A  D0A2               	goto	l86
  3732  00697C                     l4955:
  3733                           
  3734                           ; BSR set to: 2
  3735                           ;main.c: 172: {
  3736                           ;main.c: 173: int y = (int)(((((float)5/1024)*data[a])-2.50f)*val1*2);
  3737  00697C  0E00               	movlw	0
  3738  00697E  6E35               	movwf	___ftadd@f2,c
  3739  006980  0E20               	movlw	32
  3740  006982  6E36               	movwf	___ftadd@f2+1,c
  3741  006984  0EC0               	movlw	192
  3742  006986  6E37               	movwf	___ftadd@f2+2,c
  3743  006988  0E00               	movlw	0
  3744  00698A  6E1C               	movwf	___ftmul@f2,c
  3745  00698C  0EA0               	movlw	160
  3746  00698E  6E1D               	movwf	___ftmul@f2+1,c
  3747  006990  0E3B               	movlw	59
  3748  006992  6E1E               	movwf	___ftmul@f2+2,c
  3749  006994  90D8               	bcf	status,0,c
  3750  006996  0102               	movlb	2	; () banked
  3751  006998  3524               	rlcf	main@a_351& (0+255),w,b
  3752  00699A  6ED9               	movwf	fsr2l,c
  3753  00699C  0102               	movlb	2	; () banked
  3754  00699E  3525               	rlcf	(main@a_351+1)& (0+255),w,b
  3755  0069A0  6EDA               	movwf	fsr2h,c
  3756  0069A2  0E00               	movlw	low main@data
  3757  0069A4  26D9               	addwf	fsr2l,f,c
  3758  0069A6  0E01               	movlw	high main@data
  3759  0069A8  22DA               	addwfc	fsr2h,f,c
  3760  0069AA  CFDE F009          	movff	postinc2,___lwtoft@c
  3761  0069AE  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3762  0069B2  EC9B  F01B         	call	___lwtoft	;wreg free
  3763  0069B6  C009  F019         	movff	?___lwtoft,___ftmul@f1
  3764  0069BA  C00A  F01A         	movff	?___lwtoft+1,___ftmul@f1+1
  3765  0069BE  C00B  F01B         	movff	?___lwtoft+2,___ftmul@f1+2
  3766  0069C2  EC58  F020         	call	___ftmul	;wreg free
  3767  0069C6  C019  F032         	movff	?___ftmul,___ftadd@f1
  3768  0069CA  C01A  F033         	movff	?___ftmul+1,___ftadd@f1+1
  3769  0069CE  C01B  F034         	movff	?___ftmul+2,___ftadd@f1+2
  3770  0069D2  EC45  F023         	call	___ftadd	;wreg free
  3771  0069D6  C032  F238         	movff	?___ftadd,_main$1209
  3772  0069DA  C033  F239         	movff	?___ftadd+1,_main$1209+1
  3773  0069DE  C034  F23A         	movff	?___ftadd+2,_main$1209+2
  3774                           
  3775                           ;main.c: 172: {
  3776                           ;main.c: 173: int y = (int)(((((float)5/1024)*data[a])-2.50f)*val1*2);
  3777  0069E2  C23E  F01C         	movff	main@val1,___ftmul@f2
  3778  0069E6  C23F  F01D         	movff	main@val1+1,___ftmul@f2+1
  3779  0069EA  C240  F01E         	movff	main@val1+2,___ftmul@f2+2
  3780  0069EE  C238  F019         	movff	_main$1209,___ftmul@f1
  3781  0069F2  C239  F01A         	movff	_main$1209+1,___ftmul@f1+1
  3782  0069F6  C23A  F01B         	movff	_main$1209+2,___ftmul@f1+2
  3783  0069FA  EC58  F020         	call	___ftmul	;wreg free
  3784  0069FE  C019  F23B         	movff	?___ftmul,_main$1210
  3785  006A02  C01A  F23C         	movff	?___ftmul+1,_main$1210+1
  3786  006A06  C01B  F23D         	movff	?___ftmul+2,_main$1210+2
  3787                           
  3788                           ;main.c: 172: {
  3789                           ;main.c: 173: int y = (int)(((((float)5/1024)*data[a])-2.50f)*val1*2);
  3790  006A0A  0E00               	movlw	0
  3791  006A0C  6E1C               	movwf	___ftmul@f2,c
  3792  006A0E  0E00               	movlw	0
  3793  006A10  6E1D               	movwf	___ftmul@f2+1,c
  3794  006A12  0E40               	movlw	64
  3795  006A14  6E1E               	movwf	___ftmul@f2+2,c
  3796  006A16  C23B  F019         	movff	_main$1210,___ftmul@f1
  3797  006A1A  C23C  F01A         	movff	_main$1210+1,___ftmul@f1+1
  3798  006A1E  C23D  F01B         	movff	_main$1210+2,___ftmul@f1+2
  3799  006A22  EC58  F020         	call	___ftmul	;wreg free
  3800  006A26  C019  F03E         	movff	?___ftmul,___fttol@f1
  3801  006A2A  C01A  F03F         	movff	?___ftmul+1,___fttol@f1+1
  3802  006A2E  C01B  F040         	movff	?___ftmul+2,___fttol@f1+2
  3803  006A32  ECDE  F01F         	call	___fttol	;wreg free
  3804  006A36  C03E  F0DF         	movff	?___fttol,main@y_352
  3805  006A3A  C03F  F0E0         	movff	?___fttol+1,main@y_352+1
  3806                           
  3807                           ;main.c: 174: if (y != cur2_y && a != 64 && cur2_y != cur1_y )
  3808  006A3E  0102               	movlb	2	; () banked
  3809  006A40  5132               	movf	main@cur2_y& (0+255),w,b
  3810  006A42  0100               	movlb	0	; () banked
  3811  006A44  19DF               	xorwf	main@y_352& (0+255),w,b
  3812  006A46  E106               	bnz	u5520
  3813  006A48  0102               	movlb	2	; () banked
  3814  006A4A  5133               	movf	(main@cur2_y+1)& (0+255),w,b
  3815  006A4C  0100               	movlb	0	; () banked
  3816  006A4E  19E0               	xorwf	(main@y_352+1)& (0+255),w,b
  3817  006A50  B4D8               	btfsc	status,2,c
  3818  006A52  D01F               	goto	l87
  3819  006A54                     u5520:
  3820                           
  3821                           ; BSR set to: 0
  3822  006A54  0E40               	movlw	64
  3823  006A56  0102               	movlb	2	; () banked
  3824  006A58  1924               	xorwf	main@a_351& (0+255),w,b
  3825  006A5A  0102               	movlb	2	; () banked
  3826  006A5C  1125               	iorwf	(main@a_351+1)& (0+255),w,b
  3827  006A5E  B4D8               	btfsc	status,2,c
  3828  006A60  D018               	goto	l87
  3829                           
  3830                           ; BSR set to: 2
  3831  006A62  0102               	movlb	2	; () banked
  3832  006A64  5130               	movf	main@cur1_y& (0+255),w,b
  3833  006A66  0102               	movlb	2	; () banked
  3834  006A68  1932               	xorwf	main@cur2_y& (0+255),w,b
  3835  006A6A  E106               	bnz	u5540
  3836  006A6C  0102               	movlb	2	; () banked
  3837  006A6E  5131               	movf	(main@cur1_y+1)& (0+255),w,b
  3838  006A70  0102               	movlb	2	; () banked
  3839  006A72  1933               	xorwf	(main@cur2_y+1)& (0+255),w,b
  3840  006A74  B4D8               	btfsc	status,2,c
  3841  006A76  D00D               	goto	l87
  3842  006A78                     u5540:
  3843                           
  3844                           ; BSR set to: 2
  3845                           ;main.c: 175: {
  3846                           ;main.c: 176: lcdplotpixel2(a,32-cur2_y,1);
  3847  006A78  0102               	movlb	2	; () banked
  3848  006A7A  5132               	movf	main@cur2_y& (0+255),w,b
  3849  006A7C  0800               	sublw	0
  3850  006A7E  0F20               	addlw	32
  3851  006A80  6E0F               	movwf	lcdplotpixel2@ry,c
  3852  006A82  0E00               	movlw	0
  3853  006A84  6E11               	movwf	lcdplotpixel2@blank+1,c
  3854  006A86  0E01               	movlw	1
  3855  006A88  6E10               	movwf	lcdplotpixel2@blank,c
  3856  006A8A  0102               	movlb	2	; () banked
  3857  006A8C  5124               	movf	main@a_351& (0+255),w,b
  3858  006A8E  ECFF  F021         	call	_lcdplotpixel2
  3859  006A92                     l87:
  3860                           
  3861                           ;main.c: 177: }
  3862                           ;main.c: 179: lcdplotpixel2(a,32-cur2_y_new,0);
  3863  006A92  0102               	movlb	2	; () banked
  3864  006A94  510C               	movf	main@cur2_y_new& (0+255),w,b
  3865  006A96  0800               	sublw	0
  3866  006A98  0F20               	addlw	32
  3867  006A9A  6E0F               	movwf	lcdplotpixel2@ry,c
  3868  006A9C  0E00               	movlw	0
  3869  006A9E  6E11               	movwf	lcdplotpixel2@blank+1,c
  3870  006AA0  0E00               	movlw	0
  3871  006AA2  6E10               	movwf	lcdplotpixel2@blank,c
  3872  006AA4  0102               	movlb	2	; () banked
  3873  006AA6  5124               	movf	main@a_351& (0+255),w,b
  3874  006AA8  ECFF  F021         	call	_lcdplotpixel2
  3875  006AAC  0102               	movlb	2	; () banked
  3876  006AAE  4B24               	infsnz	main@a_351& (0+255),f,b
  3877  006AB0  2B25               	incf	(main@a_351+1)& (0+255),f,b
  3878                           
  3879                           ; BSR set to: 2
  3880  006AB2  0102               	movlb	2	; () banked
  3881  006AB4  BF25               	btfsc	(main@a_351+1)& (0+255),7,b
  3882  006AB6  D762               	goto	l4955
  3883  006AB8  0102               	movlb	2	; () banked
  3884  006ABA  5125               	movf	(main@a_351+1)& (0+255),w,b
  3885  006ABC  E101               	bnz	u5550
  3886  006ABE  D757               	goto	L2
  3887  006AC0                     u5550:
  3888  006AC0                     l86:
  3889                           
  3890                           ; BSR set to: 2
  3891                           ;main.c: 180: }
  3892                           ;main.c: 181: cur2_y = cur2_y_new;
  3893  006AC0  C20C  F232         	movff	main@cur2_y_new,main@cur2_y
  3894  006AC4  C20D  F233         	movff	main@cur2_y_new+1,main@cur2_y+1
  3895                           
  3896                           ; BSR set to: 2
  3897                           ;main.c: 183: for (int i = 70; i < 128; i++)
  3898  006AC8  0E00               	movlw	0
  3899  006ACA  0102               	movlb	2	; () banked
  3900  006ACC  6F11               	movwf	(main@i_353+1)& (0+255),b
  3901  006ACE  0E46               	movlw	70
  3902  006AD0  6F10               	movwf	main@i_353& (0+255),b
  3903  006AD2                     l4975:
  3904                           
  3905                           ; BSR set to: 2
  3906  006AD2  0102               	movlb	2	; () banked
  3907  006AD4  BF11               	btfsc	(main@i_353+1)& (0+255),7,b
  3908  006AD6  D008               	goto	l4979
  3909  006AD8  0102               	movlb	2	; () banked
  3910  006ADA  5111               	movf	(main@i_353+1)& (0+255),w,b
  3911  006ADC  E112               	bnz	l4985
  3912  006ADE  0E80               	movlw	128
  3913  006AE0  0102               	movlb	2	; () banked
  3914  006AE2  5D10               	subwf	main@i_353& (0+255),w,b
  3915  006AE4  B0D8               	btfsc	status,0,c
  3916  006AE6  D00D               	goto	l4985
  3917  006AE8                     l4979:
  3918                           
  3919                           ; BSR set to: 2
  3920                           ;main.c: 184: {
  3921                           ;main.c: 185: lcdplotpixel2(i,0,-1);
  3922  006AE8  0E00               	movlw	0
  3923  006AEA  6E0F               	movwf	lcdplotpixel2@ry,c
  3924  006AEC  0EFF               	movlw	255
  3925  006AEE  6E11               	movwf	lcdplotpixel2@blank+1,c
  3926  006AF0  6810               	setf	lcdplotpixel2@blank,c
  3927  006AF2  0102               	movlb	2	; () banked
  3928  006AF4  5110               	movf	main@i_353& (0+255),w,b
  3929  006AF6  ECFF  F021         	call	_lcdplotpixel2
  3930  006AFA  0102               	movlb	2	; () banked
  3931  006AFC  4B10               	infsnz	main@i_353& (0+255),f,b
  3932  006AFE  2B11               	incf	(main@i_353+1)& (0+255),f,b
  3933  006B00  D7E8               	goto	l4975
  3934  006B02                     l4985:
  3935                           
  3936                           ; BSR set to: 2
  3937                           ;main.c: 186: }
  3938                           ;main.c: 187: xyaxis();
  3939  006B02  EC9F  F022         	call	_xyaxis	;wreg free
  3940  006B06                     l4987:
  3941                           
  3942                           ;main.c: 188: }
  3943                           ;main.c: 190: float delta = abs(cur1_y-cur2_y) * y_div;
  3944  006B06  C232  F05A         	movff	main@cur2_y,??_main
  3945  006B0A  C233  F05B         	movff	main@cur2_y+1,??_main+1
  3946  006B0E  1E5A               	comf	??_main,f,c
  3947  006B10  1E5B               	comf	??_main+1,f,c
  3948  006B12  4A5A               	infsnz	??_main,f,c
  3949  006B14  2A5B               	incf	??_main+1,f,c
  3950  006B16  0102               	movlb	2	; () banked
  3951  006B18  5130               	movf	main@cur1_y& (0+255),w,b
  3952  006B1A  245A               	addwf	??_main,w,c
  3953  006B1C  6E01               	movwf	abs@a,c
  3954  006B1E  0102               	movlb	2	; () banked
  3955  006B20  5131               	movf	(main@cur1_y+1)& (0+255),w,b
  3956  006B22  205B               	addwfc	??_main+1,w,c
  3957  006B24  6E02               	movwf	abs@a+1,c
  3958  006B26  ECD2  F01B         	call	_abs	;wreg free
  3959  006B2A  C001  F015         	movff	?_abs,___awtoft@c
  3960  006B2E  C002  F016         	movff	?_abs+1,___awtoft@c+1
  3961  006B32  ECFB  F01B         	call	___awtoft	;wreg free
  3962  006B36  C015  F019         	movff	?___awtoft,___ftmul@f1
  3963  006B3A  C016  F01A         	movff	?___awtoft+1,___ftmul@f1+1
  3964  006B3E  C017  F01B         	movff	?___awtoft+2,___ftmul@f1+2
  3965  006B42  C21C  F01C         	movff	main@y_div,___ftmul@f2
  3966  006B46  C21D  F01D         	movff	main@y_div+1,___ftmul@f2+1
  3967  006B4A  C21E  F01E         	movff	main@y_div+2,___ftmul@f2+2
  3968  006B4E  EC58  F020         	call	___ftmul	;wreg free
  3969  006B52  C019  F200         	movff	?___ftmul,main@delta
  3970  006B56  C01A  F201         	movff	?___ftmul+1,main@delta+1
  3971  006B5A  C01B  F202         	movff	?___ftmul+2,main@delta+2
  3972                           
  3973                           ;main.c: 191: char buf[10];
  3974                           ;main.c: 192: if (delta >= 1)
  3975  006B5E  C200  F001         	movff	main@delta,___ftge@ff1
  3976  006B62  C201  F002         	movff	main@delta+1,___ftge@ff1+1
  3977  006B66  C202  F003         	movff	main@delta+2,___ftge@ff1+2
  3978  006B6A  0E00               	movlw	0
  3979  006B6C  6E04               	movwf	___ftge@ff2,c
  3980  006B6E  0E80               	movlw	128
  3981  006B70  6E05               	movwf	___ftge@ff2+1,c
  3982  006B72  0E3F               	movlw	63
  3983  006B74  6E06               	movwf	___ftge@ff2+2,c
  3984  006B76  EC7E  F01E         	call	___ftge	;wreg free
  3985  006B7A  A0D8               	btfss	status,0,c
  3986  006B7C  D011               	goto	l4993
  3987                           
  3988                           ;main.c: 193: {
  3989                           ;main.c: 194: sprintf(buf, "%.2fV", delta);
  3990  006B7E  0EC7               	movlw	low main@buf
  3991  006B80  6E4D               	movwf	sprintf@sp,c
  3992  006B82  0E00               	movlw	high main@buf
  3993  006B84  6E4E               	movwf	sprintf@sp+1,c
  3994  006B86  0EEF               	movlw	low STR_1
  3995  006B88  6E4F               	movwf	sprintf@f,c
  3996  006B8A  0E7F               	movlw	high STR_1
  3997  006B8C  6E50               	movwf	sprintf@f+1,c
  3998  006B8E  C200  F051         	movff	main@delta,?_sprintf+4
  3999  006B92  C201  F052         	movff	main@delta+1,?_sprintf+5
  4000  006B96  C202  F053         	movff	main@delta+2,?_sprintf+6
  4001  006B9A  EC58  F02C         	call	_sprintf	;wreg free
  4002                           
  4003                           ;main.c: 195: }
  4004  006B9E  D024               	goto	l4997
  4005  006BA0                     l4993:
  4006                           
  4007                           ;main.c: 196: else
  4008                           ;main.c: 197: {
  4009                           ;main.c: 198: sprintf(buf, "%.2fmV", delta*1000);
  4010  006BA0  C200  F019         	movff	main@delta,___ftmul@f1
  4011  006BA4  C201  F01A         	movff	main@delta+1,___ftmul@f1+1
  4012  006BA8  C202  F01B         	movff	main@delta+2,___ftmul@f1+2
  4013  006BAC  0E00               	movlw	0
  4014  006BAE  6E1C               	movwf	___ftmul@f2,c
  4015  006BB0  0E7A               	movlw	122
  4016  006BB2  6E1D               	movwf	___ftmul@f2+1,c
  4017  006BB4  0E44               	movlw	68
  4018  006BB6  6E1E               	movwf	___ftmul@f2+2,c
  4019  006BB8  EC58  F020         	call	___ftmul	;wreg free
  4020  006BBC  C019  F0F1         	movff	?___ftmul,_main$1211
  4021  006BC0  C01A  F0F2         	movff	?___ftmul+1,_main$1211+1
  4022  006BC4  C01B  F0F3         	movff	?___ftmul+2,_main$1211+2
  4023                           
  4024                           ;main.c: 196: else
  4025                           ;main.c: 197: {
  4026                           ;main.c: 198: sprintf(buf, "%.2fmV", delta*1000);
  4027  006BC8  0EC7               	movlw	low main@buf
  4028  006BCA  6E4D               	movwf	sprintf@sp,c
  4029  006BCC  0E00               	movlw	high main@buf
  4030  006BCE  6E4E               	movwf	sprintf@sp+1,c
  4031  006BD0  0EDA               	movlw	low STR_2
  4032  006BD2  6E4F               	movwf	sprintf@f,c
  4033  006BD4  0E7F               	movlw	high STR_2
  4034  006BD6  6E50               	movwf	sprintf@f+1,c
  4035  006BD8  C0F1  F051         	movff	_main$1211,?_sprintf+4
  4036  006BDC  C0F2  F052         	movff	_main$1211+1,?_sprintf+5
  4037  006BE0  C0F3  F053         	movff	_main$1211+2,?_sprintf+6
  4038  006BE4  EC58  F02C         	call	_sprintf	;wreg free
  4039  006BE8                     l4997:
  4040                           
  4041                           ;main.c: 199: }
  4042                           ;main.c: 200: LCDpage(1,0);
  4043  006BE8  0E00               	movlw	0
  4044  006BEA  6E05               	movwf	LCDpage@page,c
  4045  006BEC  0E01               	movlw	1
  4046  006BEE  EC9A  F01C         	call	_LCDpage
  4047                           
  4048                           ;main.c: 201: LCDstring(3,buf);
  4049  006BF2  0EC7               	movlw	low main@buf
  4050  006BF4  6E21               	movwf	LCDstring@buffer,c
  4051  006BF6  0E00               	movlw	high main@buf
  4052  006BF8  6E22               	movwf	LCDstring@buffer+1,c
  4053  006BFA  0E03               	movlw	3
  4054  006BFC  EC96  F029         	call	_LCDstring
  4055                           
  4056                           ;main.c: 207: }
  4057  006C00  D37F               	goto	l5147
  4058  006C02                     l4999:
  4059                           
  4060                           ;main.c: 209: else
  4061                           ;main.c: 210: {
  4062                           ;main.c: 213: if (cur1_y != 0 || cur2_y != 0)
  4063  006C02  0102               	movlb	2	; () banked
  4064  006C04  5130               	movf	main@cur1_y& (0+255),w,b
  4065  006C06  0102               	movlb	2	; () banked
  4066  006C08  1131               	iorwf	(main@cur1_y+1)& (0+255),w,b
  4067  006C0A  A4D8               	btfss	status,2,c
  4068  006C0C  D006               	goto	l5003
  4069                           
  4070                           ; BSR set to: 2
  4071  006C0E  0102               	movlb	2	; () banked
  4072  006C10  5132               	movf	main@cur2_y& (0+255),w,b
  4073  006C12  0102               	movlb	2	; () banked
  4074  006C14  1133               	iorwf	(main@cur2_y+1)& (0+255),w,b
  4075  006C16  B4D8               	btfsc	status,2,c
  4076  006C18  D0C6               	goto	l5035
  4077  006C1A                     l5003:
  4078                           
  4079                           ; BSR set to: 2
  4080                           ;main.c: 214: {
  4081                           ;main.c: 215: for (int a = 0; a < 128; a++)
  4082  006C1A  0E00               	movlw	0
  4083  006C1C  0102               	movlb	2	; () banked
  4084  006C1E  6F2B               	movwf	(main@a_359+1)& (0+255),b
  4085  006C20  0E00               	movlw	0
  4086  006C22  6F2A               	movwf	main@a_359& (0+255),b
  4087                           
  4088                           ; BSR set to: 2
  4089  006C24  0102               	movlb	2	; () banked
  4090  006C26  BF2B               	btfsc	(main@a_359+1)& (0+255),7,b
  4091  006C28  D00A               	goto	l5009
  4092  006C2A  0102               	movlb	2	; () banked
  4093  006C2C  512B               	movf	(main@a_359+1)& (0+255),w,b
  4094  006C2E  E106               	bnz	u5610
  4095  006C30  0E80               	movlw	128
  4096  006C32  0102               	movlb	2	; () banked
  4097  006C34  5D2A               	subwf	main@a_359& (0+255),w,b
  4098  006C36  B0D8               	btfsc	status,0,c
  4099  006C38  D0AB               	goto	l5031
  4100  006C3A  D001               	goto	l5009
  4101  006C3C                     u5610:
  4102                           
  4103                           ; BSR set to: 2
  4104  006C3C  D0A9               	goto	l5031
  4105  006C3E                     l5009:
  4106                           
  4107                           ; BSR set to: 2
  4108                           ;main.c: 216: {
  4109                           ;main.c: 218: int y = (int)(((((float)5/1024)*data[a])-2.50f)*val1*2);
  4110  006C3E  0E00               	movlw	0
  4111  006C40  6E35               	movwf	___ftadd@f2,c
  4112  006C42  0E20               	movlw	32
  4113  006C44  6E36               	movwf	___ftadd@f2+1,c
  4114  006C46  0EC0               	movlw	192
  4115  006C48  6E37               	movwf	___ftadd@f2+2,c
  4116  006C4A  0E00               	movlw	0
  4117  006C4C  6E1C               	movwf	___ftmul@f2,c
  4118  006C4E  0EA0               	movlw	160
  4119  006C50  6E1D               	movwf	___ftmul@f2+1,c
  4120  006C52  0E3B               	movlw	59
  4121  006C54  6E1E               	movwf	___ftmul@f2+2,c
  4122  006C56  90D8               	bcf	status,0,c
  4123  006C58  0102               	movlb	2	; () banked
  4124  006C5A  352A               	rlcf	main@a_359& (0+255),w,b
  4125  006C5C  6ED9               	movwf	fsr2l,c
  4126  006C5E  0102               	movlb	2	; () banked
  4127  006C60  352B               	rlcf	(main@a_359+1)& (0+255),w,b
  4128  006C62  6EDA               	movwf	fsr2h,c
  4129  006C64  0E00               	movlw	low main@data
  4130  006C66  26D9               	addwf	fsr2l,f,c
  4131  006C68  0E01               	movlw	high main@data
  4132  006C6A  22DA               	addwfc	fsr2h,f,c
  4133  006C6C  CFDE F009          	movff	postinc2,___lwtoft@c
  4134  006C70  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  4135  006C74  EC9B  F01B         	call	___lwtoft	;wreg free
  4136  006C78  C009  F019         	movff	?___lwtoft,___ftmul@f1
  4137  006C7C  C00A  F01A         	movff	?___lwtoft+1,___ftmul@f1+1
  4138  006C80  C00B  F01B         	movff	?___lwtoft+2,___ftmul@f1+2
  4139  006C84  EC58  F020         	call	___ftmul	;wreg free
  4140  006C88  C019  F032         	movff	?___ftmul,___ftadd@f1
  4141  006C8C  C01A  F033         	movff	?___ftmul+1,___ftadd@f1+1
  4142  006C90  C01B  F034         	movff	?___ftmul+2,___ftadd@f1+2
  4143  006C94  EC45  F023         	call	___ftadd	;wreg free
  4144  006C98  C032  F238         	movff	?___ftadd,_main$1209
  4145  006C9C  C033  F239         	movff	?___ftadd+1,_main$1209+1
  4146  006CA0  C034  F23A         	movff	?___ftadd+2,_main$1209+2
  4147                           
  4148                           ;main.c: 216: {
  4149                           ;main.c: 218: int y = (int)(((((float)5/1024)*data[a])-2.50f)*val1*2);
  4150  006CA4  C23E  F01C         	movff	main@val1,___ftmul@f2
  4151  006CA8  C23F  F01D         	movff	main@val1+1,___ftmul@f2+1
  4152  006CAC  C240  F01E         	movff	main@val1+2,___ftmul@f2+2
  4153  006CB0  C238  F019         	movff	_main$1209,___ftmul@f1
  4154  006CB4  C239  F01A         	movff	_main$1209+1,___ftmul@f1+1
  4155  006CB8  C23A  F01B         	movff	_main$1209+2,___ftmul@f1+2
  4156  006CBC  EC58  F020         	call	___ftmul	;wreg free
  4157  006CC0  C019  F23B         	movff	?___ftmul,_main$1210
  4158  006CC4  C01A  F23C         	movff	?___ftmul+1,_main$1210+1
  4159  006CC8  C01B  F23D         	movff	?___ftmul+2,_main$1210+2
  4160                           
  4161                           ;main.c: 216: {
  4162                           ;main.c: 218: int y = (int)(((((float)5/1024)*data[a])-2.50f)*val1*2);
  4163  006CCC  0E00               	movlw	0
  4164  006CCE  6E1C               	movwf	___ftmul@f2,c
  4165  006CD0  0E00               	movlw	0
  4166  006CD2  6E1D               	movwf	___ftmul@f2+1,c
  4167  006CD4  0E40               	movlw	64
  4168  006CD6  6E1E               	movwf	___ftmul@f2+2,c
  4169  006CD8  C23B  F019         	movff	_main$1210,___ftmul@f1
  4170  006CDC  C23C  F01A         	movff	_main$1210+1,___ftmul@f1+1
  4171  006CE0  C23D  F01B         	movff	_main$1210+2,___ftmul@f1+2
  4172  006CE4  EC58  F020         	call	___ftmul	;wreg free
  4173  006CE8  C019  F03E         	movff	?___ftmul,___fttol@f1
  4174  006CEC  C01A  F03F         	movff	?___ftmul+1,___fttol@f1+1
  4175  006CF0  C01B  F040         	movff	?___ftmul+2,___fttol@f1+2
  4176  006CF4  ECDE  F01F         	call	___fttol	;wreg free
  4177  006CF8  C03E  F0EC         	movff	?___fttol,main@y_360
  4178  006CFC  C03F  F0ED         	movff	?___fttol+1,main@y_360+1
  4179                           
  4180                           ;main.c: 219: if (y != cur1_y && a != 64)
  4181  006D00  0102               	movlb	2	; () banked
  4182  006D02  5130               	movf	main@cur1_y& (0+255),w,b
  4183  006D04  0100               	movlb	0	; () banked
  4184  006D06  19EC               	xorwf	main@y_360& (0+255),w,b
  4185  006D08  E106               	bnz	u5620
  4186  006D0A  0102               	movlb	2	; () banked
  4187  006D0C  5131               	movf	(main@cur1_y+1)& (0+255),w,b
  4188  006D0E  0100               	movlb	0	; () banked
  4189  006D10  19ED               	xorwf	(main@y_360+1)& (0+255),w,b
  4190  006D12  B4D8               	btfsc	status,2,c
  4191  006D14  D014               	goto	l5021
  4192  006D16                     u5620:
  4193                           
  4194                           ; BSR set to: 0
  4195  006D16  0E40               	movlw	64
  4196  006D18  0102               	movlb	2	; () banked
  4197  006D1A  192A               	xorwf	main@a_359& (0+255),w,b
  4198  006D1C  0102               	movlb	2	; () banked
  4199  006D1E  112B               	iorwf	(main@a_359+1)& (0+255),w,b
  4200  006D20  B4D8               	btfsc	status,2,c
  4201  006D22  D00D               	goto	l5021
  4202                           
  4203                           ; BSR set to: 2
  4204                           ;main.c: 220: {
  4205                           ;main.c: 221: lcdplotpixel2(a,32-cur1_y,1);
  4206  006D24  0102               	movlb	2	; () banked
  4207  006D26  5130               	movf	main@cur1_y& (0+255),w,b
  4208  006D28  0800               	sublw	0
  4209  006D2A  0F20               	addlw	32
  4210  006D2C  6E0F               	movwf	lcdplotpixel2@ry,c
  4211  006D2E  0E00               	movlw	0
  4212  006D30  6E11               	movwf	lcdplotpixel2@blank+1,c
  4213  006D32  0E01               	movlw	1
  4214  006D34  6E10               	movwf	lcdplotpixel2@blank,c
  4215  006D36  0102               	movlb	2	; () banked
  4216  006D38  512A               	movf	main@a_359& (0+255),w,b
  4217  006D3A  ECFF  F021         	call	_lcdplotpixel2
  4218  006D3E                     l5021:
  4219                           
  4220                           ;main.c: 222: }
  4221                           ;main.c: 223: if (y != cur2_y && a != 64)
  4222  006D3E  0102               	movlb	2	; () banked
  4223  006D40  5132               	movf	main@cur2_y& (0+255),w,b
  4224  006D42  0100               	movlb	0	; () banked
  4225  006D44  19EC               	xorwf	main@y_360& (0+255),w,b
  4226  006D46  E106               	bnz	u5640
  4227  006D48  0102               	movlb	2	; () banked
  4228  006D4A  5133               	movf	(main@cur2_y+1)& (0+255),w,b
  4229  006D4C  0100               	movlb	0	; () banked
  4230  006D4E  19ED               	xorwf	(main@y_360+1)& (0+255),w,b
  4231  006D50  B4D8               	btfsc	status,2,c
  4232  006D52  D014               	goto	l5027
  4233  006D54                     u5640:
  4234                           
  4235                           ; BSR set to: 0
  4236  006D54  0E40               	movlw	64
  4237  006D56  0102               	movlb	2	; () banked
  4238  006D58  192A               	xorwf	main@a_359& (0+255),w,b
  4239  006D5A  0102               	movlb	2	; () banked
  4240  006D5C  112B               	iorwf	(main@a_359+1)& (0+255),w,b
  4241  006D5E  B4D8               	btfsc	status,2,c
  4242  006D60  D00D               	goto	l5027
  4243                           
  4244                           ; BSR set to: 2
  4245                           ;main.c: 224: {
  4246                           ;main.c: 225: lcdplotpixel2(a,32-cur2_y,1);
  4247  006D62  0102               	movlb	2	; () banked
  4248  006D64  5132               	movf	main@cur2_y& (0+255),w,b
  4249  006D66  0800               	sublw	0
  4250  006D68  0F20               	addlw	32
  4251  006D6A  6E0F               	movwf	lcdplotpixel2@ry,c
  4252  006D6C  0E00               	movlw	0
  4253  006D6E  6E11               	movwf	lcdplotpixel2@blank+1,c
  4254  006D70  0E01               	movlw	1
  4255  006D72  6E10               	movwf	lcdplotpixel2@blank,c
  4256  006D74  0102               	movlb	2	; () banked
  4257  006D76  512A               	movf	main@a_359& (0+255),w,b
  4258  006D78  ECFF  F021         	call	_lcdplotpixel2
  4259  006D7C                     l5027:
  4260  006D7C  0102               	movlb	2	; () banked
  4261  006D7E  4B2A               	infsnz	main@a_359& (0+255),f,b
  4262  006D80  2B2B               	incf	(main@a_359+1)& (0+255),f,b
  4263                           
  4264                           ; BSR set to: 2
  4265  006D82  0102               	movlb	2	; () banked
  4266  006D84  BF2B               	btfsc	(main@a_359+1)& (0+255),7,b
  4267  006D86  D75B               	goto	l5009
  4268  006D88  0102               	movlb	2	; () banked
  4269  006D8A  512B               	movf	(main@a_359+1)& (0+255),w,b
  4270  006D8C  E101               	bnz	l5031
  4271  006D8E  D750               	goto	L3
  4272  006D90                     l5031:
  4273                           
  4274                           ; BSR set to: 2
  4275                           ;main.c: 226: }
  4276                           ;main.c: 227: }
  4277                           ;main.c: 228: cur1_y = cur2_y = 0;
  4278  006D90  0E00               	movlw	0
  4279  006D92  0102               	movlb	2	; () banked
  4280  006D94  6F33               	movwf	(main@cur2_y+1)& (0+255),b
  4281  006D96  0E00               	movlw	0
  4282  006D98  6F32               	movwf	main@cur2_y& (0+255),b
  4283  006D9A  C232  F230         	movff	main@cur2_y,main@cur1_y
  4284  006D9E  C233  F231         	movff	main@cur2_y+1,main@cur1_y+1
  4285                           
  4286                           ; BSR set to: 2
  4287                           ;main.c: 229: xyaxis();
  4288  006DA2  EC9F  F022         	call	_xyaxis	;wreg free
  4289  006DA6                     l5035:
  4290                           
  4291                           ;main.c: 230: }
  4292                           ;main.c: 231: int cur1_x_new = 0;
  4293  006DA6  0E00               	movlw	0
  4294  006DA8  0102               	movlb	2	; () banked
  4295  006DAA  6F13               	movwf	(main@cur1_x_new+1)& (0+255),b
  4296  006DAC  0E00               	movlw	0
  4297  006DAE  6F12               	movwf	main@cur1_x_new& (0+255),b
  4298                           
  4299                           ; BSR set to: 2
  4300                           ;main.c: 232: int cur2_x_new = 0;
  4301  006DB0  0E00               	movlw	0
  4302  006DB2  0102               	movlb	2	; () banked
  4303  006DB4  6F15               	movwf	(main@cur2_x_new+1)& (0+255),b
  4304  006DB6  0E00               	movlw	0
  4305  006DB8  6F14               	movwf	main@cur2_x_new& (0+255),b
  4306                           
  4307                           ; BSR set to: 2
  4308                           ;main.c: 235: ADCON0 = 0b00001101;
  4309  006DBA  0E0D               	movlw	13
  4310  006DBC  6EC2               	movwf	4034,c	;volatile
  4311                           
  4312                           ; BSR set to: 2
  4313                           ;main.c: 237: ADCON0bits.GO = 1;
  4314  006DBE  82C2               	bsf	4034,1,c	;volatile
  4315  006DC0                     l100:
  4316  006DC0  B2C2               	btfsc	4034,1,c	;volatile
  4317  006DC2  D7FE               	goto	l100
  4318                           
  4319                           ;main.c: 241: int s_val = ((unsigned int)(ADRESH << 8) | ADRESL);
  4320  006DC4  50C4               	movf	4036,w,c	;volatile
  4321  006DC6  6E5A               	movwf	??_main& (0+255),c
  4322  006DC8  50C3               	movf	4035,w,c	;volatile
  4323  006DCA  0100               	movlb	0	; () banked
  4324  006DCC  6FF6               	movwf	main@s_val_363& (0+255),b
  4325  006DCE  C05A  F0F7         	movff	??_main,main@s_val_363+1
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;main.c: 242: cur1_x_new = ((1024/2)-s_val)/8;
  4329  006DD2  C0F6  F05A         	movff	main@s_val_363,??_main
  4330  006DD6  C0F7  F05B         	movff	main@s_val_363+1,??_main+1
  4331  006DDA  1E5A               	comf	??_main,f,c
  4332  006DDC  1E5B               	comf	??_main+1,f,c
  4333  006DDE  4A5A               	infsnz	??_main,f,c
  4334  006DE0  2A5B               	incf	??_main+1,f,c
  4335  006DE2  0E00               	movlw	0
  4336  006DE4  245A               	addwf	??_main,w,c
  4337  006DE6  6E07               	movwf	___awdiv@dividend,c
  4338  006DE8  0E02               	movlw	2
  4339  006DEA  205B               	addwfc	??_main+1,w,c
  4340  006DEC  6E08               	movwf	___awdiv@dividend+1,c
  4341  006DEE  0E00               	movlw	0
  4342  006DF0  6E0A               	movwf	___awdiv@divisor+1,c
  4343  006DF2  0E08               	movlw	8
  4344  006DF4  6E09               	movwf	___awdiv@divisor,c
  4345  006DF6  ECF4  F01D         	call	___awdiv	;wreg free
  4346  006DFA  C007  F212         	movff	?___awdiv,main@cur1_x_new
  4347  006DFE  C008  F213         	movff	?___awdiv+1,main@cur1_x_new+1
  4348                           
  4349                           ;main.c: 244: if (cur1_x_new != cur1_x)
  4350  006E02  0102               	movlb	2	; () banked
  4351  006E04  5134               	movf	main@cur1_x& (0+255),w,b
  4352  006E06  0102               	movlb	2	; () banked
  4353  006E08  1912               	xorwf	main@cur1_x_new& (0+255),w,b
  4354  006E0A  E106               	bnz	u5680
  4355  006E0C  0102               	movlb	2	; () banked
  4356  006E0E  5135               	movf	(main@cur1_x+1)& (0+255),w,b
  4357  006E10  0102               	movlb	2	; () banked
  4358  006E12  1913               	xorwf	(main@cur1_x_new+1)& (0+255),w,b
  4359  006E14  B4D8               	btfsc	status,2,c
  4360  006E16  D0E7               	goto	l5087
  4361  006E18                     u5680:
  4362                           
  4363                           ; BSR set to: 2
  4364                           ;main.c: 245: {
  4365                           ;main.c: 248: int y = (int)(((((float)5/1024)*data[64-cur1_x])-2.50f)*val1*2);
  4366  006E18  0E00               	movlw	0
  4367  006E1A  6E35               	movwf	___ftadd@f2,c
  4368  006E1C  0E20               	movlw	32
  4369  006E1E  6E36               	movwf	___ftadd@f2+1,c
  4370  006E20  0EC0               	movlw	192
  4371  006E22  6E37               	movwf	___ftadd@f2+2,c
  4372  006E24  0E00               	movlw	0
  4373  006E26  6E1C               	movwf	___ftmul@f2,c
  4374  006E28  0EA0               	movlw	160
  4375  006E2A  6E1D               	movwf	___ftmul@f2+1,c
  4376  006E2C  0E3B               	movlw	59
  4377  006E2E  6E1E               	movwf	___ftmul@f2+2,c
  4378  006E30  C234  F05A         	movff	main@cur1_x,??_main
  4379  006E34  C235  F05B         	movff	main@cur1_x+1,??_main+1
  4380  006E38  1E5A               	comf	??_main,f,c
  4381  006E3A  1E5B               	comf	??_main+1,f,c
  4382  006E3C  4A5A               	infsnz	??_main,f,c
  4383  006E3E  2A5B               	incf	??_main+1,f,c
  4384  006E40  90D8               	bcf	status,0,c
  4385  006E42  365A               	rlcf	??_main,f,c
  4386  006E44  365B               	rlcf	??_main+1,f,c
  4387  006E46  0E80               	movlw	128
  4388  006E48  265A               	addwf	??_main,f,c
  4389  006E4A  0E00               	movlw	0
  4390  006E4C  225B               	addwfc	??_main+1,f,c
  4391  006E4E  0E00               	movlw	low main@data
  4392  006E50  245A               	addwf	??_main,w,c
  4393  006E52  6ED9               	movwf	fsr2l,c
  4394  006E54  0E01               	movlw	high main@data
  4395  006E56  205B               	addwfc	??_main+1,w,c
  4396  006E58  6EDA               	movwf	fsr2h,c
  4397  006E5A  CFDE F009          	movff	postinc2,___lwtoft@c
  4398  006E5E  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  4399  006E62  EC9B  F01B         	call	___lwtoft	;wreg free
  4400  006E66  C009  F019         	movff	?___lwtoft,___ftmul@f1
  4401  006E6A  C00A  F01A         	movff	?___lwtoft+1,___ftmul@f1+1
  4402  006E6E  C00B  F01B         	movff	?___lwtoft+2,___ftmul@f1+2
  4403  006E72  EC58  F020         	call	___ftmul	;wreg free
  4404  006E76  C019  F032         	movff	?___ftmul,___ftadd@f1
  4405  006E7A  C01A  F033         	movff	?___ftmul+1,___ftadd@f1+1
  4406  006E7E  C01B  F034         	movff	?___ftmul+2,___ftadd@f1+2
  4407  006E82  EC45  F023         	call	___ftadd	;wreg free
  4408  006E86  C032  F238         	movff	?___ftadd,_main$1209
  4409  006E8A  C033  F239         	movff	?___ftadd+1,_main$1209+1
  4410  006E8E  C034  F23A         	movff	?___ftadd+2,_main$1209+2
  4411                           
  4412                           ;main.c: 245: {
  4413                           ;main.c: 248: int y = (int)(((((float)5/1024)*data[64-cur1_x])-2.50f)*val1*2);
  4414  006E92  C23E  F01C         	movff	main@val1,___ftmul@f2
  4415  006E96  C23F  F01D         	movff	main@val1+1,___ftmul@f2+1
  4416  006E9A  C240  F01E         	movff	main@val1+2,___ftmul@f2+2
  4417  006E9E  C238  F019         	movff	_main$1209,___ftmul@f1
  4418  006EA2  C239  F01A         	movff	_main$1209+1,___ftmul@f1+1
  4419  006EA6  C23A  F01B         	movff	_main$1209+2,___ftmul@f1+2
  4420  006EAA  EC58  F020         	call	___ftmul	;wreg free
  4421  006EAE  C019  F23B         	movff	?___ftmul,_main$1210
  4422  006EB2  C01A  F23C         	movff	?___ftmul+1,_main$1210+1
  4423  006EB6  C01B  F23D         	movff	?___ftmul+2,_main$1210+2
  4424                           
  4425                           ;main.c: 245: {
  4426                           ;main.c: 248: int y = (int)(((((float)5/1024)*data[64-cur1_x])-2.50f)*val1*2);
  4427  006EBA  0E00               	movlw	0
  4428  006EBC  6E1C               	movwf	___ftmul@f2,c
  4429  006EBE  0E00               	movlw	0
  4430  006EC0  6E1D               	movwf	___ftmul@f2+1,c
  4431  006EC2  0E40               	movlw	64
  4432  006EC4  6E1E               	movwf	___ftmul@f2+2,c
  4433  006EC6  C23B  F019         	movff	_main$1210,___ftmul@f1
  4434  006ECA  C23C  F01A         	movff	_main$1210+1,___ftmul@f1+1
  4435  006ECE  C23D  F01B         	movff	_main$1210+2,___ftmul@f1+2
  4436  006ED2  EC58  F020         	call	___ftmul	;wreg free
  4437  006ED6  C019  F03E         	movff	?___ftmul,___fttol@f1
  4438  006EDA  C01A  F03F         	movff	?___ftmul+1,___fttol@f1+1
  4439  006EDE  C01B  F040         	movff	?___ftmul+2,___fttol@f1+2
  4440  006EE2  ECDE  F01F         	call	___fttol	;wreg free
  4441  006EE6  C03E  F0E1         	movff	?___fttol,main@y_364
  4442  006EEA  C03F  F0E2         	movff	?___fttol+1,main@y_364+1
  4443                           
  4444                           ;main.c: 249: for (int a = 8; a < 56; a++)
  4445  006EEE  0E00               	movlw	0
  4446  006EF0  0102               	movlb	2	; () banked
  4447  006EF2  6F27               	movwf	(main@a_365+1)& (0+255),b
  4448  006EF4  0E08               	movlw	8
  4449  006EF6  6F26               	movwf	main@a_365& (0+255),b
  4450                           
  4451                           ; BSR set to: 2
  4452  006EF8  0102               	movlb	2	; () banked
  4453  006EFA  BF27               	btfsc	(main@a_365+1)& (0+255),7,b
  4454  006EFC  D008               	goto	l5061
  4455  006EFE  0102               	movlb	2	; () banked
  4456  006F00  5127               	movf	(main@a_365+1)& (0+255),w,b
  4457  006F02  E14E               	bnz	l105
  4458  006F04  0E38               	movlw	56
  4459  006F06  0102               	movlb	2	; () banked
  4460  006F08  5D26               	subwf	main@a_365& (0+255),w,b
  4461  006F0A  B0D8               	btfsc	status,0,c
  4462  006F0C  D049               	goto	l105
  4463  006F0E                     l5061:
  4464                           
  4465                           ; BSR set to: 2
  4466                           ;main.c: 250: {
  4467                           ;main.c: 252: if (a != (32-y) && a != 32 && cur1_x != cur2_x )
  4468  006F0E  C0E1  F05A         	movff	main@y_364,??_main
  4469  006F12  C0E2  F05B         	movff	main@y_364+1,??_main+1
  4470  006F16  1E5A               	comf	??_main,f,c
  4471  006F18  1E5B               	comf	??_main+1,f,c
  4472  006F1A  4A5A               	infsnz	??_main,f,c
  4473  006F1C  2A5B               	incf	??_main+1,f,c
  4474  006F1E  0E20               	movlw	32
  4475  006F20  265A               	addwf	??_main,f,c
  4476  006F22  0E00               	movlw	0
  4477  006F24  225B               	addwfc	??_main+1,f,c
  4478  006F26  0102               	movlb	2	; () banked
  4479  006F28  5126               	movf	main@a_365& (0+255),w,b
  4480  006F2A  185A               	xorwf	??_main,w,c
  4481  006F2C  E105               	bnz	u5700
  4482  006F2E  0102               	movlb	2	; () banked
  4483  006F30  5127               	movf	(main@a_365+1)& (0+255),w,b
  4484  006F32  185B               	xorwf	??_main+1,w,c
  4485  006F34  B4D8               	btfsc	status,2,c
  4486  006F36  D01E               	goto	l106
  4487  006F38                     u5700:
  4488                           
  4489                           ; BSR set to: 2
  4490  006F38  0E20               	movlw	32
  4491  006F3A  0102               	movlb	2	; () banked
  4492  006F3C  1926               	xorwf	main@a_365& (0+255),w,b
  4493  006F3E  0102               	movlb	2	; () banked
  4494  006F40  1127               	iorwf	(main@a_365+1)& (0+255),w,b
  4495  006F42  B4D8               	btfsc	status,2,c
  4496  006F44  D017               	goto	l106
  4497                           
  4498                           ; BSR set to: 2
  4499  006F46  0102               	movlb	2	; () banked
  4500  006F48  5136               	movf	main@cur2_x& (0+255),w,b
  4501  006F4A  0102               	movlb	2	; () banked
  4502  006F4C  1934               	xorwf	main@cur1_x& (0+255),w,b
  4503  006F4E  E106               	bnz	u5720
  4504  006F50  0102               	movlb	2	; () banked
  4505  006F52  5137               	movf	(main@cur2_x+1)& (0+255),w,b
  4506  006F54  0102               	movlb	2	; () banked
  4507  006F56  1935               	xorwf	(main@cur1_x+1)& (0+255),w,b
  4508  006F58  B4D8               	btfsc	status,2,c
  4509  006F5A  D00C               	goto	l106
  4510  006F5C                     u5720:
  4511                           
  4512                           ; BSR set to: 2
  4513                           ;main.c: 253: {
  4514                           ;main.c: 254: lcdplotpixel2(64-cur1_x,a,1);
  4515  006F5C  C226  F00F         	movff	main@a_365,lcdplotpixel2@ry
  4516  006F60  0E00               	movlw	0
  4517  006F62  6E11               	movwf	lcdplotpixel2@blank+1,c
  4518  006F64  0E01               	movlw	1
  4519  006F66  6E10               	movwf	lcdplotpixel2@blank,c
  4520  006F68  0102               	movlb	2	; () banked
  4521  006F6A  5134               	movf	main@cur1_x& (0+255),w,b
  4522  006F6C  0800               	sublw	0
  4523  006F6E  0F40               	addlw	64
  4524  006F70  ECFF  F021         	call	_lcdplotpixel2
  4525  006F74                     l106:
  4526                           
  4527                           ;main.c: 255: }
  4528                           ;main.c: 257: lcdplotpixel2(64-cur1_x_new,a,0);
  4529  006F74  C226  F00F         	movff	main@a_365,lcdplotpixel2@ry
  4530  006F78  0E00               	movlw	0
  4531  006F7A  6E11               	movwf	lcdplotpixel2@blank+1,c
  4532  006F7C  0E00               	movlw	0
  4533  006F7E  6E10               	movwf	lcdplotpixel2@blank,c
  4534  006F80  0102               	movlb	2	; () banked
  4535  006F82  5112               	movf	main@cur1_x_new& (0+255),w,b
  4536  006F84  0800               	sublw	0
  4537  006F86  0F40               	addlw	64
  4538  006F88  ECFF  F021         	call	_lcdplotpixel2
  4539  006F8C  0102               	movlb	2	; () banked
  4540  006F8E  4B26               	infsnz	main@a_365& (0+255),f,b
  4541  006F90  2B27               	incf	(main@a_365+1)& (0+255),f,b
  4542                           
  4543                           ; BSR set to: 2
  4544  006F92  0102               	movlb	2	; () banked
  4545  006F94  BF27               	btfsc	(main@a_365+1)& (0+255),7,b
  4546  006F96  D7BB               	goto	l5061
  4547  006F98  0102               	movlb	2	; () banked
  4548  006F9A  5127               	movf	(main@a_365+1)& (0+255),w,b
  4549  006F9C  E101               	bnz	u5730
  4550  006F9E  D7B2               	goto	L4
  4551  006FA0                     u5730:
  4552  006FA0                     l105:
  4553                           
  4554                           ; BSR set to: 2
  4555                           ;main.c: 258: }
  4556                           ;main.c: 259: cur1_x = cur1_x_new;
  4557  006FA0  C212  F234         	movff	main@cur1_x_new,main@cur1_x
  4558  006FA4  C213  F235         	movff	main@cur1_x_new+1,main@cur1_x+1
  4559                           
  4560                           ; BSR set to: 2
  4561                           ;main.c: 261: for (int i = 70; i < 128; i++)
  4562  006FA8  0E00               	movlw	0
  4563  006FAA  0102               	movlb	2	; () banked
  4564  006FAC  6F17               	movwf	(main@i_366+1)& (0+255),b
  4565  006FAE  0E46               	movlw	70
  4566  006FB0  6F16               	movwf	main@i_366& (0+255),b
  4567  006FB2                     l5075:
  4568                           
  4569                           ; BSR set to: 2
  4570  006FB2  0102               	movlb	2	; () banked
  4571  006FB4  BF17               	btfsc	(main@i_366+1)& (0+255),7,b
  4572  006FB6  D008               	goto	l5079
  4573  006FB8  0102               	movlb	2	; () banked
  4574  006FBA  5117               	movf	(main@i_366+1)& (0+255),w,b
  4575  006FBC  E112               	bnz	l5085
  4576  006FBE  0E80               	movlw	128
  4577  006FC0  0102               	movlb	2	; () banked
  4578  006FC2  5D16               	subwf	main@i_366& (0+255),w,b
  4579  006FC4  B0D8               	btfsc	status,0,c
  4580  006FC6  D00D               	goto	l5085
  4581  006FC8                     l5079:
  4582                           
  4583                           ; BSR set to: 2
  4584                           ;main.c: 262: {
  4585                           ;main.c: 263: lcdplotpixel2(i,1,-1);
  4586  006FC8  0E01               	movlw	1
  4587  006FCA  6E0F               	movwf	lcdplotpixel2@ry,c
  4588  006FCC  0EFF               	movlw	255
  4589  006FCE  6E11               	movwf	lcdplotpixel2@blank+1,c
  4590  006FD0  6810               	setf	lcdplotpixel2@blank,c
  4591  006FD2  0102               	movlb	2	; () banked
  4592  006FD4  5116               	movf	main@i_366& (0+255),w,b
  4593  006FD6  ECFF  F021         	call	_lcdplotpixel2
  4594  006FDA  0102               	movlb	2	; () banked
  4595  006FDC  4B16               	infsnz	main@i_366& (0+255),f,b
  4596  006FDE  2B17               	incf	(main@i_366+1)& (0+255),f,b
  4597  006FE0  D7E8               	goto	l5075
  4598  006FE2                     l5085:
  4599                           
  4600                           ; BSR set to: 2
  4601                           ;main.c: 264: }
  4602                           ;main.c: 265: xyaxis();
  4603  006FE2  EC9F  F022         	call	_xyaxis	;wreg free
  4604  006FE6                     l5087:
  4605                           
  4606                           ;main.c: 266: }
  4607                           ;main.c: 269: ADCON0=0b00010001;
  4608  006FE6  0E11               	movlw	17
  4609  006FE8  6EC2               	movwf	4034,c	;volatile
  4610                           
  4611                           ;main.c: 271: ADCON0bits.GO=1;
  4612  006FEA  82C2               	bsf	4034,1,c	;volatile
  4613  006FEC                     l109:
  4614  006FEC  B2C2               	btfsc	4034,1,c	;volatile
  4615  006FEE  D7FE               	goto	l109
  4616                           
  4617                           ;main.c: 274: int s_val = ((unsigned int)(ADRESH << 8) | ADRESL);
  4618  006FF0  50C4               	movf	4036,w,c	;volatile
  4619  006FF2  6E5A               	movwf	??_main& (0+255),c
  4620  006FF4  50C3               	movf	4035,w,c	;volatile
  4621  006FF6  0100               	movlb	0	; () banked
  4622  006FF8  6FF6               	movwf	main@s_val_363& (0+255),b
  4623  006FFA  C05A  F0F7         	movff	??_main,main@s_val_363+1
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;main.c: 275: cur2_x_new = ((1024/2)-s_val)/8;
  4627  006FFE  C0F6  F05A         	movff	main@s_val_363,??_main
  4628  007002  C0F7  F05B         	movff	main@s_val_363+1,??_main+1
  4629  007006  1E5A               	comf	??_main,f,c
  4630  007008  1E5B               	comf	??_main+1,f,c
  4631  00700A  4A5A               	infsnz	??_main,f,c
  4632  00700C  2A5B               	incf	??_main+1,f,c
  4633  00700E  0E00               	movlw	0
  4634  007010  245A               	addwf	??_main,w,c
  4635  007012  6E07               	movwf	___awdiv@dividend,c
  4636  007014  0E02               	movlw	2
  4637  007016  205B               	addwfc	??_main+1,w,c
  4638  007018  6E08               	movwf	___awdiv@dividend+1,c
  4639  00701A  0E00               	movlw	0
  4640  00701C  6E0A               	movwf	___awdiv@divisor+1,c
  4641  00701E  0E08               	movlw	8
  4642  007020  6E09               	movwf	___awdiv@divisor,c
  4643  007022  ECF4  F01D         	call	___awdiv	;wreg free
  4644  007026  C007  F214         	movff	?___awdiv,main@cur2_x_new
  4645  00702A  C008  F215         	movff	?___awdiv+1,main@cur2_x_new+1
  4646                           
  4647                           ;main.c: 277: if (cur2_x_new != cur2_x)
  4648  00702E  0102               	movlb	2	; () banked
  4649  007030  5136               	movf	main@cur2_x& (0+255),w,b
  4650  007032  0102               	movlb	2	; () banked
  4651  007034  1914               	xorwf	main@cur2_x_new& (0+255),w,b
  4652  007036  E106               	bnz	u5770
  4653  007038  0102               	movlb	2	; () banked
  4654  00703A  5137               	movf	(main@cur2_x+1)& (0+255),w,b
  4655  00703C  0102               	movlb	2	; () banked
  4656  00703E  1915               	xorwf	(main@cur2_x_new+1)& (0+255),w,b
  4657  007040  B4D8               	btfsc	status,2,c
  4658  007042  D0E7               	goto	l5135
  4659  007044                     u5770:
  4660                           
  4661                           ; BSR set to: 2
  4662                           ;main.c: 278: {
  4663                           ;main.c: 280: int y = (int)(((((float)5/1024)*data[64-cur2_x])-2.50f)*val1*2);
  4664  007044  0E00               	movlw	0
  4665  007046  6E35               	movwf	___ftadd@f2,c
  4666  007048  0E20               	movlw	32
  4667  00704A  6E36               	movwf	___ftadd@f2+1,c
  4668  00704C  0EC0               	movlw	192
  4669  00704E  6E37               	movwf	___ftadd@f2+2,c
  4670  007050  0E00               	movlw	0
  4671  007052  6E1C               	movwf	___ftmul@f2,c
  4672  007054  0EA0               	movlw	160
  4673  007056  6E1D               	movwf	___ftmul@f2+1,c
  4674  007058  0E3B               	movlw	59
  4675  00705A  6E1E               	movwf	___ftmul@f2+2,c
  4676  00705C  C236  F05A         	movff	main@cur2_x,??_main
  4677  007060  C237  F05B         	movff	main@cur2_x+1,??_main+1
  4678  007064  1E5A               	comf	??_main,f,c
  4679  007066  1E5B               	comf	??_main+1,f,c
  4680  007068  4A5A               	infsnz	??_main,f,c
  4681  00706A  2A5B               	incf	??_main+1,f,c
  4682  00706C  90D8               	bcf	status,0,c
  4683  00706E  365A               	rlcf	??_main,f,c
  4684  007070  365B               	rlcf	??_main+1,f,c
  4685  007072  0E80               	movlw	128
  4686  007074  265A               	addwf	??_main,f,c
  4687  007076  0E00               	movlw	0
  4688  007078  225B               	addwfc	??_main+1,f,c
  4689  00707A  0E00               	movlw	low main@data
  4690  00707C  245A               	addwf	??_main,w,c
  4691  00707E  6ED9               	movwf	fsr2l,c
  4692  007080  0E01               	movlw	high main@data
  4693  007082  205B               	addwfc	??_main+1,w,c
  4694  007084  6EDA               	movwf	fsr2h,c
  4695  007086  CFDE F009          	movff	postinc2,___lwtoft@c
  4696  00708A  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  4697  00708E  EC9B  F01B         	call	___lwtoft	;wreg free
  4698  007092  C009  F019         	movff	?___lwtoft,___ftmul@f1
  4699  007096  C00A  F01A         	movff	?___lwtoft+1,___ftmul@f1+1
  4700  00709A  C00B  F01B         	movff	?___lwtoft+2,___ftmul@f1+2
  4701  00709E  EC58  F020         	call	___ftmul	;wreg free
  4702  0070A2  C019  F032         	movff	?___ftmul,___ftadd@f1
  4703  0070A6  C01A  F033         	movff	?___ftmul+1,___ftadd@f1+1
  4704  0070AA  C01B  F034         	movff	?___ftmul+2,___ftadd@f1+2
  4705  0070AE  EC45  F023         	call	___ftadd	;wreg free
  4706  0070B2  C032  F238         	movff	?___ftadd,_main$1209
  4707  0070B6  C033  F239         	movff	?___ftadd+1,_main$1209+1
  4708  0070BA  C034  F23A         	movff	?___ftadd+2,_main$1209+2
  4709                           
  4710                           ;main.c: 278: {
  4711                           ;main.c: 280: int y = (int)(((((float)5/1024)*data[64-cur2_x])-2.50f)*val1*2);
  4712  0070BE  C23E  F01C         	movff	main@val1,___ftmul@f2
  4713  0070C2  C23F  F01D         	movff	main@val1+1,___ftmul@f2+1
  4714  0070C6  C240  F01E         	movff	main@val1+2,___ftmul@f2+2
  4715  0070CA  C238  F019         	movff	_main$1209,___ftmul@f1
  4716  0070CE  C239  F01A         	movff	_main$1209+1,___ftmul@f1+1
  4717  0070D2  C23A  F01B         	movff	_main$1209+2,___ftmul@f1+2
  4718  0070D6  EC58  F020         	call	___ftmul	;wreg free
  4719  0070DA  C019  F23B         	movff	?___ftmul,_main$1210
  4720  0070DE  C01A  F23C         	movff	?___ftmul+1,_main$1210+1
  4721  0070E2  C01B  F23D         	movff	?___ftmul+2,_main$1210+2
  4722                           
  4723                           ;main.c: 278: {
  4724                           ;main.c: 280: int y = (int)(((((float)5/1024)*data[64-cur2_x])-2.50f)*val1*2);
  4725  0070E6  0E00               	movlw	0
  4726  0070E8  6E1C               	movwf	___ftmul@f2,c
  4727  0070EA  0E00               	movlw	0
  4728  0070EC  6E1D               	movwf	___ftmul@f2+1,c
  4729  0070EE  0E40               	movlw	64
  4730  0070F0  6E1E               	movwf	___ftmul@f2+2,c
  4731  0070F2  C23B  F019         	movff	_main$1210,___ftmul@f1
  4732  0070F6  C23C  F01A         	movff	_main$1210+1,___ftmul@f1+1
  4733  0070FA  C23D  F01B         	movff	_main$1210+2,___ftmul@f1+2
  4734  0070FE  EC58  F020         	call	___ftmul	;wreg free
  4735  007102  C019  F03E         	movff	?___ftmul,___fttol@f1
  4736  007106  C01A  F03F         	movff	?___ftmul+1,___fttol@f1+1
  4737  00710A  C01B  F040         	movff	?___ftmul+2,___fttol@f1+2
  4738  00710E  ECDE  F01F         	call	___fttol	;wreg free
  4739  007112  C03E  F0E3         	movff	?___fttol,main@y_367
  4740  007116  C03F  F0E4         	movff	?___fttol+1,main@y_367+1
  4741                           
  4742                           ;main.c: 281: for (int a = 8; a < 56; a++)
  4743  00711A  0E00               	movlw	0
  4744  00711C  0102               	movlb	2	; () banked
  4745  00711E  6F29               	movwf	(main@a_368+1)& (0+255),b
  4746  007120  0E08               	movlw	8
  4747  007122  6F28               	movwf	main@a_368& (0+255),b
  4748                           
  4749                           ; BSR set to: 2
  4750  007124  0102               	movlb	2	; () banked
  4751  007126  BF29               	btfsc	(main@a_368+1)& (0+255),7,b
  4752  007128  D008               	goto	l5109
  4753  00712A  0102               	movlb	2	; () banked
  4754  00712C  5129               	movf	(main@a_368+1)& (0+255),w,b
  4755  00712E  E14E               	bnz	l114
  4756  007130  0E38               	movlw	56
  4757  007132  0102               	movlb	2	; () banked
  4758  007134  5D28               	subwf	main@a_368& (0+255),w,b
  4759  007136  B0D8               	btfsc	status,0,c
  4760  007138  D049               	goto	l114
  4761  00713A                     l5109:
  4762                           
  4763                           ; BSR set to: 2
  4764                           ;main.c: 282: {
  4765                           ;main.c: 284: if (a != (32-y) && a != 32 && cur2_x != cur1_x )
  4766  00713A  C0E3  F05A         	movff	main@y_367,??_main
  4767  00713E  C0E4  F05B         	movff	main@y_367+1,??_main+1
  4768  007142  1E5A               	comf	??_main,f,c
  4769  007144  1E5B               	comf	??_main+1,f,c
  4770  007146  4A5A               	infsnz	??_main,f,c
  4771  007148  2A5B               	incf	??_main+1,f,c
  4772  00714A  0E20               	movlw	32
  4773  00714C  265A               	addwf	??_main,f,c
  4774  00714E  0E00               	movlw	0
  4775  007150  225B               	addwfc	??_main+1,f,c
  4776  007152  0102               	movlb	2	; () banked
  4777  007154  5128               	movf	main@a_368& (0+255),w,b
  4778  007156  185A               	xorwf	??_main,w,c
  4779  007158  E105               	bnz	u5790
  4780  00715A  0102               	movlb	2	; () banked
  4781  00715C  5129               	movf	(main@a_368+1)& (0+255),w,b
  4782  00715E  185B               	xorwf	??_main+1,w,c
  4783  007160  B4D8               	btfsc	status,2,c
  4784  007162  D01E               	goto	l115
  4785  007164                     u5790:
  4786                           
  4787                           ; BSR set to: 2
  4788  007164  0E20               	movlw	32
  4789  007166  0102               	movlb	2	; () banked
  4790  007168  1928               	xorwf	main@a_368& (0+255),w,b
  4791  00716A  0102               	movlb	2	; () banked
  4792  00716C  1129               	iorwf	(main@a_368+1)& (0+255),w,b
  4793  00716E  B4D8               	btfsc	status,2,c
  4794  007170  D017               	goto	l115
  4795                           
  4796                           ; BSR set to: 2
  4797  007172  0102               	movlb	2	; () banked
  4798  007174  5134               	movf	main@cur1_x& (0+255),w,b
  4799  007176  0102               	movlb	2	; () banked
  4800  007178  1936               	xorwf	main@cur2_x& (0+255),w,b
  4801  00717A  E106               	bnz	u5810
  4802  00717C  0102               	movlb	2	; () banked
  4803  00717E  5135               	movf	(main@cur1_x+1)& (0+255),w,b
  4804  007180  0102               	movlb	2	; () banked
  4805  007182  1937               	xorwf	(main@cur2_x+1)& (0+255),w,b
  4806  007184  B4D8               	btfsc	status,2,c
  4807  007186  D00C               	goto	l115
  4808  007188                     u5810:
  4809                           
  4810                           ; BSR set to: 2
  4811                           ;main.c: 285: {
  4812                           ;main.c: 286: lcdplotpixel2(64-cur2_x,a,1);
  4813  007188  C228  F00F         	movff	main@a_368,lcdplotpixel2@ry
  4814  00718C  0E00               	movlw	0
  4815  00718E  6E11               	movwf	lcdplotpixel2@blank+1,c
  4816  007190  0E01               	movlw	1
  4817  007192  6E10               	movwf	lcdplotpixel2@blank,c
  4818  007194  0102               	movlb	2	; () banked
  4819  007196  5136               	movf	main@cur2_x& (0+255),w,b
  4820  007198  0800               	sublw	0
  4821  00719A  0F40               	addlw	64
  4822  00719C  ECFF  F021         	call	_lcdplotpixel2
  4823  0071A0                     l115:
  4824                           
  4825                           ;main.c: 287: }
  4826                           ;main.c: 289: lcdplotpixel2(64-cur2_x_new,a,0);
  4827  0071A0  C228  F00F         	movff	main@a_368,lcdplotpixel2@ry
  4828  0071A4  0E00               	movlw	0
  4829  0071A6  6E11               	movwf	lcdplotpixel2@blank+1,c
  4830  0071A8  0E00               	movlw	0
  4831  0071AA  6E10               	movwf	lcdplotpixel2@blank,c
  4832  0071AC  0102               	movlb	2	; () banked
  4833  0071AE  5114               	movf	main@cur2_x_new& (0+255),w,b
  4834  0071B0  0800               	sublw	0
  4835  0071B2  0F40               	addlw	64
  4836  0071B4  ECFF  F021         	call	_lcdplotpixel2
  4837  0071B8  0102               	movlb	2	; () banked
  4838  0071BA  4B28               	infsnz	main@a_368& (0+255),f,b
  4839  0071BC  2B29               	incf	(main@a_368+1)& (0+255),f,b
  4840                           
  4841                           ; BSR set to: 2
  4842  0071BE  0102               	movlb	2	; () banked
  4843  0071C0  BF29               	btfsc	(main@a_368+1)& (0+255),7,b
  4844  0071C2  D7BB               	goto	l5109
  4845  0071C4  0102               	movlb	2	; () banked
  4846  0071C6  5129               	movf	(main@a_368+1)& (0+255),w,b
  4847  0071C8  E101               	bnz	u5820
  4848  0071CA  D7B2               	goto	L5
  4849  0071CC                     u5820:
  4850  0071CC                     l114:
  4851                           
  4852                           ; BSR set to: 2
  4853                           ;main.c: 290: }
  4854                           ;main.c: 291: cur2_x = cur2_x_new;
  4855  0071CC  C214  F236         	movff	main@cur2_x_new,main@cur2_x
  4856  0071D0  C215  F237         	movff	main@cur2_x_new+1,main@cur2_x+1
  4857                           
  4858                           ; BSR set to: 2
  4859                           ;main.c: 293: for (int i = 70; i < 128; i++)
  4860  0071D4  0E00               	movlw	0
  4861  0071D6  0102               	movlb	2	; () banked
  4862  0071D8  6F19               	movwf	(main@i_369+1)& (0+255),b
  4863  0071DA  0E46               	movlw	70
  4864  0071DC  6F18               	movwf	main@i_369& (0+255),b
  4865  0071DE                     l5123:
  4866                           
  4867                           ; BSR set to: 2
  4868  0071DE  0102               	movlb	2	; () banked
  4869  0071E0  BF19               	btfsc	(main@i_369+1)& (0+255),7,b
  4870  0071E2  D008               	goto	l5127
  4871  0071E4  0102               	movlb	2	; () banked
  4872  0071E6  5119               	movf	(main@i_369+1)& (0+255),w,b
  4873  0071E8  E112               	bnz	l5133
  4874  0071EA  0E80               	movlw	128
  4875  0071EC  0102               	movlb	2	; () banked
  4876  0071EE  5D18               	subwf	main@i_369& (0+255),w,b
  4877  0071F0  B0D8               	btfsc	status,0,c
  4878  0071F2  D00D               	goto	l5133
  4879  0071F4                     l5127:
  4880                           
  4881                           ; BSR set to: 2
  4882                           ;main.c: 294: {
  4883                           ;main.c: 295: lcdplotpixel2(i,0,-1);
  4884  0071F4  0E00               	movlw	0
  4885  0071F6  6E0F               	movwf	lcdplotpixel2@ry,c
  4886  0071F8  0EFF               	movlw	255
  4887  0071FA  6E11               	movwf	lcdplotpixel2@blank+1,c
  4888  0071FC  6810               	setf	lcdplotpixel2@blank,c
  4889  0071FE  0102               	movlb	2	; () banked
  4890  007200  5118               	movf	main@i_369& (0+255),w,b
  4891  007202  ECFF  F021         	call	_lcdplotpixel2
  4892  007206  0102               	movlb	2	; () banked
  4893  007208  4B18               	infsnz	main@i_369& (0+255),f,b
  4894  00720A  2B19               	incf	(main@i_369+1)& (0+255),f,b
  4895  00720C  D7E8               	goto	l5123
  4896  00720E                     l5133:
  4897                           
  4898                           ; BSR set to: 2
  4899                           ;main.c: 296: }
  4900                           ;main.c: 297: xyaxis();
  4901  00720E  EC9F  F022         	call	_xyaxis	;wreg free
  4902  007212                     l5135:
  4903                           
  4904                           ;main.c: 298: }
  4905                           ;main.c: 300: float delta = abs(cur1_x-cur2_x) * div;
  4906  007212  C236  F05A         	movff	main@cur2_x,??_main
  4907  007216  C237  F05B         	movff	main@cur2_x+1,??_main+1
  4908  00721A  1E5A               	comf	??_main,f,c
  4909  00721C  1E5B               	comf	??_main+1,f,c
  4910  00721E  4A5A               	infsnz	??_main,f,c
  4911  007220  2A5B               	incf	??_main+1,f,c
  4912  007222  0102               	movlb	2	; () banked
  4913  007224  5134               	movf	main@cur1_x& (0+255),w,b
  4914  007226  245A               	addwf	??_main,w,c
  4915  007228  6E01               	movwf	abs@a,c
  4916  00722A  0102               	movlb	2	; () banked
  4917  00722C  5135               	movf	(main@cur1_x+1)& (0+255),w,b
  4918  00722E  205B               	addwfc	??_main+1,w,c
  4919  007230  6E02               	movwf	abs@a+1,c
  4920  007232  ECD2  F01B         	call	_abs	;wreg free
  4921  007236  C001  F015         	movff	?_abs,___awtoft@c
  4922  00723A  C002  F016         	movff	?_abs+1,___awtoft@c+1
  4923  00723E  ECFB  F01B         	call	___awtoft	;wreg free
  4924  007242  C015  F019         	movff	?___awtoft,___ftmul@f1
  4925  007246  C016  F01A         	movff	?___awtoft+1,___ftmul@f1+1
  4926  00724A  C017  F01B         	movff	?___awtoft+2,___ftmul@f1+2
  4927  00724E  C21F  F01C         	movff	main@div,___ftmul@f2
  4928  007252  C220  F01D         	movff	main@div+1,___ftmul@f2+1
  4929  007256  C221  F01E         	movff	main@div+2,___ftmul@f2+2
  4930  00725A  EC58  F020         	call	___ftmul	;wreg free
  4931  00725E  C019  F203         	movff	?___ftmul,main@delta_370
  4932  007262  C01A  F204         	movff	?___ftmul+1,main@delta_370+1
  4933  007266  C01B  F205         	movff	?___ftmul+2,main@delta_370+2
  4934                           
  4935                           ;main.c: 301: char buf[10];
  4936                           ;main.c: 302: if (delta >= 1000)
  4937  00726A  C203  F001         	movff	main@delta_370,___ftge@ff1
  4938  00726E  C204  F002         	movff	main@delta_370+1,___ftge@ff1+1
  4939  007272  C205  F003         	movff	main@delta_370+2,___ftge@ff1+2
  4940  007276  0E00               	movlw	0
  4941  007278  6E04               	movwf	___ftge@ff2,c
  4942  00727A  0E7A               	movlw	122
  4943  00727C  6E05               	movwf	___ftge@ff2+1,c
  4944  00727E  0E44               	movlw	68
  4945  007280  6E06               	movwf	___ftge@ff2+2,c
  4946  007282  EC7E  F01E         	call	___ftge	;wreg free
  4947  007286  A0D8               	btfss	status,0,c
  4948  007288  D01F               	goto	l5141
  4949                           
  4950                           ;main.c: 303: {
  4951                           ;main.c: 304: sprintf(buf, "%.2fms", delta/1000);
  4952  00728A  0ED1               	movlw	low main@buf_371
  4953  00728C  6E4D               	movwf	sprintf@sp,c
  4954  00728E  0E00               	movlw	high main@buf_371
  4955  007290  6E4E               	movwf	sprintf@sp+1,c
  4956  007292  0EE1               	movlw	low STR_3
  4957  007294  6E4F               	movwf	sprintf@f,c
  4958  007296  0E7F               	movlw	high STR_3
  4959  007298  6E50               	movwf	sprintf@f+1,c
  4960  00729A  C203  F019         	movff	main@delta_370,___ftdiv@f1
  4961  00729E  C204  F01A         	movff	main@delta_370+1,___ftdiv@f1+1
  4962  0072A2  C205  F01B         	movff	main@delta_370+2,___ftdiv@f1+2
  4963  0072A6  0E00               	movlw	0
  4964  0072A8  6E1C               	movwf	___ftdiv@f2,c
  4965  0072AA  0E7A               	movlw	122
  4966  0072AC  6E1D               	movwf	___ftdiv@f2+1,c
  4967  0072AE  0E44               	movlw	68
  4968  0072B0  6E1E               	movwf	___ftdiv@f2+2,c
  4969  0072B2  EC6B  F01F         	call	___ftdiv	;wreg free
  4970  0072B6  C019  F051         	movff	?___ftdiv,?_sprintf+4
  4971  0072BA  C01A  F052         	movff	?___ftdiv+1,?_sprintf+5
  4972  0072BE  C01B  F053         	movff	?___ftdiv+2,?_sprintf+6
  4973  0072C2  EC58  F02C         	call	_sprintf	;wreg free
  4974                           
  4975                           ;main.c: 305: }
  4976  0072C6  D010               	goto	l5143
  4977  0072C8                     l5141:
  4978                           
  4979                           ;main.c: 306: else
  4980                           ;main.c: 307: {
  4981                           ;main.c: 308: sprintf(buf, "%.2fus", delta);
  4982  0072C8  0ED1               	movlw	low main@buf_371
  4983  0072CA  6E4D               	movwf	sprintf@sp,c
  4984  0072CC  0E00               	movlw	high main@buf_371
  4985  0072CE  6E4E               	movwf	sprintf@sp+1,c
  4986  0072D0  0EE8               	movlw	low STR_4
  4987  0072D2  6E4F               	movwf	sprintf@f,c
  4988  0072D4  0E7F               	movlw	high STR_4
  4989  0072D6  6E50               	movwf	sprintf@f+1,c
  4990  0072D8  C203  F051         	movff	main@delta_370,?_sprintf+4
  4991  0072DC  C204  F052         	movff	main@delta_370+1,?_sprintf+5
  4992  0072E0  C205  F053         	movff	main@delta_370+2,?_sprintf+6
  4993  0072E4  EC58  F02C         	call	_sprintf	;wreg free
  4994  0072E8                     l5143:
  4995                           
  4996                           ;main.c: 309: }
  4997                           ;main.c: 310: LCDpage(1,0);
  4998  0072E8  0E00               	movlw	0
  4999  0072EA  6E05               	movwf	LCDpage@page,c
  5000  0072EC  0E01               	movlw	1
  5001  0072EE  EC9A  F01C         	call	_LCDpage
  5002                           
  5003                           ;main.c: 311: LCDstring(3,buf);
  5004  0072F2  0ED1               	movlw	low main@buf_371
  5005  0072F4  6E21               	movwf	LCDstring@buffer,c
  5006  0072F6  0E00               	movlw	high main@buf_371
  5007  0072F8  6E22               	movwf	LCDstring@buffer+1,c
  5008  0072FA  0E03               	movlw	3
  5009  0072FC  EC96  F029         	call	_LCDstring
  5010  007300                     l5147:
  5011                           
  5012                           ;main.c: 312: }
  5013                           ;main.c: 314: if (PORTBbits.RB0 == 1)
  5014  007300  A081               	btfss	3969,0,c	;volatile
  5015  007302  D005               	goto	l5151
  5016                           
  5017                           ;main.c: 315: {
  5018                           ;main.c: 316: freeze = 0;
  5019  007304  0E00               	movlw	0
  5020  007306  0100               	movlb	0	; () banked
  5021  007308  6FE6               	movwf	(main@freeze+1)& (0+255),b
  5022  00730A  0E00               	movlw	0
  5023  00730C  6FE5               	movwf	main@freeze& (0+255),b
  5024  00730E                     l5151:
  5025  00730E  0100               	movlb	0	; () banked
  5026  007310  51E5               	movf	main@freeze& (0+255),w,b
  5027  007312  0100               	movlb	0	; () banked
  5028  007314  11E6               	iorwf	(main@freeze+1)& (0+255),w,b
  5029  007316  A4D8               	btfss	status,2,c
  5030  007318  EF1E  F032         	goto	l63
  5031  00731C                     l5153:
  5032                           
  5033                           ;main.c: 317: }
  5034                           ;main.c: 318: }
  5035                           ;main.c: 319: }
  5036                           ;main.c: 321: ADCON0=0x01;
  5037  00731C  0E01               	movlw	1
  5038  00731E  6EC2               	movwf	4034,c	;volatile
  5039                           
  5040                           ;main.c: 323: ADCON0bits.GO=1;
  5041  007320  82C2               	bsf	4034,1,c	;volatile
  5042  007322                     l122:
  5043  007322  B2C2               	btfsc	4034,1,c	;volatile
  5044  007324  D7FE               	goto	l122
  5045                           
  5046                           ;main.c: 327: val1 = ((float)5/1024)*((unsigned int)(ADRESH << 8) | ADRESL);
  5047  007326  50C4               	movf	4036,w,c	;volatile
  5048  007328  6E5A               	movwf	??_main& (0+255),c
  5049  00732A  50C3               	movf	4035,w,c	;volatile
  5050  00732C  6E09               	movwf	___lwtoft@c,c
  5051  00732E  C05A  F00A         	movff	??_main,___lwtoft@c+1
  5052  007332  EC9B  F01B         	call	___lwtoft	;wreg free
  5053  007336  C009  F019         	movff	?___lwtoft,___ftmul@f1
  5054  00733A  C00A  F01A         	movff	?___lwtoft+1,___ftmul@f1+1
  5055  00733E  C00B  F01B         	movff	?___lwtoft+2,___ftmul@f1+2
  5056  007342  0E00               	movlw	0
  5057  007344  6E1C               	movwf	___ftmul@f2,c
  5058  007346  0EA0               	movlw	160
  5059  007348  6E1D               	movwf	___ftmul@f2+1,c
  5060  00734A  0E3B               	movlw	59
  5061  00734C  6E1E               	movwf	___ftmul@f2+2,c
  5062  00734E  EC58  F020         	call	___ftmul	;wreg free
  5063  007352  C019  F23E         	movff	?___ftmul,main@val1
  5064  007356  C01A  F23F         	movff	?___ftmul+1,main@val1+1
  5065  00735A  C01B  F240         	movff	?___ftmul+2,main@val1+2
  5066                           
  5067                           ;main.c: 329: char str[15];
  5068                           ;main.c: 330: sprintf(str, "%5.2f", val1);
  5069  00735E  0EA1               	movlw	low main@str
  5070  007360  6E4D               	movwf	sprintf@sp,c
  5071  007362  0E00               	movlw	high main@str
  5072  007364  6E4E               	movwf	sprintf@sp+1,c
  5073  007366  0EF5               	movlw	low STR_5
  5074  007368  6E4F               	movwf	sprintf@f,c
  5075  00736A  0E7F               	movlw	high STR_5
  5076  00736C  6E50               	movwf	sprintf@f+1,c
  5077  00736E  C23E  F051         	movff	main@val1,?_sprintf+4
  5078  007372  C23F  F052         	movff	main@val1+1,?_sprintf+5
  5079  007376  C240  F053         	movff	main@val1+2,?_sprintf+6
  5080  00737A  EC58  F02C         	call	_sprintf	;wreg free
  5081                           
  5082                           ;main.c: 333: ADCON0 = 0b00000101;
  5083  00737E  0E05               	movlw	5
  5084  007380  6EC2               	movwf	4034,c	;volatile
  5085                           
  5086                           ;main.c: 335: ADCON0bits.GO=1;
  5087  007382  82C2               	bsf	4034,1,c	;volatile
  5088  007384                     l125:
  5089  007384  B2C2               	btfsc	4034,1,c	;volatile
  5090  007386  D7FE               	goto	l125
  5091                           
  5092                           ;main.c: 339: int tmp = ((unsigned int)(ADRESH << 8) | ADRESL);
  5093  007388  50C4               	movf	4036,w,c	;volatile
  5094  00738A  6E5A               	movwf	??_main& (0+255),c
  5095  00738C  50C3               	movf	4035,w,c	;volatile
  5096  00738E  0102               	movlb	2	; () banked
  5097  007390  6F06               	movwf	main@tmp& (0+255),b
  5098  007392  C05A  F207         	movff	??_main,main@tmp+1
  5099                           
  5100                           ; BSR set to: 2
  5101                           ;main.c: 340: val2 = ((float)5/1024)*tmp;
  5102  007396  C206  F015         	movff	main@tmp,___awtoft@c
  5103  00739A  C207  F016         	movff	main@tmp+1,___awtoft@c+1
  5104  00739E  ECFB  F01B         	call	___awtoft	;wreg free
  5105  0073A2  C015  F019         	movff	?___awtoft,___ftmul@f1
  5106  0073A6  C016  F01A         	movff	?___awtoft+1,___ftmul@f1+1
  5107  0073AA  C017  F01B         	movff	?___awtoft+2,___ftmul@f1+2
  5108  0073AE  0E00               	movlw	0
  5109  0073B0  6E1C               	movwf	___ftmul@f2,c
  5110  0073B2  0EA0               	movlw	160
  5111  0073B4  6E1D               	movwf	___ftmul@f2+1,c
  5112  0073B6  0E3B               	movlw	59
  5113  0073B8  6E1E               	movwf	___ftmul@f2+2,c
  5114  0073BA  EC58  F020         	call	___ftmul	;wreg free
  5115  0073BE  C019  F0E9         	movff	?___ftmul,main@val2
  5116  0073C2  C01A  F0EA         	movff	?___ftmul+1,main@val2+1
  5117  0073C6  C01B  F0EB         	movff	?___ftmul+2,main@val2+2
  5118                           
  5119                           ;main.c: 343: ADCON0=0b00001001;
  5120  0073CA  0E09               	movlw	9
  5121  0073CC  6EC2               	movwf	4034,c	;volatile
  5122                           
  5123                           ;main.c: 346: for (int i = 0; i < 128; i++)
  5124  0073CE  0E00               	movlw	0
  5125  0073D0  0102               	movlb	2	; () banked
  5126  0073D2  6F1B               	movwf	(main@i_377+1)& (0+255),b
  5127  0073D4  0E00               	movlw	0
  5128  0073D6  6F1A               	movwf	main@i_377& (0+255),b
  5129  0073D8                     l5173:
  5130                           
  5131                           ; BSR set to: 2
  5132  0073D8  0102               	movlb	2	; () banked
  5133  0073DA  BF1B               	btfsc	(main@i_377+1)& (0+255),7,b
  5134  0073DC  D008               	goto	l128
  5135  0073DE  0102               	movlb	2	; () banked
  5136  0073E0  511B               	movf	(main@i_377+1)& (0+255),w,b
  5137  0073E2  E13F               	bnz	l5193
  5138  0073E4  0E80               	movlw	128
  5139  0073E6  0102               	movlb	2	; () banked
  5140  0073E8  5D1A               	subwf	main@i_377& (0+255),w,b
  5141  0073EA  B0D8               	btfsc	status,0,c
  5142  0073EC  D03A               	goto	l5193
  5143  0073EE                     l128:
  5144                           
  5145                           ; BSR set to: 2
  5146                           ;main.c: 347: {
  5147                           ;main.c: 348: LATEbits.LATE2 = 1;
  5148  0073EE  848D               	bsf	3981,2,c	;volatile
  5149                           
  5150                           ;main.c: 351: ADCON0bits.GO=1;
  5151  0073F0  82C2               	bsf	4034,1,c	;volatile
  5152                           
  5153                           ; BSR set to: 2
  5154                           ;main.c: 355: data[i] = ((unsigned int)(ADRESH << 8) | ADRESL);
  5155  0073F2  50C3               	movf	4035,w,c	;volatile
  5156  0073F4  CFC4 F05A          	movff	4036,??_main	;volatile
  5157  0073F8  6A5B               	clrf	(??_main+1)& (0+255),c
  5158  0073FA  C05A  F05B         	movff	??_main,??_main+1
  5159  0073FE  6A5A               	clrf	??_main,c
  5160  007400  125A               	iorwf	??_main,f,c
  5161  007402  0E00               	movlw	0
  5162  007404  125B               	iorwf	??_main+1,f,c
  5163  007406  90D8               	bcf	status,0,c
  5164  007408  0102               	movlb	2	; () banked
  5165  00740A  351A               	rlcf	main@i_377& (0+255),w,b
  5166  00740C  6ED9               	movwf	fsr2l,c
  5167  00740E  0102               	movlb	2	; () banked
  5168  007410  351B               	rlcf	(main@i_377+1)& (0+255),w,b
  5169  007412  6EDA               	movwf	fsr2h,c
  5170  007414  0E00               	movlw	low main@data
  5171  007416  26D9               	addwf	fsr2l,f,c
  5172  007418  0E01               	movlw	high main@data
  5173  00741A  22DA               	addwfc	fsr2h,f,c
  5174  00741C  C05A  FFDE         	movff	??_main,postinc2
  5175  007420  C05B  FFDD         	movff	??_main+1,postdec2
  5176                           
  5177                           ; BSR set to: 2
  5178                           ;main.c: 357: for (int j = 0; j < 2; j++)
  5179  007424  0E00               	movlw	0
  5180  007426  0100               	movlb	0	; () banked
  5181  007428  6FF9               	movwf	(main@j+1)& (0+255),b
  5182  00742A  0E00               	movlw	0
  5183  00742C  6FF8               	movwf	main@j& (0+255),b
  5184                           
  5185                           ; BSR set to: 0
  5186  00742E  0100               	movlb	0	; () banked
  5187  007430  BFF9               	btfsc	(main@j+1)& (0+255),7,b
  5188  007432  D008               	goto	l5185
  5189  007434  0100               	movlb	0	; () banked
  5190  007436  51F9               	movf	(main@j+1)& (0+255),w,b
  5191  007438  E10F               	bnz	l131
  5192  00743A  0E02               	movlw	2
  5193  00743C  0100               	movlb	0	; () banked
  5194  00743E  5DF8               	subwf	main@j& (0+255),w,b
  5195  007440  B0D8               	btfsc	status,0,c
  5196  007442  D00A               	goto	l131
  5197  007444                     l5185:
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;main.c: 358: {
  5201                           ;main.c: 359: ;
  5202  007444  0100               	movlb	0	; () banked
  5203  007446  4BF8               	infsnz	main@j& (0+255),f,b
  5204  007448  2BF9               	incf	(main@j+1)& (0+255),f,b
  5205                           
  5206                           ; BSR set to: 0
  5207  00744A  0100               	movlb	0	; () banked
  5208  00744C  BFF9               	btfsc	(main@j+1)& (0+255),7,b
  5209  00744E  D7FA               	goto	l5185
  5210  007450  0100               	movlb	0	; () banked
  5211  007452  51F9               	movf	(main@j+1)& (0+255),w,b
  5212  007454  E101               	bnz	u5920
  5213  007456  D7F1               	goto	L6
  5214  007458                     u5920:
  5215  007458                     l131:
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;main.c: 360: }
  5219                           ;main.c: 362: LATEbits.LATE2 = 0;
  5220  007458  948D               	bcf	3981,2,c	;volatile
  5221                           
  5222                           ; BSR set to: 0
  5223  00745A  0102               	movlb	2	; () banked
  5224  00745C  4B1A               	infsnz	main@i_377& (0+255),f,b
  5225  00745E  2B1B               	incf	(main@i_377+1)& (0+255),f,b
  5226  007460  D7BB               	goto	l5173
  5227  007462                     l5193:
  5228                           
  5229                           ; BSR set to: 2
  5230                           ;main.c: 363: }
  5231                           ;main.c: 367: sprintf(str, "%5.2f", val2);
  5232  007462  0EA1               	movlw	low main@str
  5233  007464  6E4D               	movwf	sprintf@sp,c
  5234  007466  0E00               	movlw	high main@str
  5235  007468  6E4E               	movwf	sprintf@sp+1,c
  5236  00746A  0EF5               	movlw	low STR_5
  5237  00746C  6E4F               	movwf	sprintf@f,c
  5238  00746E  0E7F               	movlw	high STR_5
  5239  007470  6E50               	movwf	sprintf@f+1,c
  5240  007472  C0E9  F051         	movff	main@val2,?_sprintf+4
  5241  007476  C0EA  F052         	movff	main@val2+1,?_sprintf+5
  5242  00747A  C0EB  F053         	movff	main@val2+2,?_sprintf+6
  5243  00747E  EC58  F02C         	call	_sprintf	;wreg free
  5244                           
  5245                           ;main.c: 369: old1 = val1;
  5246  007482  C23E  F0B0         	movff	main@val1,main@old1
  5247  007486  C23F  F0B1         	movff	main@val1+1,main@old1+1
  5248  00748A  C240  F0B2         	movff	main@val1+2,main@old1+2
  5249                           
  5250                           ;main.c: 370: old2 = val2;
  5251  00748E  C0E9  F0B3         	movff	main@val2,main@old2
  5252  007492  C0EA  F0B4         	movff	main@val2+1,main@old2+1
  5253  007496  C0EB  F0B5         	movff	main@val2+2,main@old2+2
  5254                           
  5255                           ;main.c: 371: int count = 0;
  5256  00749A  0E00               	movlw	0
  5257  00749C  6E5D               	movwf	main@count+1,c
  5258  00749E  0E00               	movlw	0
  5259  0074A0  6E5C               	movwf	main@count,c
  5260                           
  5261                           ;main.c: 372: LCDclear();
  5262  0074A2  EC36  F01E         	call	_LCDclear	;wreg free
  5263                           
  5264                           ;main.c: 373: xyaxis();
  5265  0074A6  EC9F  F022         	call	_xyaxis	;wreg free
  5266                           
  5267                           ;main.c: 376: char buf[40];
  5268                           ;main.c: 377: sprintf(buf,"%u",tmp);
  5269  0074AA  0E79               	movlw	low main@buf_384
  5270  0074AC  6E4D               	movwf	sprintf@sp,c
  5271  0074AE  0E00               	movlw	high main@buf_384
  5272  0074B0  6E4E               	movwf	sprintf@sp+1,c
  5273  0074B2  0EFB               	movlw	low STR_7
  5274  0074B4  6E4F               	movwf	sprintf@f,c
  5275  0074B6  0E7F               	movlw	high STR_7
  5276  0074B8  6E50               	movwf	sprintf@f+1,c
  5277  0074BA  C206  F051         	movff	main@tmp,?_sprintf+4
  5278  0074BE  C207  F052         	movff	main@tmp+1,?_sprintf+5
  5279  0074C2  EC58  F02C         	call	_sprintf	;wreg free
  5280                           
  5281                           ;main.c: 378: LCDpage(1,7);
  5282  0074C6  0E07               	movlw	7
  5283  0074C8  6E05               	movwf	LCDpage@page,c
  5284  0074CA  0E01               	movlw	1
  5285  0074CC  EC9A  F01C         	call	_LCDpage
  5286                           
  5287                           ;main.c: 381: div = ( 99+20*(tmp-2))*0.1;
  5288  0074D0  0EFE               	movlw	254
  5289  0074D2  0102               	movlb	2	; () banked
  5290  0074D4  2506               	addwf	main@tmp& (0+255),w,b
  5291  0074D6  6E0F               	movwf	___wmul@multiplier,c
  5292  0074D8  0EFF               	movlw	255
  5293  0074DA  0102               	movlb	2	; () banked
  5294  0074DC  2107               	addwfc	(main@tmp+1)& (0+255),w,b
  5295  0074DE  6E10               	movwf	___wmul@multiplier+1,c
  5296  0074E0  0E00               	movlw	0
  5297  0074E2  6E12               	movwf	___wmul@multiplicand+1,c
  5298  0074E4  0E14               	movlw	20
  5299  0074E6  6E11               	movwf	___wmul@multiplicand,c
  5300  0074E8  ECBF  F01B         	call	___wmul	;wreg free
  5301  0074EC  0E63               	movlw	99
  5302  0074EE  240F               	addwf	?___wmul,w,c
  5303  0074F0  6E15               	movwf	___awtoft@c,c
  5304  0074F2  0E00               	movlw	0
  5305  0074F4  2010               	addwfc	?___wmul+1,w,c
  5306  0074F6  6E16               	movwf	___awtoft@c+1,c
  5307  0074F8  ECFB  F01B         	call	___awtoft	;wreg free
  5308  0074FC  C015  F019         	movff	?___awtoft,___ftmul@f1
  5309  007500  C016  F01A         	movff	?___awtoft+1,___ftmul@f1+1
  5310  007504  C017  F01B         	movff	?___awtoft+2,___ftmul@f1+2
  5311  007508  0ECD               	movlw	205
  5312  00750A  6E1C               	movwf	___ftmul@f2,c
  5313  00750C  0ECC               	movlw	204
  5314  00750E  6E1D               	movwf	___ftmul@f2+1,c
  5315  007510  0E3D               	movlw	61
  5316  007512  6E1E               	movwf	___ftmul@f2+2,c
  5317  007514  EC58  F020         	call	___ftmul	;wreg free
  5318  007518  C019  F21F         	movff	?___ftmul,main@div
  5319  00751C  C01A  F220         	movff	?___ftmul+1,main@div+1
  5320  007520  C01B  F221         	movff	?___ftmul+2,main@div+2
  5321                           
  5322                           ;main.c: 382: if (div > 1000)
  5323  007524  0E00               	movlw	0
  5324  007526  6E01               	movwf	___ftge@ff1,c
  5325  007528  0E7A               	movlw	122
  5326  00752A  6E02               	movwf	___ftge@ff1+1,c
  5327  00752C  0E44               	movlw	68
  5328  00752E  6E03               	movwf	___ftge@ff1+2,c
  5329  007530  C21F  F004         	movff	main@div,___ftge@ff2
  5330  007534  C220  F005         	movff	main@div+1,___ftge@ff2+1
  5331  007538  C221  F006         	movff	main@div+2,___ftge@ff2+2
  5332  00753C  EC7E  F01E         	call	___ftge	;wreg free
  5333  007540  B0D8               	btfsc	status,0,c
  5334  007542  D01F               	goto	l5215
  5335                           
  5336                           ;main.c: 383: {
  5337                           ;main.c: 384: sprintf(buf,"%.2f ms/d",div/1000);
  5338  007544  0E79               	movlw	low main@buf_384
  5339  007546  6E4D               	movwf	sprintf@sp,c
  5340  007548  0E00               	movlw	high main@buf_384
  5341  00754A  6E4E               	movwf	sprintf@sp+1,c
  5342  00754C  0EAC               	movlw	low STR_8
  5343  00754E  6E4F               	movwf	sprintf@f,c
  5344  007550  0E7F               	movlw	high STR_8
  5345  007552  6E50               	movwf	sprintf@f+1,c
  5346  007554  C21F  F019         	movff	main@div,___ftdiv@f1
  5347  007558  C220  F01A         	movff	main@div+1,___ftdiv@f1+1
  5348  00755C  C221  F01B         	movff	main@div+2,___ftdiv@f1+2
  5349  007560  0E00               	movlw	0
  5350  007562  6E1C               	movwf	___ftdiv@f2,c
  5351  007564  0E7A               	movlw	122
  5352  007566  6E1D               	movwf	___ftdiv@f2+1,c
  5353  007568  0E44               	movlw	68
  5354  00756A  6E1E               	movwf	___ftdiv@f2+2,c
  5355  00756C  EC6B  F01F         	call	___ftdiv	;wreg free
  5356  007570  C019  F051         	movff	?___ftdiv,?_sprintf+4
  5357  007574  C01A  F052         	movff	?___ftdiv+1,?_sprintf+5
  5358  007578  C01B  F053         	movff	?___ftdiv+2,?_sprintf+6
  5359  00757C  EC58  F02C         	call	_sprintf	;wreg free
  5360                           
  5361                           ;main.c: 385: }
  5362  007580  D010               	goto	l5217
  5363  007582                     l5215:
  5364                           
  5365                           ;main.c: 386: else
  5366                           ;main.c: 387: {
  5367                           ;main.c: 388: sprintf(buf,"%.2f us/d",div);
  5368  007582  0E79               	movlw	low main@buf_384
  5369  007584  6E4D               	movwf	sprintf@sp,c
  5370  007586  0E00               	movlw	high main@buf_384
  5371  007588  6E4E               	movwf	sprintf@sp+1,c
  5372  00758A  0EB6               	movlw	low STR_9
  5373  00758C  6E4F               	movwf	sprintf@f,c
  5374  00758E  0E7F               	movlw	high STR_9
  5375  007590  6E50               	movwf	sprintf@f+1,c
  5376  007592  C21F  F051         	movff	main@div,?_sprintf+4
  5377  007596  C220  F052         	movff	main@div+1,?_sprintf+5
  5378  00759A  C221  F053         	movff	main@div+2,?_sprintf+6
  5379  00759E  EC58  F02C         	call	_sprintf	;wreg free
  5380  0075A2                     l5217:
  5381                           
  5382                           ;main.c: 389: }
  5383                           ;main.c: 396: int i = 0;
  5384  0075A2  0E00               	movlw	0
  5385  0075A4  0102               	movlb	2	; () banked
  5386  0075A6  6F2D               	movwf	(main@i_388+1)& (0+255),b
  5387  0075A8  0E00               	movlw	0
  5388  0075AA  6F2C               	movwf	main@i_388& (0+255),b
  5389                           
  5390                           ; BSR set to: 2
  5391                           ;main.c: 398: unsigned int min = 1025;
  5392  0075AC  0E04               	movlw	4
  5393  0075AE  0100               	movlb	0	; () banked
  5394  0075B0  6FFB               	movwf	(main@min+1)& (0+255),b
  5395  0075B2  0E01               	movlw	1
  5396  0075B4  6FFA               	movwf	main@min& (0+255),b
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;main.c: 399: char min_y = 0;
  5400  0075B6  0E00               	movlw	0
  5401  0075B8  0100               	movlb	0	; () banked
  5402  0075BA  6FE7               	movwf	main@min_y& (0+255),b
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;main.c: 400: char max_y = 0;
  5406  0075BC  0E00               	movlw	0
  5407  0075BE  0100               	movlb	0	; () banked
  5408  0075C0  6FE8               	movwf	main@max_y& (0+255),b
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;main.c: 401: unsigned int max = 0;
  5412  0075C2  0E00               	movlw	0
  5413  0075C4  0100               	movlb	0	; () banked
  5414  0075C6  6FFD               	movwf	(main@max+1)& (0+255),b
  5415  0075C8  0E00               	movlw	0
  5416  0075CA  6FFC               	movwf	main@max& (0+255),b
  5417                           
  5418                           ;main.c: 402: while (i < 128)
  5419  0075CC  D0C7               	goto	l5249
  5420  0075CE                     l5227:
  5421                           
  5422                           ;main.c: 403: {
  5423                           ;main.c: 404: int y = (int)(((((float)5/1024)*data[i])-2.50f)*val1*2);
  5424  0075CE  0E00               	movlw	0
  5425  0075D0  6E35               	movwf	___ftadd@f2,c
  5426  0075D2  0E20               	movlw	32
  5427  0075D4  6E36               	movwf	___ftadd@f2+1,c
  5428  0075D6  0EC0               	movlw	192
  5429  0075D8  6E37               	movwf	___ftadd@f2+2,c
  5430  0075DA  0E00               	movlw	0
  5431  0075DC  6E1C               	movwf	___ftmul@f2,c
  5432  0075DE  0EA0               	movlw	160
  5433  0075E0  6E1D               	movwf	___ftmul@f2+1,c
  5434  0075E2  0E3B               	movlw	59
  5435  0075E4  6E1E               	movwf	___ftmul@f2+2,c
  5436  0075E6  90D8               	bcf	status,0,c
  5437  0075E8  0102               	movlb	2	; () banked
  5438  0075EA  352C               	rlcf	main@i_388& (0+255),w,b
  5439  0075EC  6ED9               	movwf	fsr2l,c
  5440  0075EE  0102               	movlb	2	; () banked
  5441  0075F0  352D               	rlcf	(main@i_388+1)& (0+255),w,b
  5442  0075F2  6EDA               	movwf	fsr2h,c
  5443  0075F4  0E00               	movlw	low main@data
  5444  0075F6  26D9               	addwf	fsr2l,f,c
  5445  0075F8  0E01               	movlw	high main@data
  5446  0075FA  22DA               	addwfc	fsr2h,f,c
  5447  0075FC  CFDE F009          	movff	postinc2,___lwtoft@c
  5448  007600  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  5449  007604  EC9B  F01B         	call	___lwtoft	;wreg free
  5450  007608  C009  F019         	movff	?___lwtoft,___ftmul@f1
  5451  00760C  C00A  F01A         	movff	?___lwtoft+1,___ftmul@f1+1
  5452  007610  C00B  F01B         	movff	?___lwtoft+2,___ftmul@f1+2
  5453  007614  EC58  F020         	call	___ftmul	;wreg free
  5454  007618  C019  F032         	movff	?___ftmul,___ftadd@f1
  5455  00761C  C01A  F033         	movff	?___ftmul+1,___ftadd@f1+1
  5456  007620  C01B  F034         	movff	?___ftmul+2,___ftadd@f1+2
  5457  007624  EC45  F023         	call	___ftadd	;wreg free
  5458  007628  C032  F238         	movff	?___ftadd,_main$1209
  5459  00762C  C033  F239         	movff	?___ftadd+1,_main$1209+1
  5460  007630  C034  F23A         	movff	?___ftadd+2,_main$1209+2
  5461                           
  5462                           ;main.c: 403: {
  5463                           ;main.c: 404: int y = (int)(((((float)5/1024)*data[i])-2.50f)*val1*2);
  5464  007634  C23E  F01C         	movff	main@val1,___ftmul@f2
  5465  007638  C23F  F01D         	movff	main@val1+1,___ftmul@f2+1
  5466  00763C  C240  F01E         	movff	main@val1+2,___ftmul@f2+2
  5467  007640  C238  F019         	movff	_main$1209,___ftmul@f1
  5468  007644  C239  F01A         	movff	_main$1209+1,___ftmul@f1+1
  5469  007648  C23A  F01B         	movff	_main$1209+2,___ftmul@f1+2
  5470  00764C  EC58  F020         	call	___ftmul	;wreg free
  5471  007650  C019  F23B         	movff	?___ftmul,_main$1210
  5472  007654  C01A  F23C         	movff	?___ftmul+1,_main$1210+1
  5473  007658  C01B  F23D         	movff	?___ftmul+2,_main$1210+2
  5474                           
  5475                           ;main.c: 403: {
  5476                           ;main.c: 404: int y = (int)(((((float)5/1024)*data[i])-2.50f)*val1*2);
  5477  00765C  0E00               	movlw	0
  5478  00765E  6E1C               	movwf	___ftmul@f2,c
  5479  007660  0E00               	movlw	0
  5480  007662  6E1D               	movwf	___ftmul@f2+1,c
  5481  007664  0E40               	movlw	64
  5482  007666  6E1E               	movwf	___ftmul@f2+2,c
  5483  007668  C23B  F019         	movff	_main$1210,___ftmul@f1
  5484  00766C  C23C  F01A         	movff	_main$1210+1,___ftmul@f1+1
  5485  007670  C23D  F01B         	movff	_main$1210+2,___ftmul@f1+2
  5486  007674  EC58  F020         	call	___ftmul	;wreg free
  5487  007678  C019  F03E         	movff	?___ftmul,___fttol@f1
  5488  00767C  C01A  F03F         	movff	?___ftmul+1,___fttol@f1+1
  5489  007680  C01B  F040         	movff	?___ftmul+2,___fttol@f1+2
  5490  007684  ECDE  F01F         	call	___fttol	;wreg free
  5491  007688  C03E  F208         	movff	?___fttol,main@y_393
  5492  00768C  C03F  F209         	movff	?___fttol+1,main@y_393+1
  5493                           
  5494                           ;main.c: 405: if (data[i] < min)
  5495  007690  90D8               	bcf	status,0,c
  5496  007692  0102               	movlb	2	; () banked
  5497  007694  352C               	rlcf	main@i_388& (0+255),w,b
  5498  007696  6ED9               	movwf	fsr2l,c
  5499  007698  0102               	movlb	2	; () banked
  5500  00769A  352D               	rlcf	(main@i_388+1)& (0+255),w,b
  5501  00769C  6EDA               	movwf	fsr2h,c
  5502  00769E  0E00               	movlw	low main@data
  5503  0076A0  26D9               	addwf	fsr2l,f,c
  5504  0076A2  0E01               	movlw	high main@data
  5505  0076A4  22DA               	addwfc	fsr2h,f,c
  5506  0076A6  0100               	movlb	0	; () banked
  5507  0076A8  51FA               	movf	main@min& (0+255),w,b
  5508  0076AA  5CDE               	subwf	postinc2,w,c
  5509  0076AC  0100               	movlb	0	; () banked
  5510  0076AE  51FB               	movf	(main@min+1)& (0+255),w,b
  5511  0076B0  58DE               	subwfb	postinc2,w,c
  5512  0076B2  B0D8               	btfsc	status,0,c
  5513  0076B4  D018               	goto	l5239
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;main.c: 406: {
  5517                           ;main.c: 407: min = data[i];
  5518  0076B6  90D8               	bcf	status,0,c
  5519  0076B8  0102               	movlb	2	; () banked
  5520  0076BA  352C               	rlcf	main@i_388& (0+255),w,b
  5521  0076BC  6ED9               	movwf	fsr2l,c
  5522  0076BE  0102               	movlb	2	; () banked
  5523  0076C0  352D               	rlcf	(main@i_388+1)& (0+255),w,b
  5524  0076C2  6EDA               	movwf	fsr2h,c
  5525  0076C4  0E00               	movlw	low main@data
  5526  0076C6  26D9               	addwf	fsr2l,f,c
  5527  0076C8  0E01               	movlw	high main@data
  5528  0076CA  22DA               	addwfc	fsr2h,f,c
  5529  0076CC  CFDE F0FA          	movff	postinc2,main@min
  5530  0076D0  CFDD F0FB          	movff	postdec2,main@min+1
  5531                           
  5532                           ; BSR set to: 2
  5533                           ;main.c: 408: min_y = abs(y);
  5534  0076D4  C208  F001         	movff	main@y_393,abs@a
  5535  0076D8  C209  F002         	movff	main@y_393+1,abs@a+1
  5536  0076DC  ECD2  F01B         	call	_abs	;wreg free
  5537  0076E0  5001               	movf	?_abs,w,c
  5538  0076E2  0100               	movlb	0	; () banked
  5539  0076E4  6FE7               	movwf	main@min_y& (0+255),b
  5540  0076E6                     l5239:
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;main.c: 409: }
  5544                           ;main.c: 410: if (data[i] > max)
  5545  0076E6  90D8               	bcf	status,0,c
  5546  0076E8  0102               	movlb	2	; () banked
  5547  0076EA  352C               	rlcf	main@i_388& (0+255),w,b
  5548  0076EC  6ED9               	movwf	fsr2l,c
  5549  0076EE  0102               	movlb	2	; () banked
  5550  0076F0  352D               	rlcf	(main@i_388+1)& (0+255),w,b
  5551  0076F2  6EDA               	movwf	fsr2h,c
  5552  0076F4  0E00               	movlw	low main@data
  5553  0076F6  26D9               	addwf	fsr2l,f,c
  5554  0076F8  0E01               	movlw	high main@data
  5555  0076FA  22DA               	addwfc	fsr2h,f,c
  5556  0076FC  50DE               	movf	postinc2,w,c
  5557  0076FE  0100               	movlb	0	; () banked
  5558  007700  5DFC               	subwf	main@max& (0+255),w,b
  5559  007702  50DE               	movf	postinc2,w,c
  5560  007704  0100               	movlb	0	; () banked
  5561  007706  59FD               	subwfb	(main@max+1)& (0+255),w,b
  5562  007708  B0D8               	btfsc	status,0,c
  5563  00770A  D018               	goto	l5245
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;main.c: 411: {
  5567                           ;main.c: 412: max = data[i];
  5568  00770C  90D8               	bcf	status,0,c
  5569  00770E  0102               	movlb	2	; () banked
  5570  007710  352C               	rlcf	main@i_388& (0+255),w,b
  5571  007712  6ED9               	movwf	fsr2l,c
  5572  007714  0102               	movlb	2	; () banked
  5573  007716  352D               	rlcf	(main@i_388+1)& (0+255),w,b
  5574  007718  6EDA               	movwf	fsr2h,c
  5575  00771A  0E00               	movlw	low main@data
  5576  00771C  26D9               	addwf	fsr2l,f,c
  5577  00771E  0E01               	movlw	high main@data
  5578  007720  22DA               	addwfc	fsr2h,f,c
  5579  007722  CFDE F0FC          	movff	postinc2,main@max
  5580  007726  CFDD F0FD          	movff	postdec2,main@max+1
  5581                           
  5582                           ; BSR set to: 2
  5583                           ;main.c: 413: max_y = abs(y);
  5584  00772A  C208  F001         	movff	main@y_393,abs@a
  5585  00772E  C209  F002         	movff	main@y_393+1,abs@a+1
  5586  007732  ECD2  F01B         	call	_abs	;wreg free
  5587  007736  5001               	movf	?_abs,w,c
  5588  007738  0100               	movlb	0	; () banked
  5589  00773A  6FE8               	movwf	main@max_y& (0+255),b
  5590  00773C                     l5245:
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;main.c: 414: }
  5594                           ;main.c: 416: lcdplotpixel2(i,32-y,0);
  5595  00773C  0102               	movlb	2	; () banked
  5596  00773E  5108               	movf	main@y_393& (0+255),w,b
  5597  007740  0800               	sublw	0
  5598  007742  0F20               	addlw	32
  5599  007744  6E0F               	movwf	lcdplotpixel2@ry,c
  5600  007746  0E00               	movlw	0
  5601  007748  6E11               	movwf	lcdplotpixel2@blank+1,c
  5602  00774A  0E00               	movlw	0
  5603  00774C  6E10               	movwf	lcdplotpixel2@blank,c
  5604  00774E  0102               	movlb	2	; () banked
  5605  007750  512C               	movf	main@i_388& (0+255),w,b
  5606  007752  ECFF  F021         	call	_lcdplotpixel2
  5607                           
  5608                           ;main.c: 417: i++;
  5609  007756  0102               	movlb	2	; () banked
  5610  007758  4B2C               	infsnz	main@i_388& (0+255),f,b
  5611  00775A  2B2D               	incf	(main@i_388+1)& (0+255),f,b
  5612  00775C                     l5249:
  5613  00775C  0102               	movlb	2	; () banked
  5614  00775E  BF2D               	btfsc	(main@i_388+1)& (0+255),7,b
  5615  007760  D736               	goto	l5227
  5616  007762  0102               	movlb	2	; () banked
  5617  007764  512D               	movf	(main@i_388+1)& (0+255),w,b
  5618  007766  E105               	bnz	l5251
  5619  007768  0E80               	movlw	128
  5620  00776A  0102               	movlb	2	; () banked
  5621  00776C  5D2C               	subwf	main@i_388& (0+255),w,b
  5622  00776E  A0D8               	btfss	status,0,c
  5623  007770  D72E               	goto	l5227
  5624  007772                     l5251:
  5625                           
  5626                           ; BSR set to: 2
  5627                           ;main.c: 418: }
  5628                           ;main.c: 421: Vpp = ((float)5/1024)*(max-min);
  5629  007772  C0FA  F05A         	movff	main@min,??_main
  5630  007776  C0FB  F05B         	movff	main@min+1,??_main+1
  5631  00777A  1E5A               	comf	??_main,f,c
  5632  00777C  1E5B               	comf	??_main+1,f,c
  5633  00777E  4A5A               	infsnz	??_main,f,c
  5634  007780  2A5B               	incf	??_main+1,f,c
  5635  007782  0100               	movlb	0	; () banked
  5636  007784  51FC               	movf	main@max& (0+255),w,b
  5637  007786  245A               	addwf	??_main,w,c
  5638  007788  6E09               	movwf	___lwtoft@c,c
  5639  00778A  0100               	movlb	0	; () banked
  5640  00778C  51FD               	movf	(main@max+1)& (0+255),w,b
  5641  00778E  205B               	addwfc	??_main+1,w,c
  5642  007790  6E0A               	movwf	___lwtoft@c+1,c
  5643  007792  EC9B  F01B         	call	___lwtoft	;wreg free
  5644  007796  C009  F019         	movff	?___lwtoft,___ftmul@f1
  5645  00779A  C00A  F01A         	movff	?___lwtoft+1,___ftmul@f1+1
  5646  00779E  C00B  F01B         	movff	?___lwtoft+2,___ftmul@f1+2
  5647  0077A2  0E00               	movlw	0
  5648  0077A4  6E1C               	movwf	___ftmul@f2,c
  5649  0077A6  0EA0               	movlw	160
  5650  0077A8  6E1D               	movwf	___ftmul@f2+1,c
  5651  0077AA  0E3B               	movlw	59
  5652  0077AC  6E1E               	movwf	___ftmul@f2+2,c
  5653  0077AE  EC58  F020         	call	___ftmul	;wreg free
  5654  0077B2  C019  F0EE         	movff	?___ftmul,main@Vpp
  5655  0077B6  C01A  F0EF         	movff	?___ftmul+1,main@Vpp+1
  5656  0077BA  C01B  F0F0         	movff	?___ftmul+2,main@Vpp+2
  5657                           
  5658                           ;main.c: 423: y_div = Vpp/(max_y + min_y +1);
  5659  0077BE  C0EE  F019         	movff	main@Vpp,___ftdiv@f1
  5660  0077C2  C0EF  F01A         	movff	main@Vpp+1,___ftdiv@f1+1
  5661  0077C6  C0F0  F01B         	movff	main@Vpp+2,___ftdiv@f1+2
  5662  0077CA  0100               	movlb	0	; () banked
  5663  0077CC  51E7               	movf	main@min_y& (0+255),w,b
  5664  0077CE  C0E8  F05A         	movff	main@max_y,??_main
  5665  0077D2  6A5B               	clrf	(??_main+1)& (0+255),c
  5666  0077D4  265A               	addwf	??_main,f,c
  5667  0077D6  0E00               	movlw	0
  5668  0077D8  225B               	addwfc	??_main+1,f,c
  5669  0077DA  0E01               	movlw	1
  5670  0077DC  245A               	addwf	??_main,w,c
  5671  0077DE  6E15               	movwf	___awtoft@c,c
  5672  0077E0  0E00               	movlw	0
  5673  0077E2  205B               	addwfc	??_main+1,w,c
  5674  0077E4  6E16               	movwf	___awtoft@c+1,c
  5675  0077E6  ECFB  F01B         	call	___awtoft	;wreg free
  5676  0077EA  C015  F01C         	movff	?___awtoft,___ftdiv@f2
  5677  0077EE  C016  F01D         	movff	?___awtoft+1,___ftdiv@f2+1
  5678  0077F2  C017  F01E         	movff	?___awtoft+2,___ftdiv@f2+2
  5679  0077F6  EC6B  F01F         	call	___ftdiv	;wreg free
  5680  0077FA  C019  F21C         	movff	?___ftdiv,main@y_div
  5681  0077FE  C01A  F21D         	movff	?___ftdiv+1,main@y_div+1
  5682  007802  C01B  F21E         	movff	?___ftdiv+2,main@y_div+2
  5683                           
  5684                           ;main.c: 425: char buf2[17];
  5685                           ;main.c: 426: if (y_div >= 1)
  5686  007806  C21C  F001         	movff	main@y_div,___ftge@ff1
  5687  00780A  C21D  F002         	movff	main@y_div+1,___ftge@ff1+1
  5688  00780E  C21E  F003         	movff	main@y_div+2,___ftge@ff1+2
  5689  007812  0E00               	movlw	0
  5690  007814  6E04               	movwf	___ftge@ff2,c
  5691  007816  0E80               	movlw	128
  5692  007818  6E05               	movwf	___ftge@ff2+1,c
  5693  00781A  0E3F               	movlw	63
  5694  00781C  6E06               	movwf	___ftge@ff2+2,c
  5695  00781E  EC7E  F01E         	call	___ftge	;wreg free
  5696  007822  A0D8               	btfss	status,0,c
  5697  007824  D011               	goto	l5255
  5698                           
  5699                           ;main.c: 427: {
  5700                           ;main.c: 428: sprintf(buf2, "%.2fV/d", y_div);
  5701  007826  0EB6               	movlw	low main@buf2
  5702  007828  6E4D               	movwf	sprintf@sp,c
  5703  00782A  0E00               	movlw	high main@buf2
  5704  00782C  6E4E               	movwf	sprintf@sp+1,c
  5705  00782E  0ED2               	movlw	low STR_10
  5706  007830  6E4F               	movwf	sprintf@f,c
  5707  007832  0E7F               	movlw	high STR_10
  5708  007834  6E50               	movwf	sprintf@f+1,c
  5709  007836  C21C  F051         	movff	main@y_div,?_sprintf+4
  5710  00783A  C21D  F052         	movff	main@y_div+1,?_sprintf+5
  5711  00783E  C21E  F053         	movff	main@y_div+2,?_sprintf+6
  5712  007842  EC58  F02C         	call	_sprintf	;wreg free
  5713                           
  5714                           ;main.c: 429: }
  5715  007846  D024               	goto	l5259
  5716  007848                     l5255:
  5717                           
  5718                           ;main.c: 430: else
  5719                           ;main.c: 431: {
  5720                           ;main.c: 432: sprintf(buf2, "%.2fmV/d", y_div*1000);
  5721  007848  C21C  F019         	movff	main@y_div,___ftmul@f1
  5722  00784C  C21D  F01A         	movff	main@y_div+1,___ftmul@f1+1
  5723  007850  C21E  F01B         	movff	main@y_div+2,___ftmul@f1+2
  5724  007854  0E00               	movlw	0
  5725  007856  6E1C               	movwf	___ftmul@f2,c
  5726  007858  0E7A               	movlw	122
  5727  00785A  6E1D               	movwf	___ftmul@f2+1,c
  5728  00785C  0E44               	movlw	68
  5729  00785E  6E1E               	movwf	___ftmul@f2+2,c
  5730  007860  EC58  F020         	call	___ftmul	;wreg free
  5731  007864  C019  F0F1         	movff	?___ftmul,_main$1211
  5732  007868  C01A  F0F2         	movff	?___ftmul+1,_main$1211+1
  5733  00786C  C01B  F0F3         	movff	?___ftmul+2,_main$1211+2
  5734                           
  5735                           ;main.c: 430: else
  5736                           ;main.c: 431: {
  5737                           ;main.c: 432: sprintf(buf2, "%.2fmV/d", y_div*1000);
  5738  007870  0EB6               	movlw	low main@buf2
  5739  007872  6E4D               	movwf	sprintf@sp,c
  5740  007874  0E00               	movlw	high main@buf2
  5741  007876  6E4E               	movwf	sprintf@sp+1,c
  5742  007878  0EC0               	movlw	low STR_11
  5743  00787A  6E4F               	movwf	sprintf@f,c
  5744  00787C  0E7F               	movlw	high STR_11
  5745  00787E  6E50               	movwf	sprintf@f+1,c
  5746  007880  C0F1  F051         	movff	_main$1211,?_sprintf+4
  5747  007884  C0F2  F052         	movff	_main$1211+1,?_sprintf+5
  5748  007888  C0F3  F053         	movff	_main$1211+2,?_sprintf+6
  5749  00788C  EC58  F02C         	call	_sprintf	;wreg free
  5750  007890                     l5259:
  5751                           
  5752                           ;main.c: 433: }
  5753                           ;main.c: 435: LCDpage(0,0);
  5754  007890  0E00               	movlw	0
  5755  007892  6E05               	movwf	LCDpage@page,c
  5756  007894  0E00               	movlw	0
  5757  007896  EC9A  F01C         	call	_LCDpage
  5758                           
  5759                           ;main.c: 436: LCDstring(1,buf2);
  5760  00789A  0EB6               	movlw	low main@buf2
  5761  00789C  6E21               	movwf	LCDstring@buffer,c
  5762  00789E  0E00               	movlw	high main@buf2
  5763  0078A0  6E22               	movwf	LCDstring@buffer+1,c
  5764  0078A2  0E01               	movlw	1
  5765  0078A4  EC96  F029         	call	_LCDstring
  5766                           
  5767                           ;main.c: 438: char buf2[17];
  5768                           ;main.c: 439: sprintf(buf2," %.2fVpp",Vpp);
  5769  0078A8  0EB6               	movlw	low main@buf2
  5770  0078AA  6E4D               	movwf	sprintf@sp,c
  5771  0078AC  0E00               	movlw	high main@buf2
  5772  0078AE  6E4E               	movwf	sprintf@sp+1,c
  5773  0078B0  0EC9               	movlw	low STR_12
  5774  0078B2  6E4F               	movwf	sprintf@f,c
  5775  0078B4  0E7F               	movlw	high STR_12
  5776  0078B6  6E50               	movwf	sprintf@f+1,c
  5777  0078B8  C0EE  F051         	movff	main@Vpp,?_sprintf+4
  5778  0078BC  C0EF  F052         	movff	main@Vpp+1,?_sprintf+5
  5779  0078C0  C0F0  F053         	movff	main@Vpp+2,?_sprintf+6
  5780  0078C4  EC58  F02C         	call	_sprintf	;wreg free
  5781                           
  5782                           ;main.c: 441: strcat(buf,buf2);
  5783  0078C8  0E79               	movlw	low main@buf_384
  5784  0078CA  6E01               	movwf	strcat@to,c
  5785  0078CC  0E00               	movlw	high main@buf_384
  5786  0078CE  6E02               	movwf	strcat@to+1,c
  5787  0078D0  0EB6               	movlw	low main@buf2
  5788  0078D2  6E03               	movwf	strcat@from,c
  5789  0078D4  0E00               	movlw	high main@buf2
  5790  0078D6  6E04               	movwf	strcat@from+1,c
  5791  0078D8  EC54  F01C         	call	_strcat	;wreg free
  5792                           
  5793                           ;main.c: 446: LCDpage(0,7);
  5794  0078DC  0E07               	movlw	7
  5795  0078DE  6E05               	movwf	LCDpage@page,c
  5796  0078E0  0E00               	movlw	0
  5797  0078E2  EC9A  F01C         	call	_LCDpage
  5798                           
  5799                           ;main.c: 447: LCDstring(1,buf);
  5800  0078E6  0E79               	movlw	low main@buf_384
  5801  0078E8  6E21               	movwf	LCDstring@buffer,c
  5802  0078EA  0E00               	movlw	high main@buf_384
  5803  0078EC  6E22               	movwf	LCDstring@buffer+1,c
  5804  0078EE  0E01               	movlw	1
  5805  0078F0  EC96  F029         	call	_LCDstring
  5806                           
  5807                           ;main.c: 449: for (int i = 0; i < 5; i++)
  5808  0078F4  0E00               	movlw	0
  5809  0078F6  0100               	movlb	0	; () banked
  5810  0078F8  6FFF               	movwf	(main@i_398+1)& (0+255),b
  5811  0078FA  0E00               	movlw	0
  5812  0078FC  6FFE               	movwf	main@i_398& (0+255),b
  5813                           
  5814                           ; BSR set to: 0
  5815  0078FE  0100               	movlb	0	; () banked
  5816  007900  BFFF               	btfsc	(main@i_398+1)& (0+255),7,b
  5817  007902  D00C               	goto	l5273
  5818  007904  0100               	movlb	0	; () banked
  5819  007906  51FF               	movf	(main@i_398+1)& (0+255),w,b
  5820  007908  E107               	bnz	u5990
  5821  00790A  0E05               	movlw	5
  5822  00790C  0100               	movlb	0	; () banked
  5823  00790E  5DFE               	subwf	main@i_398& (0+255),w,b
  5824  007910  B0D8               	btfsc	status,0,c
  5825  007912  EF00  F032         	goto	l4853
  5826  007916  D002               	goto	l5273
  5827  007918                     u5990:
  5828                           
  5829                           ; BSR set to: 0
  5830  007918  EF00  F032         	goto	l4853
  5831  00791C                     l5273:
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;main.c: 450: {
  5835                           ;main.c: 451: _delay((unsigned long)((10)*(40000000/4000.0)));
  5836  00791C  0E82               	movlw	130
  5837  00791E  6E5A               	movwf	??_main& (0+255),c
  5838  007920  0EDE               	movlw	222
  5839  007922                     u6197:
  5840  007922  2EE8               	decfsz	wreg,f,c
  5841  007924  D7FE               	goto	u6197
  5842  007926  2E5A               	decfsz	??_main& (0+255),f,c
  5843  007928  D7FC               	goto	u6197
  5844  00792A  0100               	movlb	0	; () banked
  5845  00792C  4BFE               	infsnz	main@i_398& (0+255),f,b
  5846  00792E  2BFF               	incf	(main@i_398+1)& (0+255),f,b
  5847  007930  0100               	movlb	0	; () banked
  5848  007932  BFFF               	btfsc	(main@i_398+1)& (0+255),7,b
  5849  007934  D7F3               	goto	l5273
  5850  007936  0100               	movlb	0	; () banked
  5851  007938  51FF               	movf	(main@i_398+1)& (0+255),w,b
  5852  00793A  E101               	bnz	u6000
  5853  00793C  D7E6               	goto	L7
  5854  00793E                     u6000:
  5855                           
  5856                           ; BSR set to: 0
  5857                           
  5858                           ; BSR set to: 0
  5859  00793E  EF00  F032         	goto	l4853
  5860  007942                     __end_of_main:
  5861                           	opt stack 0
  5862                           tblptru	equ	0xFF8
  5863                           postinc0	equ	0xFEE
  5864                           wreg	equ	0xFE8
  5865                           postdec1	equ	0xFE5
  5866                           fsr1h	equ	0xFE2
  5867                           fsr1l	equ	0xFE1
  5868                           postinc2	equ	0xFDE
  5869                           postdec2	equ	0xFDD
  5870                           fsr2h	equ	0xFDA
  5871                           fsr2l	equ	0xFD9
  5872                           status	equ	0xFD8
  5873                           
  5874 ;; *************** function _xyaxis *****************
  5875 ;; Defined at:
  5876 ;;		line 1990 in file "LCDgraphic.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;		None
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  i               2   39[COMRAM] int 
  5881 ;;  i               2   37[COMRAM] int 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5891 ;;      Params:         0       0       0       0       0       0       0       0       0
  5892 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5894 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5895 ;;Total ram usage:        4 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; Hardware stack levels required when called:    5
  5898 ;; This function calls:
  5899 ;;		_lcdplotpixel2
  5900 ;; This function is called by:
  5901 ;;		_main
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text1
  5906  00453E                     __ptext1:
  5907                           	opt stack 0
  5908  00453E                     _xyaxis:
  5909                           	opt stack 25
  5910                           
  5911                           ;LCDgraphic.c: 1992: for(int i=0;i<55;i++)
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;incstack = 0
  5915  00453E  0E00               	movlw	0
  5916  004540  6E27               	movwf	xyaxis@i+1,c
  5917  004542  0E00               	movlw	0
  5918  004544  6E26               	movwf	xyaxis@i,c
  5919  004546                     l4187:
  5920  004546  BE27               	btfsc	xyaxis@i+1,7,c
  5921  004548  D006               	goto	l4191
  5922  00454A  5027               	movf	xyaxis@i+1,w,c
  5923  00454C  E110               	bnz	l4197
  5924  00454E  0E37               	movlw	55
  5925  004550  5C26               	subwf	xyaxis@i,w,c
  5926  004552  B0D8               	btfsc	status,0,c
  5927  004554  D00C               	goto	l4197
  5928  004556                     l4191:
  5929                           
  5930                           ;LCDgraphic.c: 1993: {
  5931                           ;LCDgraphic.c: 1994: lcdplotpixel2(64,i,0);
  5932  004556  C026  F00F         	movff	xyaxis@i,lcdplotpixel2@ry
  5933  00455A  0E00               	movlw	0
  5934  00455C  6E11               	movwf	lcdplotpixel2@blank+1,c
  5935  00455E  0E00               	movlw	0
  5936  004560  6E10               	movwf	lcdplotpixel2@blank,c
  5937  004562  0E40               	movlw	64
  5938  004564  ECFF  F021         	call	_lcdplotpixel2
  5939  004568  4A26               	infsnz	xyaxis@i,f,c
  5940  00456A  2A27               	incf	xyaxis@i+1,f,c
  5941  00456C  D7EC               	goto	l4187
  5942  00456E                     l4197:
  5943                           
  5944                           ;LCDgraphic.c: 1995: }
  5945                           ;LCDgraphic.c: 1997: for(int i=0;i<=126;i++)
  5946  00456E  0E00               	movlw	0
  5947  004570  6E29               	movwf	xyaxis@i_585+1,c
  5948  004572  0E00               	movlw	0
  5949  004574  6E28               	movwf	xyaxis@i_585,c
  5950  004576                     l4199:
  5951  004576  BE29               	btfsc	xyaxis@i_585+1,7,c
  5952  004578  D006               	goto	l4203
  5953  00457A  5029               	movf	xyaxis@i_585+1,w,c
  5954  00457C  E110               	bnz	l4209
  5955  00457E  0E7F               	movlw	127
  5956  004580  5C28               	subwf	xyaxis@i_585,w,c
  5957  004582  B0D8               	btfsc	status,0,c
  5958  004584  D00C               	goto	l4209
  5959  004586                     l4203:
  5960                           
  5961                           ;LCDgraphic.c: 1998: {
  5962                           ;LCDgraphic.c: 1999: lcdplotpixel2(i,32,0);
  5963  004586  0E20               	movlw	32
  5964  004588  6E0F               	movwf	lcdplotpixel2@ry,c
  5965  00458A  0E00               	movlw	0
  5966  00458C  6E11               	movwf	lcdplotpixel2@blank+1,c
  5967  00458E  0E00               	movlw	0
  5968  004590  6E10               	movwf	lcdplotpixel2@blank,c
  5969  004592  5028               	movf	xyaxis@i_585,w,c
  5970  004594  ECFF  F021         	call	_lcdplotpixel2
  5971  004598  4A28               	infsnz	xyaxis@i_585,f,c
  5972  00459A  2A29               	incf	xyaxis@i_585+1,f,c
  5973  00459C  D7EC               	goto	l4199
  5974  00459E                     l4209:
  5975                           
  5976                           ;LCDgraphic.c: 2000: }
  5977                           ;LCDgraphic.c: 2005: lcdplotpixel2(63,1,0);
  5978  00459E  0E01               	movlw	1
  5979  0045A0  6E0F               	movwf	lcdplotpixel2@ry,c
  5980  0045A2  0E00               	movlw	0
  5981  0045A4  6E11               	movwf	lcdplotpixel2@blank+1,c
  5982  0045A6  0E00               	movlw	0
  5983  0045A8  6E10               	movwf	lcdplotpixel2@blank,c
  5984  0045AA  0E3F               	movlw	63
  5985  0045AC  ECFF  F021         	call	_lcdplotpixel2
  5986                           
  5987                           ;LCDgraphic.c: 2006: lcdplotpixel2(62,2,0);
  5988  0045B0  0E02               	movlw	2
  5989  0045B2  6E0F               	movwf	lcdplotpixel2@ry,c
  5990  0045B4  0E00               	movlw	0
  5991  0045B6  6E11               	movwf	lcdplotpixel2@blank+1,c
  5992  0045B8  0E00               	movlw	0
  5993  0045BA  6E10               	movwf	lcdplotpixel2@blank,c
  5994  0045BC  0E3E               	movlw	62
  5995  0045BE  ECFF  F021         	call	_lcdplotpixel2
  5996                           
  5997                           ;LCDgraphic.c: 2007: lcdplotpixel2(61,3,0);
  5998  0045C2  0E03               	movlw	3
  5999  0045C4  6E0F               	movwf	lcdplotpixel2@ry,c
  6000  0045C6  0E00               	movlw	0
  6001  0045C8  6E11               	movwf	lcdplotpixel2@blank+1,c
  6002  0045CA  0E00               	movlw	0
  6003  0045CC  6E10               	movwf	lcdplotpixel2@blank,c
  6004  0045CE  0E3D               	movlw	61
  6005  0045D0  ECFF  F021         	call	_lcdplotpixel2
  6006                           
  6007                           ;LCDgraphic.c: 2008: lcdplotpixel2(65,1,0);
  6008  0045D4  0E01               	movlw	1
  6009  0045D6  6E0F               	movwf	lcdplotpixel2@ry,c
  6010  0045D8  0E00               	movlw	0
  6011  0045DA  6E11               	movwf	lcdplotpixel2@blank+1,c
  6012  0045DC  0E00               	movlw	0
  6013  0045DE  6E10               	movwf	lcdplotpixel2@blank,c
  6014  0045E0  0E41               	movlw	65
  6015  0045E2  ECFF  F021         	call	_lcdplotpixel2
  6016                           
  6017                           ;LCDgraphic.c: 2009: lcdplotpixel2(66,2,0);
  6018  0045E6  0E02               	movlw	2
  6019  0045E8  6E0F               	movwf	lcdplotpixel2@ry,c
  6020  0045EA  0E00               	movlw	0
  6021  0045EC  6E11               	movwf	lcdplotpixel2@blank+1,c
  6022  0045EE  0E00               	movlw	0
  6023  0045F0  6E10               	movwf	lcdplotpixel2@blank,c
  6024  0045F2  0E42               	movlw	66
  6025  0045F4  ECFF  F021         	call	_lcdplotpixel2
  6026                           
  6027                           ;LCDgraphic.c: 2010: lcdplotpixel2(67,3,0);
  6028  0045F8  0E03               	movlw	3
  6029  0045FA  6E0F               	movwf	lcdplotpixel2@ry,c
  6030  0045FC  0E00               	movlw	0
  6031  0045FE  6E11               	movwf	lcdplotpixel2@blank+1,c
  6032  004600  0E00               	movlw	0
  6033  004602  6E10               	movwf	lcdplotpixel2@blank,c
  6034  004604  0E43               	movlw	67
  6035  004606  ECFF  F021         	call	_lcdplotpixel2
  6036                           
  6037                           ;LCDgraphic.c: 2013: lcdplotpixel2(127,32,0);
  6038  00460A  0E20               	movlw	32
  6039  00460C  6E0F               	movwf	lcdplotpixel2@ry,c
  6040  00460E  0E00               	movlw	0
  6041  004610  6E11               	movwf	lcdplotpixel2@blank+1,c
  6042  004612  0E00               	movlw	0
  6043  004614  6E10               	movwf	lcdplotpixel2@blank,c
  6044  004616  0E7F               	movlw	127
  6045  004618  ECFF  F021         	call	_lcdplotpixel2
  6046                           
  6047                           ;LCDgraphic.c: 2014: lcdplotpixel2(126,31,0);
  6048  00461C  0E1F               	movlw	31
  6049  00461E  6E0F               	movwf	lcdplotpixel2@ry,c
  6050  004620  0E00               	movlw	0
  6051  004622  6E11               	movwf	lcdplotpixel2@blank+1,c
  6052  004624  0E00               	movlw	0
  6053  004626  6E10               	movwf	lcdplotpixel2@blank,c
  6054  004628  0E7E               	movlw	126
  6055  00462A  ECFF  F021         	call	_lcdplotpixel2
  6056                           
  6057                           ;LCDgraphic.c: 2015: lcdplotpixel2(126,33,0);
  6058  00462E  0E21               	movlw	33
  6059  004630  6E0F               	movwf	lcdplotpixel2@ry,c
  6060  004632  0E00               	movlw	0
  6061  004634  6E11               	movwf	lcdplotpixel2@blank+1,c
  6062  004636  0E00               	movlw	0
  6063  004638  6E10               	movwf	lcdplotpixel2@blank,c
  6064  00463A  0E7E               	movlw	126
  6065  00463C  ECFF  F021         	call	_lcdplotpixel2
  6066                           
  6067                           ;LCDgraphic.c: 2016: lcdplotpixel2(125,30,0);
  6068  004640  0E1E               	movlw	30
  6069  004642  6E0F               	movwf	lcdplotpixel2@ry,c
  6070  004644  0E00               	movlw	0
  6071  004646  6E11               	movwf	lcdplotpixel2@blank+1,c
  6072  004648  0E00               	movlw	0
  6073  00464A  6E10               	movwf	lcdplotpixel2@blank,c
  6074  00464C  0E7D               	movlw	125
  6075  00464E  ECFF  F021         	call	_lcdplotpixel2
  6076                           
  6077                           ;LCDgraphic.c: 2017: lcdplotpixel2(125,34,0);
  6078  004652  0E22               	movlw	34
  6079  004654  6E0F               	movwf	lcdplotpixel2@ry,c
  6080  004656  0E00               	movlw	0
  6081  004658  6E11               	movwf	lcdplotpixel2@blank+1,c
  6082  00465A  0E00               	movlw	0
  6083  00465C  6E10               	movwf	lcdplotpixel2@blank,c
  6084  00465E  0E7D               	movlw	125
  6085  004660  ECFF  F021         	call	_lcdplotpixel2
  6086                           
  6087                           ;LCDgraphic.c: 2018: lcdplotpixel2(124,29,0);
  6088  004664  0E1D               	movlw	29
  6089  004666  6E0F               	movwf	lcdplotpixel2@ry,c
  6090  004668  0E00               	movlw	0
  6091  00466A  6E11               	movwf	lcdplotpixel2@blank+1,c
  6092  00466C  0E00               	movlw	0
  6093  00466E  6E10               	movwf	lcdplotpixel2@blank,c
  6094  004670  0E7C               	movlw	124
  6095  004672  ECFF  F021         	call	_lcdplotpixel2
  6096                           
  6097                           ;LCDgraphic.c: 2019: lcdplotpixel2(124,35,0);
  6098  004676  0E23               	movlw	35
  6099  004678  6E0F               	movwf	lcdplotpixel2@ry,c
  6100  00467A  0E00               	movlw	0
  6101  00467C  6E11               	movwf	lcdplotpixel2@blank+1,c
  6102  00467E  0E00               	movlw	0
  6103  004680  6E10               	movwf	lcdplotpixel2@blank,c
  6104  004682  0E7C               	movlw	124
  6105  004684  ECFF  F021         	call	_lcdplotpixel2
  6106  004688  0012               	return		;funcret
  6107  00468A                     __end_of_xyaxis:
  6108                           	opt stack 0
  6109                           tblptru	equ	0xFF8
  6110                           postinc0	equ	0xFEE
  6111                           wreg	equ	0xFE8
  6112                           postdec1	equ	0xFE5
  6113                           fsr1h	equ	0xFE2
  6114                           fsr1l	equ	0xFE1
  6115                           postinc2	equ	0xFDE
  6116                           postdec2	equ	0xFDD
  6117                           fsr2h	equ	0xFDA
  6118                           fsr2l	equ	0xFD9
  6119                           status	equ	0xFD8
  6120                           
  6121 ;; *************** function _lcdplotpixel2 *****************
  6122 ;; Defined at:
  6123 ;;		line 1930 in file "LCDgraphic.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  rx              1    wreg     unsigned char 
  6126 ;;  ry              1   14[COMRAM] unsigned char 
  6127 ;;  blank           2   15[COMRAM] int 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  rx              1   36[COMRAM] unsigned char 
  6130 ;;  data            9   19[COMRAM] const unsigned char [9]
  6131 ;;  index           2   34[COMRAM] int 
  6132 ;;  value           2   31[COMRAM] int 
  6133 ;;  side            1   33[COMRAM] unsigned char 
  6134 ;;  pixel           1   30[COMRAM] unsigned char 
  6135 ;;  x               1   29[COMRAM] unsigned char 
  6136 ;;  page            1   28[COMRAM] unsigned char 
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  1    wreg      unsigned char 
  6139 ;; Registers used:
  6140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6146 ;;      Params:         3       0       0       0       0       0       0       0       0
  6147 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6148 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6149 ;;      Totals:        23       0       0       0       0       0       0       0       0
  6150 ;;Total ram usage:       23 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:    4
  6153 ;; This function calls:
  6154 ;;		_LCDcmd
  6155 ;;		_LCDpage
  6156 ;;		_LCDy
  6157 ;;		___awdiv
  6158 ;; This function is called by:
  6159 ;;		_main
  6160 ;;		_xyaxis
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text2
  6165  0043FE                     __ptext2:
  6166                           	opt stack 0
  6167  0043FE                     _lcdplotpixel2:
  6168                           	opt stack 25
  6169                           
  6170                           ;incstack = 0
  6171                           ;lcdplotpixel2@rx stored from wreg
  6172  0043FE  6E25               	movwf	lcdplotpixel2@rx,c
  6173                           
  6174                           ;LCDgraphic.c: 1932: char side,page,x,pixel;
  6175                           ;LCDgraphic.c: 1933: int index,value;
  6176                           ;LCDgraphic.c: 1934: const char data[]={0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,0
      +                          x00};
  6177  004400  0EA3               	movlw	low lcdplotpixel2@F4573
  6178  004402  6EF6               	movwf	tblptrl,c
  6179  004404                     	if	1	;There is more than 1 active tblptr byte
  6180  004404  0E7F               	movlw	high lcdplotpixel2@F4573
  6181  004406  6EF7               	movwf	tblptrh,c
  6182  004408                     	endif
  6183  004408                     	if	0	;There are less than 3 active tblptr bytes
  6184  004408                     	endif
  6185  004408  EE20  F014         	lfsr	2,lcdplotpixel2@data
  6186  00440C  0E08               	movlw	8
  6187  00440E                     u3800:
  6188  00440E  0009               	tblrd		*+
  6189  004410  CFF5 FFDE          	movff	tablat,postinc2
  6190  004414  06E8               	decf	wreg,f,c
  6191  004416  E2FB               	bc	u3800
  6192                           
  6193                           ;LCDgraphic.c: 1938: if(rx < 64)
  6194  004418  0E40               	movlw	64
  6195  00441A  6025               	cpfslt	lcdplotpixel2@rx,c
  6196  00441C  D004               	goto	l3731
  6197                           
  6198                           ;LCDgraphic.c: 1939: {
  6199                           ;LCDgraphic.c: 1940: x=rx;
  6200  00441E  C025  F01E         	movff	lcdplotpixel2@rx,lcdplotpixel2@x
  6201                           
  6202                           ;LCDgraphic.c: 1941: side=0;
  6203  004422  0E00               	movlw	0
  6204  004424  D004               	goto	L8
  6205  004426                     l3731:
  6206                           
  6207                           ;LCDgraphic.c: 1943: else
  6208                           ;LCDgraphic.c: 1944: {
  6209                           ;LCDgraphic.c: 1945: x=rx-64;
  6210  004426  5025               	movf	lcdplotpixel2@rx,w,c
  6211  004428  0FC0               	addlw	192
  6212  00442A  6E1E               	movwf	lcdplotpixel2@x,c
  6213                           
  6214                           ;LCDgraphic.c: 1946: side=1;
  6215  00442C  0E01               	movlw	1
  6216  00442E                     L8:
  6217  00442E  6E22               	movwf	lcdplotpixel2@side,c
  6218                           
  6219                           ;LCDgraphic.c: 1947: }
  6220                           ;LCDgraphic.c: 1950: page = (int)ry/8;
  6221  004430  C00F  F007         	movff	lcdplotpixel2@ry,___awdiv@dividend
  6222  004434  6A08               	clrf	___awdiv@dividend+1,c
  6223  004436  0E00               	movlw	0
  6224  004438  6E0A               	movwf	___awdiv@divisor+1,c
  6225  00443A  0E08               	movlw	8
  6226  00443C  6E09               	movwf	___awdiv@divisor,c
  6227  00443E  ECF4  F01D         	call	___awdiv	;wreg free
  6228  004442  5007               	movf	?___awdiv,w,c
  6229  004444  6E1D               	movwf	lcdplotpixel2@page,c
  6230                           
  6231                           ;LCDgraphic.c: 1952: LCDy(side,x);
  6232  004446  C01E  F005         	movff	lcdplotpixel2@x,LCDy@value
  6233  00444A  5022               	movf	lcdplotpixel2@side,w,c
  6234  00444C  ECEE  F01C         	call	_LCDy
  6235                           
  6236                           ;LCDgraphic.c: 1953: LCDpage(side,page);
  6237  004450  C01D  F005         	movff	lcdplotpixel2@page,LCDpage@page
  6238  004454  5022               	movf	lcdplotpixel2@side,w,c
  6239  004456  EC9A  F01C         	call	_LCDpage
  6240                           
  6241                           ;LCDgraphic.c: 1956: pixel = ry-8*(ry/8);
  6242  00445A  C00F  F007         	movff	lcdplotpixel2@ry,___awdiv@dividend
  6243  00445E  6A08               	clrf	___awdiv@dividend+1,c
  6244  004460  0E00               	movlw	0
  6245  004462  6E0A               	movwf	___awdiv@divisor+1,c
  6246  004464  0E08               	movlw	8
  6247  004466  6E09               	movwf	___awdiv@divisor,c
  6248  004468  ECF4  F01D         	call	___awdiv	;wreg free
  6249  00446C  90D8               	bcf	status,0,c
  6250  00446E  3607               	rlcf	?___awdiv,f,c
  6251  004470  90D8               	bcf	status,0,c
  6252  004472  3607               	rlcf	?___awdiv,f,c
  6253  004474  90D8               	bcf	status,0,c
  6254  004476  3407               	rlcf	?___awdiv,w,c
  6255  004478  0800               	sublw	0
  6256  00447A  240F               	addwf	lcdplotpixel2@ry,w,c
  6257  00447C  6E1F               	movwf	lcdplotpixel2@pixel,c
  6258                           
  6259                           ;LCDgraphic.c: 1957: index = rx+128*(ry/8);
  6260  00447E  C00F  F007         	movff	lcdplotpixel2@ry,___awdiv@dividend
  6261  004482  6A08               	clrf	___awdiv@dividend+1,c
  6262  004484  0E00               	movlw	0
  6263  004486  6E0A               	movwf	___awdiv@divisor+1,c
  6264  004488  0E08               	movlw	8
  6265  00448A  6E09               	movwf	___awdiv@divisor,c
  6266  00448C  ECF4  F01D         	call	___awdiv	;wreg free
  6267  004490  0E07               	movlw	7
  6268  004492                     u3825:
  6269  004492  90D8               	bcf	status,0,c
  6270  004494  3607               	rlcf	?___awdiv,f,c
  6271  004496  3608               	rlcf	?___awdiv+1,f,c
  6272  004498  2EE8               	decfsz	wreg,f,c
  6273  00449A  D7FB               	goto	u3825
  6274  00449C  5025               	movf	lcdplotpixel2@rx,w,c
  6275  00449E  2407               	addwf	?___awdiv,w,c
  6276  0044A0  6E23               	movwf	lcdplotpixel2@index,c
  6277  0044A2  0E00               	movlw	0
  6278  0044A4  2008               	addwfc	?___awdiv+1,w,c
  6279  0044A6  6E24               	movwf	lcdplotpixel2@index+1,c
  6280                           
  6281                           ;LCDgraphic.c: 1959: if(blank > 0)
  6282  0044A8  BE11               	btfsc	lcdplotpixel2@blank+1,7,c
  6283  0044AA  D018               	goto	l3749
  6284  0044AC  5011               	movf	lcdplotpixel2@blank+1,w,c
  6285  0044AE  E103               	bnz	u3830
  6286  0044B0  0410               	decf	lcdplotpixel2@blank,w,c
  6287  0044B2  A0D8               	btfss	status,0,c
  6288  0044B4  D013               	goto	l3749
  6289  0044B6                     u3830:
  6290                           
  6291                           ;LCDgraphic.c: 1960: {
  6292                           ;LCDgraphic.c: 1961: value = ~data[pixel] & pixels[index];
  6293  0044B6  0EFF               	movlw	low _pixels
  6294  0044B8  2423               	addwf	lcdplotpixel2@index,w,c
  6295  0044BA  6ED9               	movwf	fsr2l,c
  6296  0044BC  0E03               	movlw	high _pixels
  6297  0044BE  2024               	addwfc	lcdplotpixel2@index+1,w,c
  6298  0044C0  6EDA               	movwf	fsr2h,c
  6299  0044C2  50DF               	movf	indf2,w,c
  6300  0044C4  6E12               	movwf	??_lcdplotpixel2& (0+255),c
  6301  0044C6  501F               	movf	lcdplotpixel2@pixel,w,c
  6302  0044C8  0D01               	mullw	1
  6303  0044CA  0E14               	movlw	low lcdplotpixel2@data
  6304  0044CC  24F3               	addwf	prodl,w,c
  6305  0044CE  6ED9               	movwf	fsr2l,c
  6306  0044D0  0E00               	movlw	high lcdplotpixel2@data
  6307  0044D2  20F4               	addwfc	prodh,w,c
  6308  0044D4  6EDA               	movwf	fsr2h,c
  6309  0044D6  50DF               	movf	indf2,w,c
  6310  0044D8  0AFF               	xorlw	255
  6311  0044DA  D00B               	goto	L9
  6312  0044DC                     l3749:
  6313                           
  6314                           ;LCDgraphic.c: 1963: else if (blank < 0)
  6315  0044DC  AE11               	btfss	lcdplotpixel2@blank+1,7,c
  6316  0044DE  D00B               	goto	l3753
  6317                           
  6318                           ;LCDgraphic.c: 1964: {
  6319                           ;LCDgraphic.c: 1965: value = data[8] & pixels[index];
  6320  0044E0  0EFF               	movlw	low _pixels
  6321  0044E2  2423               	addwf	lcdplotpixel2@index,w,c
  6322  0044E4  6ED9               	movwf	fsr2l,c
  6323  0044E6  0E03               	movlw	high _pixels
  6324  0044E8  2024               	addwfc	lcdplotpixel2@index+1,w,c
  6325  0044EA  6EDA               	movwf	fsr2h,c
  6326  0044EC  50DF               	movf	indf2,w,c
  6327  0044EE  6E12               	movwf	??_lcdplotpixel2& (0+255),c
  6328  0044F0  501C               	movf	lcdplotpixel2@data+8,w,c
  6329  0044F2                     L9:
  6330  0044F2  1412               	andwf	??_lcdplotpixel2,w,c
  6331  0044F4  D012               	goto	L10
  6332  0044F6                     l3753:
  6333                           
  6334                           ;LCDgraphic.c: 1967: else
  6335                           ;LCDgraphic.c: 1968: {
  6336                           ;LCDgraphic.c: 1969: value = data[pixel] | pixels[index];
  6337  0044F6  0EFF               	movlw	low _pixels
  6338  0044F8  2423               	addwf	lcdplotpixel2@index,w,c
  6339  0044FA  6ED9               	movwf	fsr2l,c
  6340  0044FC  0E03               	movlw	high _pixels
  6341  0044FE  2024               	addwfc	lcdplotpixel2@index+1,w,c
  6342  004500  6EDA               	movwf	fsr2h,c
  6343  004502  50DF               	movf	indf2,w,c
  6344  004504  6E12               	movwf	??_lcdplotpixel2& (0+255),c
  6345  004506  501F               	movf	lcdplotpixel2@pixel,w,c
  6346  004508  0D01               	mullw	1
  6347  00450A  0E14               	movlw	low lcdplotpixel2@data
  6348  00450C  24F3               	addwf	prodl,w,c
  6349  00450E  6ED9               	movwf	fsr2l,c
  6350  004510  0E00               	movlw	high lcdplotpixel2@data
  6351  004512  20F4               	addwfc	prodh,w,c
  6352  004514  6EDA               	movwf	fsr2h,c
  6353  004516  50DF               	movf	indf2,w,c
  6354  004518  1012               	iorwf	??_lcdplotpixel2,w,c
  6355  00451A                     L10:
  6356  00451A  6E13               	movwf	(??_lcdplotpixel2+1)& (0+255),c
  6357  00451C  5013               	movf	??_lcdplotpixel2+1,w,c
  6358  00451E  6E20               	movwf	lcdplotpixel2@value,c
  6359  004520  6A21               	clrf	lcdplotpixel2@value+1,c
  6360                           
  6361                           ;LCDgraphic.c: 1970: }
  6362                           ;LCDgraphic.c: 1972: LATCbits.LATC2=1;
  6363  004522  848B               	bsf	3979,2,c	;volatile
  6364                           
  6365                           ;LCDgraphic.c: 1973: LATCbits.LATC1=0;
  6366  004524  928B               	bcf	3979,1,c	;volatile
  6367                           
  6368                           ;LCDgraphic.c: 1975: LCDcmd(value);
  6369  004526  5020               	movf	lcdplotpixel2@value,w,c
  6370  004528  EC55  F01B         	call	_LCDcmd
  6371                           
  6372                           ;LCDgraphic.c: 1977: pixels[index]=value;
  6373  00452C  0EFF               	movlw	low _pixels
  6374  00452E  2423               	addwf	lcdplotpixel2@index,w,c
  6375  004530  6ED9               	movwf	fsr2l,c
  6376  004532  0E03               	movlw	high _pixels
  6377  004534  2024               	addwfc	lcdplotpixel2@index+1,w,c
  6378  004536  6EDA               	movwf	fsr2h,c
  6379  004538  C020  FFDF         	movff	lcdplotpixel2@value,indf2
  6380  00453C  0012               	return	
  6381  00453E                     __end_of_lcdplotpixel2:
  6382                           	opt stack 0
  6383                           tblptru	equ	0xFF8
  6384                           tblptrh	equ	0xFF7
  6385                           tblptrl	equ	0xFF6
  6386                           tablat	equ	0xFF5
  6387                           prodh	equ	0xFF4
  6388                           prodl	equ	0xFF3
  6389                           postinc0	equ	0xFEE
  6390                           wreg	equ	0xFE8
  6391                           postdec1	equ	0xFE5
  6392                           fsr1h	equ	0xFE2
  6393                           fsr1l	equ	0xFE1
  6394                           indf2	equ	0xFDF
  6395                           postinc2	equ	0xFDE
  6396                           postdec2	equ	0xFDD
  6397                           fsr2h	equ	0xFDA
  6398                           fsr2l	equ	0xFD9
  6399                           status	equ	0xFD8
  6400                           
  6401 ;; *************** function _strcat *****************
  6402 ;; Defined at:
  6403 ;;		line 8 in file "/opt/microchip/xc8/v1.37/sources/common/strcat.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  to              2    0[COMRAM] PTR unsigned char 
  6406 ;;		 -> main@buf_384(40), 
  6407 ;;  from            2    2[COMRAM] PTR const unsigned char 
  6408 ;;		 -> main@buf2(17), 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  cp              2    4[COMRAM] PTR unsigned char 
  6411 ;;		 -> main@buf_384(40), 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  2    0[COMRAM] PTR unsigned char 
  6414 ;; Registers used:
  6415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6421 ;;      Params:         4       0       0       0       0       0       0       0       0
  6422 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6424 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6425 ;;Total ram usage:        6 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_main
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text3
  6435  0038A8                     __ptext3:
  6436                           	opt stack 0
  6437  0038A8                     _strcat:
  6438                           	opt stack 30
  6439                           
  6440                           ;incstack = 0
  6441  0038A8  C001  F005         	movff	strcat@to,strcat@cp
  6442  0038AC  C002  F006         	movff	strcat@to+1,strcat@cp+1
  6443  0038B0  D002               	goto	l4751
  6444  0038B2                     l4749:
  6445  0038B2  4A05               	infsnz	strcat@cp,f,c
  6446  0038B4  2A06               	incf	strcat@cp+1,f,c
  6447  0038B6                     l4751:
  6448  0038B6  C005  FFD9         	movff	strcat@cp,fsr2l
  6449  0038BA  C006  FFDA         	movff	strcat@cp+1,fsr2h
  6450  0038BE  50DF               	movf	indf2,w,c
  6451  0038C0  B4D8               	btfsc	status,2,c
  6452  0038C2  D005               	goto	l4755
  6453  0038C4  D7F6               	goto	l4749
  6454  0038C6                     l4753:
  6455  0038C6  4A05               	infsnz	strcat@cp,f,c
  6456  0038C8  2A06               	incf	strcat@cp+1,f,c
  6457  0038CA  4A03               	infsnz	strcat@from,f,c
  6458  0038CC  2A04               	incf	strcat@from+1,f,c
  6459  0038CE                     l4755:
  6460  0038CE  C003  FFD9         	movff	strcat@from,fsr2l
  6461  0038D2  C004  FFDA         	movff	strcat@from+1,fsr2h
  6462  0038D6  C005  FFE1         	movff	strcat@cp,fsr1l
  6463  0038DA  C006  FFE2         	movff	strcat@cp+1,fsr1h
  6464  0038DE  CFDF FFE7          	movff	indf2,indf1
  6465  0038E2  50E7               	movf	indf1,w,c
  6466  0038E4  B4D8               	btfsc	status,2,c
  6467  0038E6  0012               	return	
  6468  0038E8  D7EE               	goto	l4753
  6469  0038EA                     __end_of_strcat:
  6470                           	opt stack 0
  6471                           tblptru	equ	0xFF8
  6472                           tblptrh	equ	0xFF7
  6473                           tblptrl	equ	0xFF6
  6474                           tablat	equ	0xFF5
  6475                           prodh	equ	0xFF4
  6476                           prodl	equ	0xFF3
  6477                           postinc0	equ	0xFEE
  6478                           wreg	equ	0xFE8
  6479                           indf1	equ	0xFE7
  6480                           postdec1	equ	0xFE5
  6481                           fsr1h	equ	0xFE2
  6482                           fsr1l	equ	0xFE1
  6483                           indf2	equ	0xFDF
  6484                           postinc2	equ	0xFDE
  6485                           postdec2	equ	0xFDD
  6486                           fsr2h	equ	0xFDA
  6487                           fsr2l	equ	0xFD9
  6488                           status	equ	0xFD8
  6489                           
  6490 ;; *************** function _sprintf *****************
  6491 ;; Defined at:
  6492 ;;		line 492 in file "/opt/microchip/xc8/v1.37/sources/common/doprnt.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  sp              2   76[COMRAM] PTR unsigned char 
  6495 ;;		 -> main@buf2(17), main@buf_384(40), main@str(15), main@buf_371(10), 
  6496 ;;		 -> main@buf(10), 
  6497 ;;  f               2   78[COMRAM] PTR const unsigned char 
  6498 ;;		 -> STR_12(9), STR_11(9), STR_10(8), STR_9(10), 
  6499 ;;		 -> STR_8(10), STR_7(3), STR_6(6), STR_5(6), 
  6500 ;;		 -> STR_4(7), STR_3(7), STR_2(7), STR_1(6), 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  tmpval          4   13[BANK0 ] struct .
  6503 ;;  val             4    7[BANK0 ] unsigned long 
  6504 ;;  fval            3   19[BANK0 ] unsigned long 
  6505 ;;  cp              3    0        PTR const unsigned char 
  6506 ;;  prec            2   22[BANK0 ] int 
  6507 ;;  exp             2   17[BANK0 ] int 
  6508 ;;  width           2   11[BANK0 ] int 
  6509 ;;  flag            2    5[BANK0 ] unsigned short 
  6510 ;;  ap              2    3[BANK0 ] PTR void [1]
  6511 ;;		 -> ?_sprintf(2), 
  6512 ;;  len             2    0        unsigned int 
  6513 ;;  c               1   24[BANK0 ] char 
  6514 ;;  d               1    0        unsigned char 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  2   76[COMRAM] int 
  6517 ;; Registers used:
  6518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6524 ;;      Params:         7       0       0       0       0       0       0       0       0
  6525 ;;      Locals:         0      25       0       0       0       0       0       0       0
  6526 ;;      Temps:          6       0       0       0       0       0       0       0       0
  6527 ;;      Totals:        13      25       0       0       0       0       0       0       0
  6528 ;;Total ram usage:       38 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:    3
  6531 ;; This function calls:
  6532 ;;		___awdiv
  6533 ;;		___ftadd
  6534 ;;		___ftge
  6535 ;;		___ftmul
  6536 ;;		___ftneg
  6537 ;;		___ftsub
  6538 ;;		___fttol
  6539 ;;		___lldiv
  6540 ;;		___llmod
  6541 ;;		___lltoft
  6542 ;;		___wmul
  6543 ;;		__div_to_l_
  6544 ;;		__tdiv_to_l_
  6545 ;;		_fround
  6546 ;;		_isdigit
  6547 ;;		_scale
  6548 ;; This function is called by:
  6549 ;;		_main
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text4
  6554  0058B0                     __ptext4:
  6555                           	opt stack 0
  6556  0058B0                     _sprintf:
  6557                           	opt stack 27
  6558                           
  6559                           ;doprnt.c: 494: va_list ap;
  6560                           ;doprnt.c: 499: signed char c;
  6561                           ;doprnt.c: 501: int width;
  6562                           ;doprnt.c: 504: int prec;
  6563                           ;doprnt.c: 508: unsigned short flag;
  6564                           ;doprnt.c: 515: char d;
  6565                           ;doprnt.c: 516: double fval;
  6566                           ;doprnt.c: 517: int exp;
  6567                           ;doprnt.c: 523: union {
  6568                           ;doprnt.c: 524: unsigned long vd;
  6569                           ;doprnt.c: 525: double integ;
  6570                           ;doprnt.c: 526: } tmpval;
  6571                           ;doprnt.c: 528: unsigned long val;
  6572                           ;doprnt.c: 529: unsigned len;
  6573                           ;doprnt.c: 530: const char * cp;
  6574                           ;doprnt.c: 533: *ap = __va_start();
  6575                           
  6576                           ;incstack = 0
  6577  0058B0  0E51               	movlw	low (?_sprintf+4)
  6578  0058B2  0100               	movlb	0	; () banked
  6579  0058B4  6F63               	movwf	sprintf@ap& (0+255),b
  6580  0058B6  0E00               	movlw	high (?_sprintf+4)
  6581  0058B8  0100               	movlb	0	; () banked
  6582  0058BA  6F64               	movwf	(sprintf@ap+1)& (0+255),b
  6583                           
  6584                           ;doprnt.c: 536: while(c = *f++) {
  6585  0058BC  EFAB  F031         	goto	l4495
  6586  0058C0                     l4213:
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;doprnt.c: 538: if(c != '%')
  6590  0058C0  0E25               	movlw	37
  6591  0058C2  0100               	movlb	0	; () banked
  6592  0058C4  1978               	xorwf	sprintf@c& (0+255),w,b
  6593  0058C6  B4D8               	btfsc	status,2,c
  6594  0058C8  D00A               	goto	l4219
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;doprnt.c: 540: {
  6598                           ;doprnt.c: 541: ((*sp++ = (c)));
  6599  0058CA  C04D  FFD9         	movff	sprintf@sp,fsr2l
  6600  0058CE  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  6601  0058D2  C078  FFDF         	movff	sprintf@c,indf2
  6602                           
  6603                           ; BSR set to: 0
  6604  0058D6  4A4D               	infsnz	sprintf@sp,f,c
  6605  0058D8  2A4E               	incf	sprintf@sp+1,f,c
  6606                           
  6607                           ;doprnt.c: 542: continue;
  6608  0058DA  EFAB  F031         	goto	l4495
  6609  0058DE                     l4219:
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;doprnt.c: 543: }
  6613                           ;doprnt.c: 546: width = 0;
  6614  0058DE  0E00               	movlw	0
  6615  0058E0  0100               	movlb	0	; () banked
  6616  0058E2  6F6C               	movwf	(sprintf@width+1)& (0+255),b
  6617  0058E4  0E00               	movlw	0
  6618  0058E6  6F6B               	movwf	sprintf@width& (0+255),b
  6619                           
  6620                           ;doprnt.c: 548: flag = 0;
  6621  0058E8  0E00               	movlw	0
  6622  0058EA  0100               	movlb	0	; () banked
  6623  0058EC  6F66               	movwf	(sprintf@flag+1)& (0+255),b
  6624  0058EE  0E00               	movlw	0
  6625  0058F0  6F65               	movwf	sprintf@flag& (0+255),b
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6629  0058F2  C04F  FFF6         	movff	sprintf@f,tblptrl
  6630  0058F6  C050  FFF7         	movff	sprintf@f+1,tblptrh
  6631  0058FA                     	if	0	;tblptru may be non-zero
  6632  0058FA                     	endif
  6633  0058FA                     	if	0	;tblptru may be non-zero
  6634  0058FA                     	endif
  6635  0058FA  0008               	tblrd		*
  6636  0058FC  50F5               	movf	tablat,w,c
  6637  0058FE  EC6A  F01B         	call	_isdigit
  6638  005902  A0D8               	btfss	status,0,c
  6639  005904  D035               	goto	l4233
  6640                           
  6641                           ;doprnt.c: 598: width = 0;
  6642  005906  0E00               	movlw	0
  6643  005908  0100               	movlb	0	; () banked
  6644  00590A  6F6C               	movwf	(sprintf@width+1)& (0+255),b
  6645  00590C  0E00               	movlw	0
  6646  00590E  6F6B               	movwf	sprintf@width& (0+255),b
  6647  005910                     l4225:
  6648                           
  6649                           ;doprnt.c: 600: width *= 10;
  6650  005910  C06B  F00F         	movff	sprintf@width,___wmul@multiplier
  6651  005914  C06C  F010         	movff	sprintf@width+1,___wmul@multiplier+1
  6652  005918  0E00               	movlw	0
  6653  00591A  6E12               	movwf	___wmul@multiplicand+1,c
  6654  00591C  0E0A               	movlw	10
  6655  00591E  6E11               	movwf	___wmul@multiplicand,c
  6656  005920  ECBF  F01B         	call	___wmul	;wreg free
  6657  005924  C00F  F06B         	movff	?___wmul,sprintf@width
  6658  005928  C010  F06C         	movff	?___wmul+1,sprintf@width+1
  6659                           
  6660                           ;doprnt.c: 601: width += *f++ - '0';
  6661  00592C  0ED0               	movlw	208
  6662  00592E  6E54               	movwf	??_sprintf& (0+255),c
  6663  005930  0EFF               	movlw	255
  6664  005932  6E55               	movwf	(??_sprintf+1)& (0+255),c
  6665  005934  C04F  FFF6         	movff	sprintf@f,tblptrl
  6666  005938  C050  FFF7         	movff	sprintf@f+1,tblptrh
  6667  00593C                     	if	0	;tblptru may be non-zero
  6668  00593C                     	endif
  6669  00593C                     	if	0	;tblptru may be non-zero
  6670  00593C                     	endif
  6671  00593C  0008               	tblrd		*
  6672  00593E  50F5               	movf	tablat,w,c
  6673  005940  6E56               	movwf	(??_sprintf+2)& (0+255),c
  6674  005942  6A57               	clrf	(??_sprintf+3)& (0+255),c
  6675  005944  5054               	movf	??_sprintf,w,c
  6676  005946  2656               	addwf	??_sprintf+2,f,c
  6677  005948  5055               	movf	??_sprintf+1,w,c
  6678  00594A  2257               	addwfc	??_sprintf+3,f,c
  6679  00594C  5056               	movf	??_sprintf+2,w,c
  6680  00594E  0100               	movlb	0	; () banked
  6681  005950  276B               	addwf	sprintf@width& (0+255),f,b
  6682  005952  5057               	movf	??_sprintf+3,w,c
  6683  005954  0100               	movlb	0	; () banked
  6684  005956  236C               	addwfc	(sprintf@width+1)& (0+255),f,b
  6685                           
  6686                           ; BSR set to: 0
  6687  005958  4A4F               	infsnz	sprintf@f,f,c
  6688  00595A  2A50               	incf	sprintf@f+1,f,c
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6692  00595C  C04F  FFF6         	movff	sprintf@f,tblptrl
  6693  005960  C050  FFF7         	movff	sprintf@f+1,tblptrh
  6694  005964                     	if	0	;tblptru may be non-zero
  6695  005964                     	endif
  6696  005964                     	if	0	;tblptru may be non-zero
  6697  005964                     	endif
  6698  005964  0008               	tblrd		*
  6699  005966  50F5               	movf	tablat,w,c
  6700  005968  EC6A  F01B         	call	_isdigit
  6701  00596C  B0D8               	btfsc	status,0,c
  6702  00596E  D7D0               	goto	l4225
  6703  005970                     l4233:
  6704                           
  6705                           ;doprnt.c: 608: }
  6706                           ;doprnt.c: 611: if(*f == '.') {
  6707  005970  C04F  FFF6         	movff	sprintf@f,tblptrl
  6708  005974  C050  FFF7         	movff	sprintf@f+1,tblptrh
  6709  005978                     	if	0	;tblptru may be non-zero
  6710  005978                     	endif
  6711  005978                     	if	0	;tblptru may be non-zero
  6712  005978                     	endif
  6713  005978  0008               	tblrd		*
  6714  00597A  50F5               	movf	tablat,w,c
  6715  00597C  0A2E               	xorlw	46
  6716  00597E  A4D8               	btfss	status,2,c
  6717  005980  D032               	goto	l4245
  6718                           
  6719                           ;doprnt.c: 612: flag |= 0x4000;
  6720  005982  0100               	movlb	0	; () banked
  6721  005984  8D66               	bsf	(sprintf@flag+1)& (0+255),6,b
  6722                           
  6723                           ;doprnt.c: 613: f++;
  6724  005986  4A4F               	infsnz	sprintf@f,f,c
  6725  005988  2A50               	incf	sprintf@f+1,f,c
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;doprnt.c: 620: {
  6729                           ;doprnt.c: 621: prec = 0;
  6730  00598A  0E00               	movlw	0
  6731  00598C  0100               	movlb	0	; () banked
  6732  00598E  6F77               	movwf	(sprintf@prec+1)& (0+255),b
  6733  005990  0E00               	movlw	0
  6734  005992  6F76               	movwf	sprintf@prec& (0+255),b
  6735                           
  6736                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6737  005994  D01D               	goto	l4243
  6738  005996                     l4239:
  6739                           
  6740                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6741  005996  C076  F00F         	movff	sprintf@prec,___wmul@multiplier
  6742  00599A  C077  F010         	movff	sprintf@prec+1,___wmul@multiplier+1
  6743  00599E  0E00               	movlw	0
  6744  0059A0  6E12               	movwf	___wmul@multiplicand+1,c
  6745  0059A2  0E0A               	movlw	10
  6746  0059A4  6E11               	movwf	___wmul@multiplicand,c
  6747  0059A6  ECBF  F01B         	call	___wmul	;wreg free
  6748  0059AA  C04F  FFF6         	movff	sprintf@f,tblptrl
  6749  0059AE  C050  FFF7         	movff	sprintf@f+1,tblptrh
  6750  0059B2                     	if	0	;tblptru may be non-zero
  6751  0059B2                     	endif
  6752  0059B2                     	if	0	;tblptru may be non-zero
  6753  0059B2                     	endif
  6754  0059B2  0008               	tblrd		*
  6755  0059B4  50F5               	movf	tablat,w,c
  6756  0059B6  260F               	addwf	?___wmul,f,c
  6757  0059B8  0E00               	movlw	0
  6758  0059BA  2210               	addwfc	?___wmul+1,f,c
  6759  0059BC  0ED0               	movlw	208
  6760  0059BE  240F               	addwf	?___wmul,w,c
  6761  0059C0  0100               	movlb	0	; () banked
  6762  0059C2  6F76               	movwf	sprintf@prec& (0+255),b
  6763  0059C4  0EFF               	movlw	255
  6764  0059C6  2010               	addwfc	?___wmul+1,w,c
  6765  0059C8  0100               	movlb	0	; () banked
  6766  0059CA  6F77               	movwf	(sprintf@prec+1)& (0+255),b
  6767                           
  6768                           ; BSR set to: 0
  6769  0059CC  4A4F               	infsnz	sprintf@f,f,c
  6770  0059CE  2A50               	incf	sprintf@f+1,f,c
  6771  0059D0                     l4243:
  6772                           
  6773                           ; BSR set to: 0
  6774  0059D0  C04F  FFF6         	movff	sprintf@f,tblptrl
  6775  0059D4  C050  FFF7         	movff	sprintf@f+1,tblptrh
  6776  0059D8                     	if	0	;tblptru may be non-zero
  6777  0059D8                     	endif
  6778  0059D8                     	if	0	;tblptru may be non-zero
  6779  0059D8                     	endif
  6780  0059D8  0008               	tblrd		*
  6781  0059DA  50F5               	movf	tablat,w,c
  6782  0059DC  EC6A  F01B         	call	_isdigit
  6783  0059E0  A0D8               	btfss	status,0,c
  6784  0059E2  D010               	goto	l4255
  6785  0059E4  D7D8               	goto	l4239
  6786  0059E6                     l4245:
  6787                           
  6788                           ;doprnt.c: 626: prec = 0;
  6789  0059E6  0E00               	movlw	0
  6790  0059E8  0100               	movlb	0	; () banked
  6791  0059EA  6F77               	movwf	(sprintf@prec+1)& (0+255),b
  6792  0059EC  0E00               	movlw	0
  6793  0059EE  6F76               	movwf	sprintf@prec& (0+255),b
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;doprnt.c: 628: flag |= 0x1000;
  6797  0059F0  0100               	movlb	0	; () banked
  6798  0059F2  8966               	bsf	(sprintf@flag+1)& (0+255),4,b
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;doprnt.c: 630: }
  6802                           ;doprnt.c: 635: switch(c = *f++) {
  6803  0059F4  D007               	goto	l4255
  6804  0059F6                     l4249:
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;doprnt.c: 663: flag |= 0x400;
  6808  0059F6  0100               	movlb	0	; () banked
  6809  0059F8  8566               	bsf	(sprintf@flag+1)& (0+255),2,b
  6810                           
  6811                           ;doprnt.c: 664: break;
  6812  0059FA  D01B               	goto	l4257
  6813  0059FC                     l4251:
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;doprnt.c: 818: flag |= 0xC0;
  6817  0059FC  0EC0               	movlw	192
  6818  0059FE  0100               	movlb	0	; () banked
  6819  005A00  1365               	iorwf	sprintf@flag& (0+255),f,b
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;doprnt.c: 822: }
  6823                           
  6824                           ;doprnt.c: 819: break;
  6825  005A02  D017               	goto	l4257
  6826  005A04                     l4255:
  6827  005A04  C04F  FFF6         	movff	sprintf@f,tblptrl
  6828  005A08  C050  FFF7         	movff	sprintf@f+1,tblptrh
  6829  005A0C  4A4F               	infsnz	sprintf@f,f,c
  6830  005A0E  2A50               	incf	sprintf@f+1,f,c
  6831  005A10                     	if	0	;tblptru may be non-zero
  6832  005A10                     	endif
  6833  005A10                     	if	0	;tblptru may be non-zero
  6834  005A10                     	endif
  6835  005A10  0008               	tblrd		*
  6836  005A12  CFF5 F078          	movff	tablat,sprintf@c
  6837  005A16  0100               	movlb	0	; () banked
  6838  005A18  5178               	movf	sprintf@c& (0+255),w,b
  6839                           
  6840                           ; Switch size 1, requested type "space"
  6841                           ; Number of cases is 3, Range of values is 0 to 117
  6842                           ; switch strategies available:
  6843                           ; Name         Instructions Cycles
  6844                           ; simple_byte           10     6 (average)
  6845                           ;	Chosen strategy is simple_byte
  6846  005A1A  0A00               	xorlw	0	; case 0
  6847  005A1C  B4D8               	btfsc	status,2,c
  6848  005A1E  EFB9  F031         	goto	l4497
  6849  005A22  0A66               	xorlw	102	; case 102
  6850  005A24  B4D8               	btfsc	status,2,c
  6851  005A26  D7E7               	goto	l4249
  6852  005A28  0A13               	xorlw	19	; case 117
  6853  005A2A  B4D8               	btfsc	status,2,c
  6854  005A2C  D7E7               	goto	l4251
  6855  005A2E  EFAB  F031         	goto	l4495
  6856  005A32                     l4257:
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;doprnt.c: 825: if(flag & (0x700)) {
  6860  005A32  0E07               	movlw	7
  6861  005A34  0100               	movlb	0	; () banked
  6862  005A36  1566               	andwf	(sprintf@flag+1)& (0+255),w,b
  6863  005A38  B4D8               	btfsc	status,2,c
  6864  005A3A  D34A               	goto	l4421
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;doprnt.c: 827: if(flag & 0x1000)
  6868  005A3C  0100               	movlb	0	; () banked
  6869  005A3E  A966               	btfss	(sprintf@flag+1)& (0+255),4,b
  6870  005A40  D005               	goto	l4263
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;doprnt.c: 829: prec = 6;
  6874  005A42  0E00               	movlw	0
  6875  005A44  0100               	movlb	0	; () banked
  6876  005A46  6F77               	movwf	(sprintf@prec+1)& (0+255),b
  6877  005A48  0E06               	movlw	6
  6878  005A4A  6F76               	movwf	sprintf@prec& (0+255),b
  6879  005A4C                     l4263:
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6883  005A4C  C063  FFD9         	movff	sprintf@ap,fsr2l
  6884  005A50  C064  FFDA         	movff	sprintf@ap+1,fsr2h
  6885  005A54  CFDE F073          	movff	postinc2,sprintf@fval
  6886  005A58  CFDE F074          	movff	postinc2,sprintf@fval+1
  6887  005A5C  CFDD F075          	movff	postdec2,sprintf@fval+2
  6888                           
  6889                           ; BSR set to: 0
  6890  005A60  0E03               	movlw	3
  6891  005A62  0100               	movlb	0	; () banked
  6892  005A64  2763               	addwf	sprintf@ap& (0+255),f,b
  6893  005A66  0E00               	movlw	0
  6894  005A68  2364               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;doprnt.c: 831: if(fval < 0.0) {
  6898  005A6A  0100               	movlb	0	; () banked
  6899  005A6C  AF75               	btfss	(sprintf@fval+2)& (0+255),7,b
  6900  005A6E  D011               	goto	l4273
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;doprnt.c: 832: fval = -fval;
  6904  005A70  C073  F001         	movff	sprintf@fval,___ftneg@f1
  6905  005A74  C074  F002         	movff	sprintf@fval+1,___ftneg@f1+1
  6906  005A78  C075  F003         	movff	sprintf@fval+2,___ftneg@f1+2
  6907  005A7C  ECAD  F01B         	call	___ftneg	;wreg free
  6908  005A80  C001  F073         	movff	?___ftneg,sprintf@fval
  6909  005A84  C002  F074         	movff	?___ftneg+1,sprintf@fval+1
  6910  005A88  C003  F075         	movff	?___ftneg+2,sprintf@fval+2
  6911                           
  6912                           ;doprnt.c: 833: flag |= 0x03;
  6913  005A8C  0E03               	movlw	3
  6914  005A8E  0100               	movlb	0	; () banked
  6915  005A90  1365               	iorwf	sprintf@flag& (0+255),f,b
  6916  005A92                     l4273:
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;doprnt.c: 834: }
  6920                           ;doprnt.c: 835: exp = 0;
  6921  005A92  0E00               	movlw	0
  6922  005A94  0100               	movlb	0	; () banked
  6923  005A96  6F72               	movwf	(sprintf@exp+1)& (0+255),b
  6924  005A98  0E00               	movlw	0
  6925  005A9A  6F71               	movwf	sprintf@exp& (0+255),b
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;doprnt.c: 836: if( fval!=0) {
  6929  005A9C  0100               	movlb	0	; () banked
  6930  005A9E  5173               	movf	sprintf@fval& (0+255),w,b
  6931  005AA0  0100               	movlb	0	; () banked
  6932  005AA2  1174               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6933  005AA4  0100               	movlb	0	; () banked
  6934  005AA6  1175               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6935  005AA8  B4D8               	btfsc	status,2,c
  6936  005AAA  D08B               	goto	l4301
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  6940  005AAC  0E82               	movlw	130
  6941  005AAE  6E54               	movwf	??_sprintf& (0+255),c
  6942  005AB0  0EFF               	movlw	255
  6943  005AB2  6E55               	movwf	(??_sprintf+1)& (0+255),c
  6944  005AB4  C073  F056         	movff	sprintf@fval,??_sprintf+2
  6945  005AB8  C074  F057         	movff	sprintf@fval+1,??_sprintf+3
  6946  005ABC  C075  F058         	movff	sprintf@fval+2,??_sprintf+4
  6947  005AC0  C076  F059         	movff	sprintf@fval+3,??_sprintf+5
  6948  005AC4  0E10               	movlw	16
  6949  005AC6  D005               	goto	u4590
  6950  005AC8                     u4595:
  6951  005AC8  90D8               	bcf	status,0,c
  6952  005ACA  3259               	rrcf	??_sprintf+5,f,c
  6953  005ACC  3258               	rrcf	??_sprintf+4,f,c
  6954  005ACE  3257               	rrcf	??_sprintf+3,f,c
  6955  005AD0  3256               	rrcf	??_sprintf+2,f,c
  6956  005AD2                     u4590:
  6957  005AD2  2EE8               	decfsz	wreg,f,c
  6958  005AD4  D7F9               	goto	u4595
  6959  005AD6  5056               	movf	??_sprintf+2,w,c
  6960  005AD8  2454               	addwf	??_sprintf,w,c
  6961  005ADA  0100               	movlb	0	; () banked
  6962  005ADC  6F71               	movwf	sprintf@exp& (0+255),b
  6963  005ADE  0E00               	movlw	0
  6964  005AE0  2055               	addwfc	??_sprintf+1,w,c
  6965  005AE2  0100               	movlb	0	; () banked
  6966  005AE4  6F72               	movwf	(sprintf@exp+1)& (0+255),b
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;doprnt.c: 838: exp--;
  6970  005AE6  0100               	movlb	0	; () banked
  6971  005AE8  0771               	decf	sprintf@exp& (0+255),f,b
  6972  005AEA  A0D8               	btfss	status,0,c
  6973  005AEC  0772               	decf	(sprintf@exp+1)& (0+255),f,b
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;doprnt.c: 839: exp *= 3;
  6977  005AEE  C071  F00F         	movff	sprintf@exp,___wmul@multiplier
  6978  005AF2  C072  F010         	movff	sprintf@exp+1,___wmul@multiplier+1
  6979  005AF6  0E00               	movlw	0
  6980  005AF8  6E12               	movwf	___wmul@multiplicand+1,c
  6981  005AFA  0E03               	movlw	3
  6982  005AFC  6E11               	movwf	___wmul@multiplicand,c
  6983  005AFE  ECBF  F01B         	call	___wmul	;wreg free
  6984  005B02  C00F  F071         	movff	?___wmul,sprintf@exp
  6985  005B06  C010  F072         	movff	?___wmul+1,sprintf@exp+1
  6986                           
  6987                           ;doprnt.c: 840: exp /= 10;
  6988  005B0A  C071  F007         	movff	sprintf@exp,___awdiv@dividend
  6989  005B0E  C072  F008         	movff	sprintf@exp+1,___awdiv@dividend+1
  6990  005B12  0E00               	movlw	0
  6991  005B14  6E0A               	movwf	___awdiv@divisor+1,c
  6992  005B16  0E0A               	movlw	10
  6993  005B18  6E09               	movwf	___awdiv@divisor,c
  6994  005B1A  ECF4  F01D         	call	___awdiv	;wreg free
  6995  005B1E  C007  F071         	movff	?___awdiv,sprintf@exp
  6996  005B22  C008  F072         	movff	?___awdiv+1,sprintf@exp+1
  6997                           
  6998                           ;doprnt.c: 841: if(exp < 0)
  6999  005B26  0100               	movlb	0	; () banked
  7000  005B28  AF72               	btfss	(sprintf@exp+1)& (0+255),7,b
  7001  005B2A  D004               	goto	l4289
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;doprnt.c: 842: exp--;
  7005  005B2C  0100               	movlb	0	; () banked
  7006  005B2E  0771               	decf	sprintf@exp& (0+255),f,b
  7007  005B30  A0D8               	btfss	status,0,c
  7008  005B32  0772               	decf	(sprintf@exp+1)& (0+255),f,b
  7009  005B34                     l4289:
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7013  005B34  0100               	movlb	0	; () banked
  7014  005B36  5171               	movf	sprintf@exp& (0+255),w,b
  7015  005B38  0800               	sublw	0
  7016  005B3A  EC3E  F025         	call	_scale
  7017  005B3E  C028  F06D         	movff	?_scale,sprintf@tmpval
  7018  005B42  C029  F06E         	movff	?_scale+1,sprintf@tmpval+1
  7019  005B46  C02A  F06F         	movff	?_scale+2,sprintf@tmpval+2
  7020                           
  7021                           ;doprnt.c: 847: tmpval.integ *= fval;
  7022  005B4A  C06D  F019         	movff	sprintf@tmpval,___ftmul@f1
  7023  005B4E  C06E  F01A         	movff	sprintf@tmpval+1,___ftmul@f1+1
  7024  005B52  C06F  F01B         	movff	sprintf@tmpval+2,___ftmul@f1+2
  7025  005B56  C073  F01C         	movff	sprintf@fval,___ftmul@f2
  7026  005B5A  C074  F01D         	movff	sprintf@fval+1,___ftmul@f2+1
  7027  005B5E  C075  F01E         	movff	sprintf@fval+2,___ftmul@f2+2
  7028  005B62  EC58  F020         	call	___ftmul	;wreg free
  7029  005B66  C019  F06D         	movff	?___ftmul,sprintf@tmpval
  7030  005B6A  C01A  F06E         	movff	?___ftmul+1,sprintf@tmpval+1
  7031  005B6E  C01B  F06F         	movff	?___ftmul+2,sprintf@tmpval+2
  7032                           
  7033                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7034  005B72  C06D  F001         	movff	sprintf@tmpval,___ftge@ff1
  7035  005B76  C06E  F002         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7036  005B7A  C06F  F003         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7037  005B7E  0E00               	movlw	0
  7038  005B80  6E04               	movwf	___ftge@ff2,c
  7039  005B82  0E80               	movlw	128
  7040  005B84  6E05               	movwf	___ftge@ff2+1,c
  7041  005B86  0E3F               	movlw	63
  7042  005B88  6E06               	movwf	___ftge@ff2+2,c
  7043  005B8A  EC7E  F01E         	call	___ftge	;wreg free
  7044  005B8E  B0D8               	btfsc	status,0,c
  7045  005B90  D005               	goto	l4297
  7046                           
  7047                           ;doprnt.c: 849: exp--;
  7048  005B92  0100               	movlb	0	; () banked
  7049  005B94  0771               	decf	sprintf@exp& (0+255),f,b
  7050  005B96  A0D8               	btfss	status,0,c
  7051  005B98  0772               	decf	(sprintf@exp+1)& (0+255),f,b
  7052  005B9A  D013               	goto	l4301
  7053  005B9C                     l4297:
  7054                           
  7055                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7056  005B9C  C06D  F001         	movff	sprintf@tmpval,___ftge@ff1
  7057  005BA0  C06E  F002         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7058  005BA4  C06F  F003         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7059  005BA8  0E00               	movlw	0
  7060  005BAA  6E04               	movwf	___ftge@ff2,c
  7061  005BAC  0E20               	movlw	32
  7062  005BAE  6E05               	movwf	___ftge@ff2+1,c
  7063  005BB0  0E41               	movlw	65
  7064  005BB2  6E06               	movwf	___ftge@ff2+2,c
  7065  005BB4  EC7E  F01E         	call	___ftge	;wreg free
  7066  005BB8  A0D8               	btfss	status,0,c
  7067  005BBA  D003               	goto	l4301
  7068                           
  7069                           ;doprnt.c: 851: exp++;
  7070  005BBC  0100               	movlb	0	; () banked
  7071  005BBE  4B71               	infsnz	sprintf@exp& (0+255),f,b
  7072  005BC0  2B72               	incf	(sprintf@exp+1)& (0+255),f,b
  7073  005BC2                     l4301:
  7074                           
  7075                           ;doprnt.c: 852: }
  7076                           ;doprnt.c: 1112: if(prec <= 12)
  7077  005BC2  0100               	movlb	0	; () banked
  7078  005BC4  BF77               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7079  005BC6  D008               	goto	l4303
  7080  005BC8  0100               	movlb	0	; () banked
  7081  005BCA  5177               	movf	(sprintf@prec+1)& (0+255),w,b
  7082  005BCC  E11D               	bnz	l4305
  7083  005BCE  0E0D               	movlw	13
  7084  005BD0  0100               	movlb	0	; () banked
  7085  005BD2  5D76               	subwf	sprintf@prec& (0+255),w,b
  7086  005BD4  B0D8               	btfsc	status,0,c
  7087  005BD6  D018               	goto	l4305
  7088  005BD8                     l4303:
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;doprnt.c: 1113: fval += fround(prec);
  7092  005BD8  C073  F032         	movff	sprintf@fval,___ftadd@f1
  7093  005BDC  C074  F033         	movff	sprintf@fval+1,___ftadd@f1+1
  7094  005BE0  C075  F034         	movff	sprintf@fval+2,___ftadd@f1+2
  7095  005BE4  0100               	movlb	0	; () banked
  7096  005BE6  5176               	movf	sprintf@prec& (0+255),w,b
  7097  005BE8  EC1B  F024         	call	_fround
  7098  005BEC  C028  F035         	movff	?_fround,___ftadd@f2
  7099  005BF0  C029  F036         	movff	?_fround+1,___ftadd@f2+1
  7100  005BF4  C02A  F037         	movff	?_fround+2,___ftadd@f2+2
  7101  005BF8  EC45  F023         	call	___ftadd	;wreg free
  7102  005BFC  C032  F073         	movff	?___ftadd,sprintf@fval
  7103  005C00  C033  F074         	movff	?___ftadd+1,sprintf@fval+1
  7104  005C04  C034  F075         	movff	?___ftadd+2,sprintf@fval+2
  7105  005C08                     l4305:
  7106                           
  7107                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7108  005C08  0100               	movlb	0	; () banked
  7109  005C0A  BF72               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7110  005C0C  D008               	goto	l4307
  7111  005C0E  0100               	movlb	0	; () banked
  7112  005C10  5172               	movf	(sprintf@exp+1)& (0+255),w,b
  7113  005C12  E126               	bnz	l4313
  7114  005C14  0E0A               	movlw	10
  7115  005C16  0100               	movlb	0	; () banked
  7116  005C18  5D71               	subwf	sprintf@exp& (0+255),w,b
  7117  005C1A  B0D8               	btfsc	status,0,c
  7118  005C1C  D021               	goto	l4313
  7119  005C1E                     l4307:
  7120                           
  7121                           ; BSR set to: 0
  7122  005C1E  0100               	movlb	0	; () banked
  7123  005C20  5173               	movf	sprintf@fval& (0+255),w,b
  7124  005C22  0100               	movlb	0	; () banked
  7125  005C24  1174               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7126  005C26  0100               	movlb	0	; () banked
  7127  005C28  1175               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7128  005C2A  B4D8               	btfsc	status,2,c
  7129  005C2C  D05B               	goto	l4327
  7130                           
  7131                           ; BSR set to: 0
  7132  005C2E  C073  F03E         	movff	sprintf@fval,___fttol@f1
  7133  005C32  C074  F03F         	movff	sprintf@fval+1,___fttol@f1+1
  7134  005C36  C075  F040         	movff	sprintf@fval+2,___fttol@f1+2
  7135  005C3A  ECDE  F01F         	call	___fttol	;wreg free
  7136  005C3E  503E               	movf	?___fttol,w,c
  7137  005C40  103F               	iorwf	?___fttol+1,w,c
  7138  005C42  1040               	iorwf	?___fttol+2,w,c
  7139  005C44  1041               	iorwf	?___fttol+3,w,c
  7140  005C46  A4D8               	btfss	status,2,c
  7141  005C48  D04D               	goto	l4327
  7142  005C4A  0100               	movlb	0	; () banked
  7143  005C4C  BF72               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7144  005C4E  D04A               	goto	l4327
  7145  005C50  0100               	movlb	0	; () banked
  7146  005C52  5172               	movf	(sprintf@exp+1)& (0+255),w,b
  7147  005C54  E105               	bnz	l4313
  7148  005C56  0E02               	movlw	2
  7149  005C58  0100               	movlb	0	; () banked
  7150  005C5A  5D71               	subwf	sprintf@exp& (0+255),w,b
  7151  005C5C  A0D8               	btfss	status,0,c
  7152  005C5E  D042               	goto	l4327
  7153  005C60                     l4313:
  7154                           
  7155                           ; BSR set to: 0
  7156                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7157  005C60  C06D  F001         	movff	sprintf@tmpval,___ftge@ff1
  7158  005C64  C06E  F002         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7159  005C68  C06F  F003         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7160  005C6C  0E70               	movlw	112
  7161  005C6E  6E04               	movwf	___ftge@ff2,c
  7162  005C70  0E89               	movlw	137
  7163  005C72  6E05               	movwf	___ftge@ff2+1,c
  7164  005C74  0E40               	movlw	64
  7165  005C76  6E06               	movwf	___ftge@ff2+2,c
  7166  005C78  EC7E  F01E         	call	___ftge	;wreg free
  7167  005C7C  B0D8               	btfsc	status,0,c
  7168  005C7E  D003               	goto	l4317
  7169                           
  7170                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7171  005C80  0100               	movlb	0	; () banked
  7172  005C82  0EF7               	movlw	247
  7173  005C84  D002               	goto	L11
  7174  005C86                     l4317:
  7175                           
  7176                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7177  005C86  0100               	movlb	0	; () banked
  7178  005C88  0EF8               	movlw	248
  7179  005C8A                     L11:
  7180  005C8A  2771               	addwf	sprintf@exp& (0+255),f,b
  7181  005C8C  0EFF               	movlw	255
  7182  005C8E  2372               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;doprnt.c: 1124: }
  7186                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7187                           
  7188                           ; BSR set to: 0
  7189  005C90  0100               	movlb	0	; () banked
  7190  005C92  5171               	movf	sprintf@exp& (0+255),w,b
  7191  005C94  EC3E  F025         	call	_scale
  7192  005C98  C028  F06D         	movff	?_scale,sprintf@tmpval
  7193  005C9C  C029  F06E         	movff	?_scale+1,sprintf@tmpval+1
  7194  005CA0  C02A  F06F         	movff	?_scale+2,sprintf@tmpval+2
  7195                           
  7196                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7197  005CA4  C073  F001         	movff	sprintf@fval,__tdiv_to_l_@f1
  7198  005CA8  C074  F002         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  7199  005CAC  C075  F003         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  7200  005CB0  C06D  F004         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  7201  005CB4  C06E  F005         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  7202  005CB8  C06F  F006         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  7203  005CBC  EC66  F021         	call	__tdiv_to_l_	;wreg free
  7204  005CC0  C001  F067         	movff	?__tdiv_to_l_,sprintf@val
  7205  005CC4  C002  F068         	movff	?__tdiv_to_l_+1,sprintf@val+1
  7206  005CC8  C003  F069         	movff	?__tdiv_to_l_+2,sprintf@val+2
  7207  005CCC  C004  F06A         	movff	?__tdiv_to_l_+3,sprintf@val+3
  7208                           
  7209                           ;doprnt.c: 1129: fval = 0.0;
  7210  005CD0  0E00               	movlw	0
  7211  005CD2  0100               	movlb	0	; () banked
  7212  005CD4  6F73               	movwf	sprintf@fval& (0+255),b
  7213  005CD6  0E00               	movlw	0
  7214  005CD8  0100               	movlb	0	; () banked
  7215  005CDA  6F74               	movwf	(sprintf@fval+1)& (0+255),b
  7216  005CDC  0E00               	movlw	0
  7217  005CDE  0100               	movlb	0	; () banked
  7218  005CE0  6F75               	movwf	(sprintf@fval+2)& (0+255),b
  7219                           
  7220                           ;doprnt.c: 1130: } else {
  7221  005CE2  D033               	goto	l4331
  7222  005CE4                     l4327:
  7223                           
  7224                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7225  005CE4  C073  F03E         	movff	sprintf@fval,___fttol@f1
  7226  005CE8  C074  F03F         	movff	sprintf@fval+1,___fttol@f1+1
  7227  005CEC  C075  F040         	movff	sprintf@fval+2,___fttol@f1+2
  7228  005CF0  ECDE  F01F         	call	___fttol	;wreg free
  7229  005CF4  C03E  F067         	movff	?___fttol,sprintf@val
  7230  005CF8  C03F  F068         	movff	?___fttol+1,sprintf@val+1
  7231  005CFC  C040  F069         	movff	?___fttol+2,sprintf@val+2
  7232  005D00  C041  F06A         	movff	?___fttol+3,sprintf@val+3
  7233                           
  7234                           ;doprnt.c: 1132: fval -= (double)val;
  7235  005D04  C073  F03E         	movff	sprintf@fval,___ftsub@f1
  7236  005D08  C074  F03F         	movff	sprintf@fval+1,___ftsub@f1+1
  7237  005D0C  C075  F040         	movff	sprintf@fval+2,___ftsub@f1+2
  7238  005D10  C067  F009         	movff	sprintf@val,___lltoft@c
  7239  005D14  C068  F00A         	movff	sprintf@val+1,___lltoft@c+1
  7240  005D18  C069  F00B         	movff	sprintf@val+2,___lltoft@c+2
  7241  005D1C  C06A  F00C         	movff	sprintf@val+3,___lltoft@c+3
  7242  005D20  EC1A  F01D         	call	___lltoft	;wreg free
  7243  005D24  C009  F041         	movff	?___lltoft,___ftsub@f2
  7244  005D28  C00A  F042         	movff	?___lltoft+1,___ftsub@f2+1
  7245  005D2C  C00B  F043         	movff	?___lltoft+2,___ftsub@f2+2
  7246  005D30  EC34  F01C         	call	___ftsub	;wreg free
  7247  005D34  C03E  F073         	movff	?___ftsub,sprintf@fval
  7248  005D38  C03F  F074         	movff	?___ftsub+1,sprintf@fval+1
  7249  005D3C  C040  F075         	movff	?___ftsub+2,sprintf@fval+2
  7250                           
  7251                           ;doprnt.c: 1133: exp = 0;
  7252  005D40  0E00               	movlw	0
  7253  005D42  0100               	movlb	0	; () banked
  7254  005D44  6F72               	movwf	(sprintf@exp+1)& (0+255),b
  7255  005D46  0E00               	movlw	0
  7256  005D48  6F71               	movwf	sprintf@exp& (0+255),b
  7257  005D4A                     l4331:
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;doprnt.c: 1134: }
  7261                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7262  005D4A  0E01               	movlw	1
  7263  005D4C  0100               	movlb	0	; () banked
  7264  005D4E  6F78               	movwf	sprintf@c& (0+255),b
  7265  005D50                     l4333:
  7266                           
  7267                           ; BSR set to: 0
  7268  005D50  0E0A               	movlw	10
  7269  005D52  0100               	movlb	0	; () banked
  7270  005D54  1978               	xorwf	sprintf@c& (0+255),w,b
  7271  005D56  B4D8               	btfsc	status,2,c
  7272  005D58  D01E               	goto	l4345
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;doprnt.c: 1137: if(val < dpowers[c])
  7276                           
  7277                           ; BSR set to: 0
  7278                           
  7279                           ; BSR set to: 0
  7280  005D5A  0100               	movlb	0	; () banked
  7281  005D5C  5178               	movf	sprintf@c& (0+255),w,b
  7282  005D5E  0D04               	mullw	4
  7283  005D60  0E2D               	movlw	low _dpowers
  7284  005D62  24F3               	addwf	prodl,w,c
  7285  005D64  6EF6               	movwf	tblptrl,c
  7286  005D66  0E7F               	movlw	high _dpowers
  7287  005D68  20F4               	addwfc	prodh,w,c
  7288  005D6A  6EF7               	movwf	tblptrh,c
  7289  005D6C                     	if	0	;There are less than 3 active tblptr bytes
  7290  005D6C                     	endif
  7291  005D6C  0009               	tblrd		*+
  7292  005D6E  50F5               	movf	tablat,w,c
  7293  005D70  0100               	movlb	0	; () banked
  7294  005D72  5D67               	subwf	sprintf@val& (0+255),w,b
  7295  005D74  0009               	tblrd		*+
  7296  005D76  50F5               	movf	tablat,w,c
  7297  005D78  0100               	movlb	0	; () banked
  7298  005D7A  5968               	subwfb	(sprintf@val+1)& (0+255),w,b
  7299  005D7C  0009               	tblrd		*+
  7300  005D7E  50F5               	movf	tablat,w,c
  7301  005D80  0100               	movlb	0	; () banked
  7302  005D82  5969               	subwfb	(sprintf@val+2)& (0+255),w,b
  7303  005D84  0009               	tblrd		*+
  7304  005D86  50F5               	movf	tablat,w,c
  7305  005D88  0100               	movlb	0	; () banked
  7306  005D8A  596A               	subwfb	(sprintf@val+3)& (0+255),w,b
  7307  005D8C  A0D8               	btfss	status,0,c
  7308  005D8E  D003               	goto	l4345
  7309                           
  7310                           ; BSR set to: 0
  7311                           
  7312                           ; BSR set to: 0
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;doprnt.c: 1138: break;
  7316  005D90  0100               	movlb	0	; () banked
  7317  005D92  2B78               	incf	sprintf@c& (0+255),f,b
  7318  005D94  D7DD               	goto	l4333
  7319  005D96                     l4345:
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;doprnt.c: 1142: width -= prec + c + exp;
  7323  005D96  C078  F054         	movff	sprintf@c,??_sprintf
  7324  005D9A  6A55               	clrf	(??_sprintf+1)& (0+255),c
  7325  005D9C  BE54               	btfsc	??_sprintf& (0+255),7,c
  7326  005D9E  0655               	decf	(??_sprintf+1)& (0+255),f,c
  7327  005DA0  0100               	movlb	0	; () banked
  7328  005DA2  5176               	movf	sprintf@prec& (0+255),w,b
  7329  005DA4  2654               	addwf	??_sprintf,f,c
  7330  005DA6  0100               	movlb	0	; () banked
  7331  005DA8  5177               	movf	(sprintf@prec+1)& (0+255),w,b
  7332  005DAA  2255               	addwfc	??_sprintf+1,f,c
  7333  005DAC  0100               	movlb	0	; () banked
  7334  005DAE  5171               	movf	sprintf@exp& (0+255),w,b
  7335  005DB0  2654               	addwf	??_sprintf,f,c
  7336  005DB2  0100               	movlb	0	; () banked
  7337  005DB4  5172               	movf	(sprintf@exp+1)& (0+255),w,b
  7338  005DB6  2255               	addwfc	??_sprintf+1,f,c
  7339  005DB8  5054               	movf	??_sprintf,w,c
  7340  005DBA  0100               	movlb	0	; () banked
  7341  005DBC  5F6B               	subwf	sprintf@width& (0+255),f,b
  7342  005DBE  5055               	movf	??_sprintf+1,w,c
  7343  005DC0  0100               	movlb	0	; () banked
  7344  005DC2  5B6C               	subwfb	(sprintf@width+1)& (0+255),f,b
  7345                           
  7346                           ;doprnt.c: 1143: if(
  7347                           ;doprnt.c: 1147: prec)
  7348  005DC4  0100               	movlb	0	; () banked
  7349  005DC6  5176               	movf	sprintf@prec& (0+255),w,b
  7350  005DC8  0100               	movlb	0	; () banked
  7351  005DCA  1177               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7352  005DCC  B4D8               	btfsc	status,2,c
  7353  005DCE  D004               	goto	l4349
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;doprnt.c: 1148: width--;
  7357  005DD0  0100               	movlb	0	; () banked
  7358  005DD2  076B               	decf	sprintf@width& (0+255),f,b
  7359  005DD4  A0D8               	btfss	status,0,c
  7360  005DD6  076C               	decf	(sprintf@width+1)& (0+255),f,b
  7361  005DD8                     l4349:
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;doprnt.c: 1149: if(flag & 0x03)
  7365  005DD8  0E03               	movlw	3
  7366  005DDA  0100               	movlb	0	; () banked
  7367  005DDC  1565               	andwf	sprintf@flag& (0+255),w,b
  7368  005DDE  6E54               	movwf	??_sprintf& (0+255),c
  7369  005DE0  0E00               	movlw	0
  7370  005DE2  0100               	movlb	0	; () banked
  7371  005DE4  1566               	andwf	(sprintf@flag+1)& (0+255),w,b
  7372  005DE6  6E55               	movwf	(??_sprintf+1)& (0+255),c
  7373  005DE8  5054               	movf	??_sprintf,w,c
  7374  005DEA  1055               	iorwf	??_sprintf+1,w,c
  7375  005DEC  B4D8               	btfsc	status,2,c
  7376  005DEE  D00D               	goto	l4359
  7377  005DF0  D008               	goto	l4357
  7378  005DF2                     l4353:
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7382  005DF2  C04D  FFD9         	movff	sprintf@sp,fsr2l
  7383  005DF6  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  7384  005DFA  0E20               	movlw	32
  7385  005DFC  6EDF               	movwf	indf2,c
  7386                           
  7387                           ; BSR set to: 0
  7388  005DFE  4A4D               	infsnz	sprintf@sp,f,c
  7389  005E00  2A4E               	incf	sprintf@sp+1,f,c
  7390  005E02                     l4357:
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;doprnt.c: 1182: width--;
  7394  005E02  0100               	movlb	0	; () banked
  7395  005E04  076B               	decf	sprintf@width& (0+255),f,b
  7396  005E06  A0D8               	btfss	status,0,c
  7397  005E08  076C               	decf	(sprintf@width+1)& (0+255),f,b
  7398  005E0A                     l4359:
  7399                           
  7400                           ; BSR set to: 0
  7401  005E0A  0100               	movlb	0	; () banked
  7402  005E0C  BF6C               	btfsc	(sprintf@width+1)& (0+255),7,b
  7403  005E0E  D007               	goto	l4361
  7404  005E10  0100               	movlb	0	; () banked
  7405  005E12  516C               	movf	(sprintf@width+1)& (0+255),w,b
  7406  005E14  E1EE               	bnz	l4353
  7407  005E16  0100               	movlb	0	; () banked
  7408  005E18  056B               	decf	sprintf@width& (0+255),w,b
  7409  005E1A  B0D8               	btfsc	status,0,c
  7410  005E1C  D7EA               	goto	l4353
  7411  005E1E                     l4361:
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;doprnt.c: 1183: }
  7415                           ;doprnt.c: 1188: if(flag & 0x03)
  7416  005E1E  0E03               	movlw	3
  7417  005E20  0100               	movlb	0	; () banked
  7418  005E22  1565               	andwf	sprintf@flag& (0+255),w,b
  7419  005E24  6E54               	movwf	??_sprintf& (0+255),c
  7420  005E26  0E00               	movlw	0
  7421  005E28  0100               	movlb	0	; () banked
  7422  005E2A  1566               	andwf	(sprintf@flag+1)& (0+255),w,b
  7423  005E2C  6E55               	movwf	(??_sprintf+1)& (0+255),c
  7424  005E2E  5054               	movf	??_sprintf,w,c
  7425  005E30  1055               	iorwf	??_sprintf+1,w,c
  7426  005E32  B4D8               	btfsc	status,2,c
  7427  005E34  D053               	goto	l4375
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7431  005E36  C04D  FFD9         	movff	sprintf@sp,fsr2l
  7432  005E3A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  7433  005E3E  0E2D               	movlw	45
  7434  005E40  D04B               	goto	L12
  7435  005E42                     l4365:
  7436                           
  7437                           ; BSR set to: 0
  7438  005E42  4A4D               	infsnz	sprintf@sp,f,c
  7439  005E44  2A4E               	incf	sprintf@sp+1,f,c
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;doprnt.c: 1195: }
  7443                           ;doprnt.c: 1196: while(c--) {
  7444  005E46  D04A               	goto	l4375
  7445  005E48                     l4367:
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;doprnt.c: 1200: {
  7449                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7450  005E48  C067  F001         	movff	sprintf@val,___lldiv@dividend
  7451  005E4C  C068  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  7452  005E50  C069  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  7453  005E54  C06A  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  7454  005E58  0100               	movlb	0	; () banked
  7455  005E5A  5178               	movf	sprintf@c& (0+255),w,b
  7456  005E5C  0D04               	mullw	4
  7457  005E5E  0E2D               	movlw	low _dpowers
  7458  005E60  24F3               	addwf	prodl,w,c
  7459  005E62  6EF6               	movwf	tblptrl,c
  7460  005E64  0E7F               	movlw	high _dpowers
  7461  005E66  20F4               	addwfc	prodh,w,c
  7462  005E68  6EF7               	movwf	tblptrh,c
  7463  005E6A                     	if	0	;There are less than 3 active tblptr bytes
  7464  005E6A                     	endif
  7465  005E6A  0009               	tblrd		*+
  7466  005E6C  CFF5 F005          	movff	tablat,___lldiv@divisor
  7467  005E70  0009               	tblrd		*+
  7468  005E72  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  7469  005E76  0009               	tblrd		*+
  7470  005E78  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  7471  005E7C  000A               	tblrd		*-
  7472  005E7E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  7473  005E82  ECB3  F01D         	call	___lldiv	;wreg free
  7474  005E86  C001  F06D         	movff	?___lldiv,sprintf@tmpval
  7475  005E8A  C002  F06E         	movff	?___lldiv+1,sprintf@tmpval+1
  7476  005E8E  C003  F06F         	movff	?___lldiv+2,sprintf@tmpval+2
  7477  005E92  C004  F070         	movff	?___lldiv+3,sprintf@tmpval+3
  7478                           
  7479                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7480  005E96  C06D  F00E         	movff	sprintf@tmpval,___llmod@dividend
  7481  005E9A  C06E  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7482  005E9E  C06F  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7483  005EA2  C070  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7484  005EA6  0E0A               	movlw	10
  7485  005EA8  6E12               	movwf	___llmod@divisor,c
  7486  005EAA  0E00               	movlw	0
  7487  005EAC  6E13               	movwf	___llmod@divisor+1,c
  7488  005EAE  0E00               	movlw	0
  7489  005EB0  6E14               	movwf	___llmod@divisor+2,c
  7490  005EB2  0E00               	movlw	0
  7491  005EB4  6E15               	movwf	___llmod@divisor+3,c
  7492  005EB6  EC48  F01D         	call	___llmod	;wreg free
  7493  005EBA  C00E  F06D         	movff	?___llmod,sprintf@tmpval
  7494  005EBE  C00F  F06E         	movff	?___llmod+1,sprintf@tmpval+1
  7495  005EC2  C010  F06F         	movff	?___llmod+2,sprintf@tmpval+2
  7496  005EC6  C011  F070         	movff	?___llmod+3,sprintf@tmpval+3
  7497                           
  7498                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7499  005ECA  0100               	movlb	0	; () banked
  7500  005ECC  516D               	movf	sprintf@tmpval& (0+255),w,b
  7501  005ECE  0F30               	addlw	48
  7502  005ED0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  7503  005ED4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  7504  005ED8                     L12:
  7505  005ED8  6EDF               	movwf	indf2,c
  7506  005EDA  D7B3               	goto	l4365
  7507  005EDC                     l4375:
  7508                           
  7509                           ; BSR set to: 0
  7510  005EDC  0100               	movlb	0	; () banked
  7511  005EDE  0778               	decf	sprintf@c& (0+255),f,b
  7512  005EE0  0100               	movlb	0	; () banked
  7513  005EE2  2978               	incf	sprintf@c& (0+255),w,b
  7514  005EE4  B4D8               	btfsc	status,2,c
  7515  005EE6  D00D               	goto	l4383
  7516  005EE8  D7AF               	goto	l4367
  7517  005EEA                     l4377:
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7521  005EEA  C04D  FFD9         	movff	sprintf@sp,fsr2l
  7522  005EEE  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  7523  005EF2  0E30               	movlw	48
  7524  005EF4  6EDF               	movwf	indf2,c
  7525                           
  7526                           ; BSR set to: 0
  7527  005EF6  4A4D               	infsnz	sprintf@sp,f,c
  7528  005EF8  2A4E               	incf	sprintf@sp+1,f,c
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;doprnt.c: 1209: exp--;
  7532  005EFA  0100               	movlb	0	; () banked
  7533  005EFC  0771               	decf	sprintf@exp& (0+255),f,b
  7534  005EFE  A0D8               	btfss	status,0,c
  7535  005F00  0772               	decf	(sprintf@exp+1)& (0+255),f,b
  7536  005F02                     l4383:
  7537                           
  7538                           ; BSR set to: 0
  7539  005F02  0100               	movlb	0	; () banked
  7540  005F04  BF72               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7541  005F06  D007               	goto	l4385
  7542  005F08  0100               	movlb	0	; () banked
  7543  005F0A  5172               	movf	(sprintf@exp+1)& (0+255),w,b
  7544  005F0C  E1EE               	bnz	l4377
  7545  005F0E  0100               	movlb	0	; () banked
  7546  005F10  0571               	decf	sprintf@exp& (0+255),w,b
  7547  005F12  B0D8               	btfsc	status,0,c
  7548  005F14  D7EA               	goto	l4377
  7549  005F16                     l4385:
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;doprnt.c: 1210: }
  7553                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7554  005F16  0100               	movlb	0	; () banked
  7555  005F18  BF77               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7556  005F1A  D00C               	goto	l451
  7557  005F1C  0100               	movlb	0	; () banked
  7558  005F1E  5177               	movf	(sprintf@prec+1)& (0+255),w,b
  7559  005F20  E105               	bnz	u4780
  7560  005F22  0E09               	movlw	9
  7561  005F24  0100               	movlb	0	; () banked
  7562  005F26  5D76               	subwf	sprintf@prec& (0+255),w,b
  7563  005F28  A0D8               	btfss	status,0,c
  7564  005F2A  D004               	goto	l451
  7565  005F2C                     u4780:
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7569  005F2C  0E08               	movlw	8
  7570  005F2E  0100               	movlb	0	; () banked
  7571  005F30  6F78               	movwf	sprintf@c& (0+255),b
  7572  005F32  D002               	goto	l4389
  7573  005F34                     l451:
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;doprnt.c: 1213: else
  7577                           ;doprnt.c: 1214: c = prec;
  7578  005F34  C076  F078         	movff	sprintf@prec,sprintf@c
  7579  005F38                     l4389:
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;doprnt.c: 1215: prec -= c;
  7583  005F38  0100               	movlb	0	; () banked
  7584  005F3A  5178               	movf	sprintf@c& (0+255),w,b
  7585  005F3C  0100               	movlb	0	; () banked
  7586  005F3E  5F76               	subwf	sprintf@prec& (0+255),f,b
  7587  005F40  0E00               	movlw	0
  7588  005F42  0100               	movlb	0	; () banked
  7589  005F44  BF78               	btfsc	sprintf@c& (0+255),7,b
  7590  005F46  0EFF               	movlw	255
  7591  005F48  0100               	movlb	0	; () banked
  7592  005F4A  5B77               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;doprnt.c: 1219: if(c)
  7596  005F4C  0100               	movlb	0	; () banked
  7597  005F4E  5178               	movf	sprintf@c& (0+255),w,b
  7598  005F50  0100               	movlb	0	; () banked
  7599  005F52  B4D8               	btfsc	status,2,c
  7600  005F54  D008               	goto	l4397
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7604  005F56  C04D  FFD9         	movff	sprintf@sp,fsr2l
  7605  005F5A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  7606  005F5E  0E2E               	movlw	46
  7607  005F60  6EDF               	movwf	indf2,c
  7608                           
  7609                           ; BSR set to: 0
  7610  005F62  4A4D               	infsnz	sprintf@sp,f,c
  7611  005F64  2A4E               	incf	sprintf@sp+1,f,c
  7612  005F66                     l4397:
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7616  005F66  0100               	movlb	0	; () banked
  7617  005F68  5178               	movf	sprintf@c& (0+255),w,b
  7618  005F6A  EC3E  F025         	call	_scale
  7619  005F6E  C028  F060         	movff	?_scale,_sprintf$1215
  7620  005F72  C029  F061         	movff	?_scale+1,_sprintf$1215+1
  7621  005F76  C02A  F062         	movff	?_scale+2,_sprintf$1215+2
  7622                           
  7623                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7624  005F7A  C073  F01C         	movff	sprintf@fval,___ftmul@f2
  7625  005F7E  C074  F01D         	movff	sprintf@fval+1,___ftmul@f2+1
  7626  005F82  C075  F01E         	movff	sprintf@fval+2,___ftmul@f2+2
  7627  005F86  C060  F019         	movff	_sprintf$1215,___ftmul@f1
  7628  005F8A  C061  F01A         	movff	_sprintf$1215+1,___ftmul@f1+1
  7629  005F8E  C062  F01B         	movff	_sprintf$1215+2,___ftmul@f1+2
  7630  005F92  EC58  F020         	call	___ftmul	;wreg free
  7631  005F96  C019  F03E         	movff	?___ftmul,___fttol@f1
  7632  005F9A  C01A  F03F         	movff	?___ftmul+1,___fttol@f1+1
  7633  005F9E  C01B  F040         	movff	?___ftmul+2,___fttol@f1+2
  7634  005FA2  ECDE  F01F         	call	___fttol	;wreg free
  7635  005FA6  C03E  F067         	movff	?___fttol,sprintf@val
  7636  005FAA  C03F  F068         	movff	?___fttol+1,sprintf@val+1
  7637  005FAE  C040  F069         	movff	?___fttol+2,sprintf@val+2
  7638  005FB2  C041  F06A         	movff	?___fttol+3,sprintf@val+3
  7639                           
  7640                           ;doprnt.c: 1228: while(c--) {
  7641  005FB6  D072               	goto	l4411
  7642  005FB8                     l4401:
  7643                           
  7644                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7645  005FB8  C067  F001         	movff	sprintf@val,___lldiv@dividend
  7646  005FBC  C068  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  7647  005FC0  C069  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  7648  005FC4  C06A  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  7649  005FC8  0100               	movlb	0	; () banked
  7650  005FCA  5178               	movf	sprintf@c& (0+255),w,b
  7651  005FCC  0D04               	mullw	4
  7652  005FCE  0E2D               	movlw	low _dpowers
  7653  005FD0  24F3               	addwf	prodl,w,c
  7654  005FD2  6EF6               	movwf	tblptrl,c
  7655  005FD4  0E7F               	movlw	high _dpowers
  7656  005FD6  20F4               	addwfc	prodh,w,c
  7657  005FD8  6EF7               	movwf	tblptrh,c
  7658  005FDA                     	if	0	;There are less than 3 active tblptr bytes
  7659  005FDA                     	endif
  7660  005FDA  0009               	tblrd		*+
  7661  005FDC  CFF5 F005          	movff	tablat,___lldiv@divisor
  7662  005FE0  0009               	tblrd		*+
  7663  005FE2  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  7664  005FE6  0009               	tblrd		*+
  7665  005FE8  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  7666  005FEC  000A               	tblrd		*-
  7667  005FEE  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  7668  005FF2  ECB3  F01D         	call	___lldiv	;wreg free
  7669  005FF6  C001  F06D         	movff	?___lldiv,sprintf@tmpval
  7670  005FFA  C002  F06E         	movff	?___lldiv+1,sprintf@tmpval+1
  7671  005FFE  C003  F06F         	movff	?___lldiv+2,sprintf@tmpval+2
  7672  006002  C004  F070         	movff	?___lldiv+3,sprintf@tmpval+3
  7673                           
  7674                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7675  006006  C06D  F00E         	movff	sprintf@tmpval,___llmod@dividend
  7676  00600A  C06E  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7677  00600E  C06F  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7678  006012  C070  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7679  006016  0E0A               	movlw	10
  7680  006018  6E12               	movwf	___llmod@divisor,c
  7681  00601A  0E00               	movlw	0
  7682  00601C  6E13               	movwf	___llmod@divisor+1,c
  7683  00601E  0E00               	movlw	0
  7684  006020  6E14               	movwf	___llmod@divisor+2,c
  7685  006022  0E00               	movlw	0
  7686  006024  6E15               	movwf	___llmod@divisor+3,c
  7687  006026  EC48  F01D         	call	___llmod	;wreg free
  7688  00602A  C00E  F06D         	movff	?___llmod,sprintf@tmpval
  7689  00602E  C00F  F06E         	movff	?___llmod+1,sprintf@tmpval+1
  7690  006032  C010  F06F         	movff	?___llmod+2,sprintf@tmpval+2
  7691  006036  C011  F070         	movff	?___llmod+3,sprintf@tmpval+3
  7692                           
  7693                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7694  00603A  0100               	movlb	0	; () banked
  7695  00603C  516D               	movf	sprintf@tmpval& (0+255),w,b
  7696  00603E  0F30               	addlw	48
  7697  006040  C04D  FFD9         	movff	sprintf@sp,fsr2l
  7698  006044  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  7699  006048  6EDF               	movwf	indf2,c
  7700                           
  7701                           ; BSR set to: 0
  7702  00604A  4A4D               	infsnz	sprintf@sp,f,c
  7703  00604C  2A4E               	incf	sprintf@sp+1,f,c
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;doprnt.c: 1232: val %= dpowers[c];
  7707  00604E  C067  F00E         	movff	sprintf@val,___llmod@dividend
  7708  006052  C068  F00F         	movff	sprintf@val+1,___llmod@dividend+1
  7709  006056  C069  F010         	movff	sprintf@val+2,___llmod@dividend+2
  7710  00605A  C06A  F011         	movff	sprintf@val+3,___llmod@dividend+3
  7711  00605E  0100               	movlb	0	; () banked
  7712  006060  5178               	movf	sprintf@c& (0+255),w,b
  7713  006062  0D04               	mullw	4
  7714  006064  0E2D               	movlw	low _dpowers
  7715  006066  24F3               	addwf	prodl,w,c
  7716  006068  6EF6               	movwf	tblptrl,c
  7717  00606A  0E7F               	movlw	high _dpowers
  7718  00606C  20F4               	addwfc	prodh,w,c
  7719  00606E  6EF7               	movwf	tblptrh,c
  7720  006070                     	if	0	;There are less than 3 active tblptr bytes
  7721  006070                     	endif
  7722  006070  0009               	tblrd		*+
  7723  006072  CFF5 F012          	movff	tablat,___llmod@divisor
  7724  006076  0009               	tblrd		*+
  7725  006078  CFF5 F013          	movff	tablat,___llmod@divisor+1
  7726  00607C  0009               	tblrd		*+
  7727  00607E  CFF5 F014          	movff	tablat,___llmod@divisor+2
  7728  006082  000A               	tblrd		*-
  7729  006084  CFF5 F015          	movff	tablat,___llmod@divisor+3
  7730  006088  EC48  F01D         	call	___llmod	;wreg free
  7731  00608C  C00E  F067         	movff	?___llmod,sprintf@val
  7732  006090  C00F  F068         	movff	?___llmod+1,sprintf@val+1
  7733  006094  C010  F069         	movff	?___llmod+2,sprintf@val+2
  7734  006098  C011  F06A         	movff	?___llmod+3,sprintf@val+3
  7735  00609C                     l4411:
  7736  00609C  0100               	movlb	0	; () banked
  7737  00609E  0778               	decf	sprintf@c& (0+255),f,b
  7738  0060A0  0100               	movlb	0	; () banked
  7739  0060A2  2978               	incf	sprintf@c& (0+255),w,b
  7740  0060A4  B4D8               	btfsc	status,2,c
  7741  0060A6  D00D               	goto	l4419
  7742  0060A8  D787               	goto	l4401
  7743  0060AA                     l4413:
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7747  0060AA  C04D  FFD9         	movff	sprintf@sp,fsr2l
  7748  0060AE  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  7749  0060B2  0E30               	movlw	48
  7750  0060B4  6EDF               	movwf	indf2,c
  7751                           
  7752                           ; BSR set to: 0
  7753  0060B6  4A4D               	infsnz	sprintf@sp,f,c
  7754  0060B8  2A4E               	incf	sprintf@sp+1,f,c
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;doprnt.c: 1237: prec--;
  7758  0060BA  0100               	movlb	0	; () banked
  7759  0060BC  0776               	decf	sprintf@prec& (0+255),f,b
  7760  0060BE  A0D8               	btfss	status,0,c
  7761  0060C0  0777               	decf	(sprintf@prec+1)& (0+255),f,b
  7762  0060C2                     l4419:
  7763                           
  7764                           ; BSR set to: 0
  7765  0060C2  0100               	movlb	0	; () banked
  7766  0060C4  5176               	movf	sprintf@prec& (0+255),w,b
  7767  0060C6  0100               	movlb	0	; () banked
  7768  0060C8  1177               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7769  0060CA  B4D8               	btfsc	status,2,c
  7770  0060CC  D144               	goto	l4495
  7771  0060CE  D7ED               	goto	l4413
  7772  0060D0                     l4421:
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;doprnt.c: 1246: }
  7776                           ;doprnt.c: 1273: {
  7777                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7778  0060D0  C063  FFD9         	movff	sprintf@ap,fsr2l
  7779  0060D4  C064  FFDA         	movff	sprintf@ap+1,fsr2h
  7780  0060D8  CFDE F054          	movff	postinc2,??_sprintf
  7781  0060DC  CFDD F055          	movff	postdec2,??_sprintf+1
  7782  0060E0  C054  F067         	movff	??_sprintf,sprintf@val
  7783  0060E4  C055  F068         	movff	??_sprintf+1,sprintf@val+1
  7784  0060E8  0100               	movlb	0	; () banked
  7785  0060EA  6B69               	clrf	(sprintf@val+2)& (0+255),b
  7786  0060EC  6B6A               	clrf	(sprintf@val+3)& (0+255),b
  7787                           
  7788                           ; BSR set to: 0
  7789  0060EE  0E02               	movlw	2
  7790  0060F0  0100               	movlb	0	; () banked
  7791  0060F2  2763               	addwf	sprintf@ap& (0+255),f,b
  7792  0060F4  0E00               	movlw	0
  7793  0060F6  2364               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;doprnt.c: 1287: }
  7797                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7798  0060F8  0100               	movlb	0	; () banked
  7799  0060FA  5176               	movf	sprintf@prec& (0+255),w,b
  7800  0060FC  0100               	movlb	0	; () banked
  7801  0060FE  1177               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7802  006100  A4D8               	btfss	status,2,c
  7803  006102  D00D               	goto	l4431
  7804                           
  7805                           ; BSR set to: 0
  7806  006104  0100               	movlb	0	; () banked
  7807  006106  5167               	movf	sprintf@val& (0+255),w,b
  7808  006108  0100               	movlb	0	; () banked
  7809  00610A  1168               	iorwf	(sprintf@val+1)& (0+255),w,b
  7810  00610C  0100               	movlb	0	; () banked
  7811  00610E  1169               	iorwf	(sprintf@val+2)& (0+255),w,b
  7812  006110  0100               	movlb	0	; () banked
  7813  006112  116A               	iorwf	(sprintf@val+3)& (0+255),w,b
  7814  006114  A4D8               	btfss	status,2,c
  7815  006116  D003               	goto	l4431
  7816                           
  7817                           ; BSR set to: 0
  7818                           ;doprnt.c: 1291: prec++;
  7819  006118  0100               	movlb	0	; () banked
  7820  00611A  4B76               	infsnz	sprintf@prec& (0+255),f,b
  7821  00611C  2B77               	incf	(sprintf@prec+1)& (0+255),f,b
  7822  00611E                     l4431:
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7826  00611E  0E01               	movlw	1
  7827  006120  0100               	movlb	0	; () banked
  7828  006122  6F78               	movwf	sprintf@c& (0+255),b
  7829  006124                     l4433:
  7830                           
  7831                           ; BSR set to: 0
  7832  006124  0E0A               	movlw	10
  7833  006126  0100               	movlb	0	; () banked
  7834  006128  1978               	xorwf	sprintf@c& (0+255),w,b
  7835  00612A  B4D8               	btfsc	status,2,c
  7836  00612C  D01E               	goto	l4445
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;doprnt.c: 1306: if(val < dpowers[c])
  7840                           
  7841                           ; BSR set to: 0
  7842                           
  7843                           ; BSR set to: 0
  7844  00612E  0100               	movlb	0	; () banked
  7845  006130  5178               	movf	sprintf@c& (0+255),w,b
  7846  006132  0D04               	mullw	4
  7847  006134  0E2D               	movlw	low _dpowers
  7848  006136  24F3               	addwf	prodl,w,c
  7849  006138  6EF6               	movwf	tblptrl,c
  7850  00613A  0E7F               	movlw	high _dpowers
  7851  00613C  20F4               	addwfc	prodh,w,c
  7852  00613E  6EF7               	movwf	tblptrh,c
  7853  006140                     	if	0	;There are less than 3 active tblptr bytes
  7854  006140                     	endif
  7855  006140  0009               	tblrd		*+
  7856  006142  50F5               	movf	tablat,w,c
  7857  006144  0100               	movlb	0	; () banked
  7858  006146  5D67               	subwf	sprintf@val& (0+255),w,b
  7859  006148  0009               	tblrd		*+
  7860  00614A  50F5               	movf	tablat,w,c
  7861  00614C  0100               	movlb	0	; () banked
  7862  00614E  5968               	subwfb	(sprintf@val+1)& (0+255),w,b
  7863  006150  0009               	tblrd		*+
  7864  006152  50F5               	movf	tablat,w,c
  7865  006154  0100               	movlb	0	; () banked
  7866  006156  5969               	subwfb	(sprintf@val+2)& (0+255),w,b
  7867  006158  0009               	tblrd		*+
  7868  00615A  50F5               	movf	tablat,w,c
  7869  00615C  0100               	movlb	0	; () banked
  7870  00615E  596A               	subwfb	(sprintf@val+3)& (0+255),w,b
  7871  006160  A0D8               	btfss	status,0,c
  7872  006162  D003               	goto	l4445
  7873                           
  7874                           ; BSR set to: 0
  7875                           
  7876                           ; BSR set to: 0
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;doprnt.c: 1307: break;
  7880  006164  0100               	movlb	0	; () banked
  7881  006166  2B78               	incf	sprintf@c& (0+255),f,b
  7882  006168  D7DD               	goto	l4433
  7883  00616A                     l4445:
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;doprnt.c: 1339: if(c < prec)
  7887  00616A  0E80               	movlw	128
  7888  00616C  0100               	movlb	0	; () banked
  7889  00616E  BF78               	btfsc	sprintf@c& (0+255),7,b
  7890  006170  0E7F               	movlw	127
  7891  006172  6E54               	movwf	??_sprintf& (0+255),c
  7892  006174  0100               	movlb	0	; () banked
  7893  006176  5176               	movf	sprintf@prec& (0+255),w,b
  7894  006178  0100               	movlb	0	; () banked
  7895  00617A  5D78               	subwf	sprintf@c& (0+255),w,b
  7896  00617C  0100               	movlb	0	; () banked
  7897  00617E  5177               	movf	(sprintf@prec+1)& (0+255),w,b
  7898  006180  0A80               	xorlw	128
  7899  006182  5854               	subwfb	??_sprintf& (0+255),w,c
  7900  006184  B0D8               	btfsc	status,0,c
  7901  006186  D003               	goto	l4449
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;doprnt.c: 1340: c = prec;
  7905  006188  C076  F078         	movff	sprintf@prec,sprintf@c
  7906  00618C  D016               	goto	l4453
  7907  00618E                     l4449:
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;doprnt.c: 1341: else if(prec < c)
  7911  00618E  0100               	movlb	0	; () banked
  7912  006190  5177               	movf	(sprintf@prec+1)& (0+255),w,b
  7913  006192  0A80               	xorlw	128
  7914  006194  6E54               	movwf	??_sprintf& (0+255),c
  7915  006196  0100               	movlb	0	; () banked
  7916  006198  5178               	movf	sprintf@c& (0+255),w,b
  7917  00619A  0100               	movlb	0	; () banked
  7918  00619C  5D76               	subwf	sprintf@prec& (0+255),w,b
  7919  00619E  0E80               	movlw	128
  7920  0061A0  0100               	movlb	0	; () banked
  7921  0061A2  BF78               	btfsc	sprintf@c& (0+255),7,b
  7922  0061A4  0E7F               	movlw	127
  7923  0061A6  5854               	subwfb	??_sprintf& (0+255),w,c
  7924  0061A8  B0D8               	btfsc	status,0,c
  7925  0061AA  D007               	goto	l4453
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;doprnt.c: 1342: prec = c;
  7929  0061AC  0100               	movlb	0	; () banked
  7930  0061AE  5178               	movf	sprintf@c& (0+255),w,b
  7931  0061B0  0100               	movlb	0	; () banked
  7932  0061B2  6F76               	movwf	sprintf@prec& (0+255),b
  7933  0061B4  6B77               	clrf	(sprintf@prec+1)& (0+255),b
  7934  0061B6  BF76               	btfsc	sprintf@prec& (0+255),7,b
  7935  0061B8  0777               	decf	(sprintf@prec+1)& (0+255),f,b
  7936  0061BA                     l4453:
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;doprnt.c: 1345: if(width && flag & 0x03)
  7940  0061BA  0100               	movlb	0	; () banked
  7941  0061BC  516B               	movf	sprintf@width& (0+255),w,b
  7942  0061BE  0100               	movlb	0	; () banked
  7943  0061C0  116C               	iorwf	(sprintf@width+1)& (0+255),w,b
  7944  0061C2  B4D8               	btfsc	status,2,c
  7945  0061C4  D010               	goto	l4459
  7946                           
  7947                           ; BSR set to: 0
  7948  0061C6  0E03               	movlw	3
  7949  0061C8  0100               	movlb	0	; () banked
  7950  0061CA  1565               	andwf	sprintf@flag& (0+255),w,b
  7951  0061CC  6E54               	movwf	??_sprintf& (0+255),c
  7952  0061CE  0E00               	movlw	0
  7953  0061D0  0100               	movlb	0	; () banked
  7954  0061D2  1566               	andwf	(sprintf@flag+1)& (0+255),w,b
  7955  0061D4  6E55               	movwf	(??_sprintf+1)& (0+255),c
  7956  0061D6  5054               	movf	??_sprintf,w,c
  7957  0061D8  1055               	iorwf	??_sprintf+1,w,c
  7958  0061DA  B4D8               	btfsc	status,2,c
  7959  0061DC  D004               	goto	l4459
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;doprnt.c: 1346: width--;
  7963  0061DE  0100               	movlb	0	; () banked
  7964  0061E0  076B               	decf	sprintf@width& (0+255),f,b
  7965  0061E2  A0D8               	btfss	status,0,c
  7966  0061E4  076C               	decf	(sprintf@width+1)& (0+255),f,b
  7967  0061E6                     l4459:
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;doprnt.c: 1348: if(flag & 0x4000) {
  7971  0061E6  0100               	movlb	0	; () banked
  7972  0061E8  AD66               	btfss	(sprintf@flag+1)& (0+255),6,b
  7973  0061EA  D01C               	goto	l4467
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;doprnt.c: 1349: if(width > prec)
  7977  0061EC  0100               	movlb	0	; () banked
  7978  0061EE  516B               	movf	sprintf@width& (0+255),w,b
  7979  0061F0  0100               	movlb	0	; () banked
  7980  0061F2  5D76               	subwf	sprintf@prec& (0+255),w,b
  7981  0061F4  0100               	movlb	0	; () banked
  7982  0061F6  5177               	movf	(sprintf@prec+1)& (0+255),w,b
  7983  0061F8  0A80               	xorlw	128
  7984  0061FA  6E54               	movwf	??_sprintf& (0+255),c
  7985  0061FC  0100               	movlb	0	; () banked
  7986  0061FE  516C               	movf	(sprintf@width+1)& (0+255),w,b
  7987  006200  0A80               	xorlw	128
  7988  006202  5854               	subwfb	??_sprintf& (0+255),w,c
  7989  006204  B0D8               	btfsc	status,0,c
  7990  006206  D009               	goto	l4465
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;doprnt.c: 1350: width -= prec;
  7994  006208  0100               	movlb	0	; () banked
  7995  00620A  5176               	movf	sprintf@prec& (0+255),w,b
  7996  00620C  0100               	movlb	0	; () banked
  7997  00620E  5F6B               	subwf	sprintf@width& (0+255),f,b
  7998  006210  0100               	movlb	0	; () banked
  7999  006212  5177               	movf	(sprintf@prec+1)& (0+255),w,b
  8000  006214  0100               	movlb	0	; () banked
  8001  006216  5B6C               	subwfb	(sprintf@width+1)& (0+255),f,b
  8002  006218  D005               	goto	l4467
  8003  00621A                     l4465:
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;doprnt.c: 1351: else
  8007                           ;doprnt.c: 1352: width = 0;
  8008  00621A  0E00               	movlw	0
  8009  00621C  0100               	movlb	0	; () banked
  8010  00621E  6F6C               	movwf	(sprintf@width+1)& (0+255),b
  8011  006220  0E00               	movlw	0
  8012  006222  6F6B               	movwf	sprintf@width& (0+255),b
  8013  006224                     l4467:
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;doprnt.c: 1353: }
  8017                           ;doprnt.c: 1381: if(width > c)
  8018  006224  0E80               	movlw	128
  8019  006226  0100               	movlb	0	; () banked
  8020  006228  BF78               	btfsc	sprintf@c& (0+255),7,b
  8021  00622A  0E7F               	movlw	127
  8022  00622C  6E54               	movwf	??_sprintf& (0+255),c
  8023  00622E  0100               	movlb	0	; () banked
  8024  006230  516B               	movf	sprintf@width& (0+255),w,b
  8025  006232  0100               	movlb	0	; () banked
  8026  006234  5D78               	subwf	sprintf@c& (0+255),w,b
  8027  006236  0100               	movlb	0	; () banked
  8028  006238  516C               	movf	(sprintf@width+1)& (0+255),w,b
  8029  00623A  0A80               	xorlw	128
  8030  00623C  5854               	subwfb	??_sprintf& (0+255),w,c
  8031  00623E  B0D8               	btfsc	status,0,c
  8032  006240  D00B               	goto	l4471
  8033                           
  8034                           ; BSR set to: 0
  8035                           ;doprnt.c: 1382: width -= c;
  8036  006242  0100               	movlb	0	; () banked
  8037  006244  5178               	movf	sprintf@c& (0+255),w,b
  8038  006246  0100               	movlb	0	; () banked
  8039  006248  5F6B               	subwf	sprintf@width& (0+255),f,b
  8040  00624A  0E00               	movlw	0
  8041  00624C  0100               	movlb	0	; () banked
  8042  00624E  BF78               	btfsc	sprintf@c& (0+255),7,b
  8043  006250  0EFF               	movlw	255
  8044  006252  0100               	movlb	0	; () banked
  8045  006254  5B6C               	subwfb	(sprintf@width+1)& (0+255),f,b
  8046  006256  D005               	goto	l4473
  8047  006258                     l4471:
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;doprnt.c: 1383: else
  8051                           ;doprnt.c: 1384: width = 0;
  8052  006258  0E00               	movlw	0
  8053  00625A  0100               	movlb	0	; () banked
  8054  00625C  6F6C               	movwf	(sprintf@width+1)& (0+255),b
  8055  00625E  0E00               	movlw	0
  8056  006260  6F6B               	movwf	sprintf@width& (0+255),b
  8057  006262                     l4473:
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;doprnt.c: 1422: {
  8061                           ;doprnt.c: 1424: if(width
  8062                           ;doprnt.c: 1428: )
  8063  006262  0100               	movlb	0	; () banked
  8064  006264  516B               	movf	sprintf@width& (0+255),w,b
  8065  006266  0100               	movlb	0	; () banked
  8066  006268  116C               	iorwf	(sprintf@width+1)& (0+255),w,b
  8067  00626A  B4D8               	btfsc	status,2,c
  8068  00626C  D012               	goto	l4481
  8069  00626E                     l4475:
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8073  00626E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  8074  006272  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  8075  006276  0E20               	movlw	32
  8076  006278  6EDF               	movwf	indf2,c
  8077                           
  8078                           ; BSR set to: 0
  8079  00627A  4A4D               	infsnz	sprintf@sp,f,c
  8080  00627C  2A4E               	incf	sprintf@sp+1,f,c
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;doprnt.c: 1431: while(--width);
  8084  00627E  0100               	movlb	0	; () banked
  8085  006280  076B               	decf	sprintf@width& (0+255),f,b
  8086  006282  A0D8               	btfss	status,0,c
  8087  006284  076C               	decf	(sprintf@width+1)& (0+255),f,b
  8088  006286  0100               	movlb	0	; () banked
  8089  006288  516B               	movf	sprintf@width& (0+255),w,b
  8090  00628A  0100               	movlb	0	; () banked
  8091  00628C  116C               	iorwf	(sprintf@width+1)& (0+255),w,b
  8092  00628E  A4D8               	btfss	status,2,c
  8093  006290  D7EE               	goto	l4475
  8094  006292                     l4481:
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;doprnt.c: 1438: if(flag & 0x03)
  8098  006292  0E03               	movlw	3
  8099  006294  0100               	movlb	0	; () banked
  8100  006296  1565               	andwf	sprintf@flag& (0+255),w,b
  8101  006298  6E54               	movwf	??_sprintf& (0+255),c
  8102  00629A  0E00               	movlw	0
  8103  00629C  0100               	movlb	0	; () banked
  8104  00629E  1566               	andwf	(sprintf@flag+1)& (0+255),w,b
  8105  0062A0  6E55               	movwf	(??_sprintf+1)& (0+255),c
  8106  0062A2  5054               	movf	??_sprintf,w,c
  8107  0062A4  1055               	iorwf	??_sprintf+1,w,c
  8108  0062A6  B4D8               	btfsc	status,2,c
  8109  0062A8  D04B               	goto	l4493
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8113  0062AA  C04D  FFD9         	movff	sprintf@sp,fsr2l
  8114  0062AE  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  8115  0062B2  0E2D               	movlw	45
  8116  0062B4  6EDF               	movwf	indf2,c
  8117  0062B6  D042               	goto	l4491
  8118  0062B8                     l4487:
  8119                           
  8120                           ; BSR set to: 0
  8121                           ;doprnt.c: 1478: {
  8122                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8123  0062B8  C076  F054         	movff	sprintf@prec,??_sprintf
  8124  0062BC  C077  F055         	movff	sprintf@prec+1,??_sprintf+1
  8125  0062C0  90D8               	bcf	status,0,c
  8126  0062C2  3654               	rlcf	??_sprintf,f,c
  8127  0062C4  3655               	rlcf	??_sprintf+1,f,c
  8128  0062C6  90D8               	bcf	status,0,c
  8129  0062C8  3654               	rlcf	??_sprintf,f,c
  8130  0062CA  3655               	rlcf	??_sprintf+1,f,c
  8131  0062CC  0E2D               	movlw	low _dpowers
  8132  0062CE  2454               	addwf	??_sprintf,w,c
  8133  0062D0  6EF6               	movwf	tblptrl,c
  8134  0062D2  0E7F               	movlw	high _dpowers
  8135  0062D4  2055               	addwfc	??_sprintf+1,w,c
  8136  0062D6  6EF7               	movwf	tblptrh,c
  8137  0062D8                     	if	0	;There are less than 3 active tblptr bytes
  8138  0062D8                     	endif
  8139  0062D8  0009               	tblrd		*+
  8140  0062DA  CFF5 F005          	movff	tablat,___lldiv@divisor
  8141  0062DE  0009               	tblrd		*+
  8142  0062E0  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  8143  0062E4  0009               	tblrd		*+
  8144  0062E6  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  8145  0062EA  000A               	tblrd		*-
  8146  0062EC  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  8147  0062F0  C067  F001         	movff	sprintf@val,___lldiv@dividend
  8148  0062F4  C068  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  8149  0062F8  C069  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  8150  0062FC  C06A  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  8151  006300  ECB3  F01D         	call	___lldiv	;wreg free
  8152  006304  C001  F00E         	movff	?___lldiv,___llmod@dividend
  8153  006308  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  8154  00630C  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  8155  006310  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  8156  006314  0E0A               	movlw	10
  8157  006316  6E12               	movwf	___llmod@divisor,c
  8158  006318  0E00               	movlw	0
  8159  00631A  6E13               	movwf	___llmod@divisor+1,c
  8160  00631C  0E00               	movlw	0
  8161  00631E  6E14               	movwf	___llmod@divisor+2,c
  8162  006320  0E00               	movlw	0
  8163  006322  6E15               	movwf	___llmod@divisor+3,c
  8164  006324  EC48  F01D         	call	___llmod	;wreg free
  8165  006328  500E               	movf	?___llmod,w,c
  8166  00632A  0F30               	addlw	48
  8167  00632C  0100               	movlb	0	; () banked
  8168  00632E  6F78               	movwf	sprintf@c& (0+255),b
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;doprnt.c: 1523: }
  8172                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8173  006330  C04D  FFD9         	movff	sprintf@sp,fsr2l
  8174  006334  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  8175  006338  C078  FFDF         	movff	sprintf@c,indf2
  8176  00633C                     l4491:
  8177                           
  8178                           ; BSR set to: 0
  8179  00633C  4A4D               	infsnz	sprintf@sp,f,c
  8180  00633E  2A4E               	incf	sprintf@sp+1,f,c
  8181  006340                     l4493:
  8182                           
  8183                           ; BSR set to: 0
  8184  006340  0100               	movlb	0	; () banked
  8185  006342  0776               	decf	sprintf@prec& (0+255),f,b
  8186  006344  A0D8               	btfss	status,0,c
  8187  006346  0777               	decf	(sprintf@prec+1)& (0+255),f,b
  8188  006348  0100               	movlb	0	; () banked
  8189  00634A  2976               	incf	sprintf@prec& (0+255),w,b
  8190  00634C  E1B5               	bnz	l4487
  8191  00634E  0100               	movlb	0	; () banked
  8192  006350  2977               	incf	(sprintf@prec+1)& (0+255),w,b
  8193  006352  A4D8               	btfss	status,2,c
  8194  006354  D7B1               	goto	l4487
  8195  006356                     l4495:
  8196                           
  8197                           ; BSR set to: 0
  8198  006356  C04F  FFF6         	movff	sprintf@f,tblptrl
  8199  00635A  C050  FFF7         	movff	sprintf@f+1,tblptrh
  8200  00635E  4A4F               	infsnz	sprintf@f,f,c
  8201  006360  2A50               	incf	sprintf@f+1,f,c
  8202  006362                     	if	0	;tblptru may be non-zero
  8203  006362                     	endif
  8204  006362                     	if	0	;tblptru may be non-zero
  8205  006362                     	endif
  8206  006362  0008               	tblrd		*
  8207  006364  CFF5 F078          	movff	tablat,sprintf@c
  8208  006368  0100               	movlb	0	; () banked
  8209  00636A  5178               	movf	sprintf@c& (0+255),w,b
  8210  00636C  A4D8               	btfss	status,2,c
  8211  00636E  EF60  F02C         	goto	l4213
  8212  006372                     l4497:
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;doprnt.c: 1538: *sp = 0;
  8216  006372  C04D  FFD9         	movff	sprintf@sp,fsr2l
  8217  006376  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  8218  00637A  0E00               	movlw	0
  8219  00637C  6EDF               	movwf	indf2,c
  8220  00637E  0012               	return	
  8221  006380                     __end_of_sprintf:
  8222                           	opt stack 0
  8223                           tblptru	equ	0xFF8
  8224                           tblptrh	equ	0xFF7
  8225                           tblptrl	equ	0xFF6
  8226                           tablat	equ	0xFF5
  8227                           prodh	equ	0xFF4
  8228                           prodl	equ	0xFF3
  8229                           postinc0	equ	0xFEE
  8230                           wreg	equ	0xFE8
  8231                           indf1	equ	0xFE7
  8232                           postdec1	equ	0xFE5
  8233                           fsr1h	equ	0xFE2
  8234                           fsr1l	equ	0xFE1
  8235                           indf2	equ	0xFDF
  8236                           postinc2	equ	0xFDE
  8237                           postdec2	equ	0xFDD
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8
  8241                           
  8242 ;; *************** function _scale *****************
  8243 ;; Defined at:
  8244 ;;		line 425 in file "/opt/microchip/xc8/v1.37/sources/common/doprnt.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  scl             1    wreg     char 
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;  scl             1   45[COMRAM] char 
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  3   39[COMRAM] char 
  8251 ;; Registers used:
  8252 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8258 ;;      Params:         3       0       0       0       0       0       0       0       0
  8259 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8261 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8262 ;;Total ram usage:        7 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; Hardware stack levels required when called:    2
  8265 ;; This function calls:
  8266 ;;		___awdiv
  8267 ;;		___awmod
  8268 ;;		___ftmul
  8269 ;;		___wmul
  8270 ;; This function is called by:
  8271 ;;		_sprintf
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text5
  8276  004A7C                     __ptext5:
  8277                           	opt stack 0
  8278  004A7C                     _scale:
  8279                           	opt stack 27
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;incstack = 0
  8283                           ;scale@scl stored from wreg
  8284  004A7C  6E2E               	movwf	scale@scl,c
  8285                           
  8286                           ;doprnt.c: 428: if(scl < 0) {
  8287  004A7E  AE2E               	btfss	scale@scl,7,c
  8288  004A80  D0FB               	goto	l3895
  8289                           
  8290                           ;doprnt.c: 429: scl = -scl;
  8291  004A82  6C2E               	negf	scale@scl,c
  8292                           
  8293                           ;doprnt.c: 430: if(scl>=110)
  8294  004A84  502E               	movf	scale@scl,w,c
  8295  004A86  0A80               	xorlw	128
  8296  004A88  0F12               	addlw	-238
  8297  004A8A  A0D8               	btfss	status,0,c
  8298  004A8C  D091               	goto	l3885
  8299                           
  8300                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8301  004A8E  0E00               	movlw	0
  8302  004A90  6E12               	movwf	___wmul@multiplicand+1,c
  8303  004A92  0E03               	movlw	3
  8304  004A94  6E11               	movwf	___wmul@multiplicand,c
  8305  004A96  0E00               	movlw	0
  8306  004A98  6E0A               	movwf	___awdiv@divisor+1,c
  8307  004A9A  0E0A               	movlw	10
  8308  004A9C  6E09               	movwf	___awdiv@divisor,c
  8309  004A9E  0E00               	movlw	0
  8310  004AA0  6E04               	movwf	___awmod@divisor+1,c
  8311  004AA2  0E64               	movlw	100
  8312  004AA4  6E03               	movwf	___awmod@divisor,c
  8313  004AA6  502E               	movf	scale@scl,w,c
  8314  004AA8  6E01               	movwf	___awmod@dividend,c
  8315  004AAA  6A02               	clrf	___awmod@dividend+1,c
  8316  004AAC  BE01               	btfsc	___awmod@dividend,7,c
  8317  004AAE  0602               	decf	___awmod@dividend+1,f,c
  8318  004AB0  EC7B  F01D         	call	___awmod	;wreg free
  8319  004AB4  C001  F007         	movff	?___awmod,___awdiv@dividend
  8320  004AB8  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  8321  004ABC  ECF4  F01D         	call	___awdiv	;wreg free
  8322  004AC0  0E09               	movlw	9
  8323  004AC2  2407               	addwf	?___awdiv,w,c
  8324  004AC4  6E0F               	movwf	___wmul@multiplier,c
  8325  004AC6  0E00               	movlw	0
  8326  004AC8  2008               	addwfc	?___awdiv+1,w,c
  8327  004ACA  6E10               	movwf	___wmul@multiplier+1,c
  8328  004ACC  ECBF  F01B         	call	___wmul	;wreg free
  8329  004AD0  0E55               	movlw	low __npowers_
  8330  004AD2  240F               	addwf	?___wmul,w,c
  8331  004AD4  6EF6               	movwf	tblptrl,c
  8332  004AD6  0E7F               	movlw	high __npowers_
  8333  004AD8  2010               	addwfc	?___wmul+1,w,c
  8334  004ADA  6EF7               	movwf	tblptrh,c
  8335  004ADC                     	if	0	;There are less than 3 active tblptr bytes
  8336  004ADC                     	endif
  8337  004ADC  0009               	tblrd		*+
  8338  004ADE  CFF5 F01C          	movff	tablat,___ftmul@f2
  8339  004AE2  0009               	tblrd		*+
  8340  004AE4  CFF5 F01D          	movff	tablat,___ftmul@f2+1
  8341  004AE8  000A               	tblrd		*-
  8342  004AEA  CFF5 F01E          	movff	tablat,___ftmul@f2+2
  8343  004AEE  0E00               	movlw	0
  8344  004AF0  6E0A               	movwf	___awdiv@divisor+1,c
  8345  004AF2  0E64               	movlw	100
  8346  004AF4  6E09               	movwf	___awdiv@divisor,c
  8347  004AF6  502E               	movf	scale@scl,w,c
  8348  004AF8  6E07               	movwf	___awdiv@dividend,c
  8349  004AFA  6A08               	clrf	___awdiv@dividend+1,c
  8350  004AFC  BE07               	btfsc	___awdiv@dividend,7,c
  8351  004AFE  0608               	decf	___awdiv@dividend+1,f,c
  8352  004B00  ECF4  F01D         	call	___awdiv	;wreg free
  8353  004B04  0E12               	movlw	18
  8354  004B06  2407               	addwf	?___awdiv,w,c
  8355  004B08  6E0F               	movwf	___wmul@multiplier,c
  8356  004B0A  0E00               	movlw	0
  8357  004B0C  2008               	addwfc	?___awdiv+1,w,c
  8358  004B0E  6E10               	movwf	___wmul@multiplier+1,c
  8359  004B10  0E00               	movlw	0
  8360  004B12  6E12               	movwf	___wmul@multiplicand+1,c
  8361  004B14  0E03               	movlw	3
  8362  004B16  6E11               	movwf	___wmul@multiplicand,c
  8363  004B18  ECBF  F01B         	call	___wmul	;wreg free
  8364  004B1C  0E55               	movlw	low __npowers_
  8365  004B1E  240F               	addwf	?___wmul,w,c
  8366  004B20  6EF6               	movwf	tblptrl,c
  8367  004B22  0E7F               	movlw	high __npowers_
  8368  004B24  2010               	addwfc	?___wmul+1,w,c
  8369  004B26  6EF7               	movwf	tblptrh,c
  8370  004B28                     	if	0	;There are less than 3 active tblptr bytes
  8371  004B28                     	endif
  8372  004B28  0009               	tblrd		*+
  8373  004B2A  CFF5 F019          	movff	tablat,___ftmul@f1
  8374  004B2E  0009               	tblrd		*+
  8375  004B30  CFF5 F01A          	movff	tablat,___ftmul@f1+1
  8376  004B34  000A               	tblrd		*-
  8377  004B36  CFF5 F01B          	movff	tablat,___ftmul@f1+2
  8378  004B3A  EC58  F020         	call	___ftmul	;wreg free
  8379  004B3E  C019  F02B         	movff	?___ftmul,_scale$1214
  8380  004B42  C01A  F02C         	movff	?___ftmul+1,_scale$1214+1
  8381  004B46  C01B  F02D         	movff	?___ftmul+2,_scale$1214+2
  8382                           
  8383                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8384  004B4A  C02B  F019         	movff	_scale$1214,___ftmul@f1
  8385  004B4E  C02C  F01A         	movff	_scale$1214+1,___ftmul@f1+1
  8386  004B52  C02D  F01B         	movff	_scale$1214+2,___ftmul@f1+2
  8387  004B56  0E00               	movlw	0
  8388  004B58  6E12               	movwf	___wmul@multiplicand+1,c
  8389  004B5A  0E03               	movlw	3
  8390  004B5C  6E11               	movwf	___wmul@multiplicand,c
  8391  004B5E  0E00               	movlw	0
  8392  004B60  6E04               	movwf	___awmod@divisor+1,c
  8393  004B62  0E0A               	movlw	10
  8394  004B64  6E03               	movwf	___awmod@divisor,c
  8395  004B66  502E               	movf	scale@scl,w,c
  8396  004B68  6E01               	movwf	___awmod@dividend,c
  8397  004B6A  6A02               	clrf	___awmod@dividend+1,c
  8398  004B6C  BE01               	btfsc	___awmod@dividend,7,c
  8399  004B6E  0602               	decf	___awmod@dividend+1,f,c
  8400  004B70  EC7B  F01D         	call	___awmod	;wreg free
  8401  004B74  C001  F00F         	movff	?___awmod,___wmul@multiplier
  8402  004B78  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  8403  004B7C  ECBF  F01B         	call	___wmul	;wreg free
  8404  004B80  0E55               	movlw	low __npowers_
  8405  004B82  240F               	addwf	?___wmul,w,c
  8406  004B84  6EF6               	movwf	tblptrl,c
  8407  004B86  0E7F               	movlw	high __npowers_
  8408  004B88  2010               	addwfc	?___wmul+1,w,c
  8409  004B8A  6EF7               	movwf	tblptrh,c
  8410  004B8C                     	if	0	;There are less than 3 active tblptr bytes
  8411  004B8C                     	endif
  8412  004B8C  0009               	tblrd		*+
  8413  004B8E  CFF5 F01C          	movff	tablat,___ftmul@f2
  8414  004B92  0009               	tblrd		*+
  8415  004B94  CFF5 F01D          	movff	tablat,___ftmul@f2+1
  8416  004B98  000A               	tblrd		*-
  8417  004B9A  CFF5 F01E          	movff	tablat,___ftmul@f2+2
  8418  004B9E  EC58  F020         	call	___ftmul	;wreg free
  8419  004BA2  C019  F028         	movff	?___ftmul,?_scale
  8420  004BA6  C01A  F029         	movff	?___ftmul+1,?_scale+1
  8421  004BAA  C01B  F02A         	movff	?___ftmul+2,?_scale+2
  8422  004BAE  0012               	return	
  8423  004BB0                     l3885:
  8424                           
  8425                           ;doprnt.c: 432: else if(scl > 10)
  8426  004BB0  502E               	movf	scale@scl,w,c
  8427  004BB2  0A80               	xorlw	128
  8428  004BB4  0F75               	addlw	-139
  8429  004BB6  A0D8               	btfss	status,0,c
  8430  004BB8  D04D               	goto	l3891
  8431                           
  8432                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8433  004BBA  0E00               	movlw	0
  8434  004BBC  6E0A               	movwf	___awdiv@divisor+1,c
  8435  004BBE  0E0A               	movlw	10
  8436  004BC0  6E09               	movwf	___awdiv@divisor,c
  8437  004BC2  502E               	movf	scale@scl,w,c
  8438  004BC4  6E07               	movwf	___awdiv@dividend,c
  8439  004BC6  6A08               	clrf	___awdiv@dividend+1,c
  8440  004BC8  BE07               	btfsc	___awdiv@dividend,7,c
  8441  004BCA  0608               	decf	___awdiv@dividend+1,f,c
  8442  004BCC  ECF4  F01D         	call	___awdiv	;wreg free
  8443  004BD0  0E09               	movlw	9
  8444  004BD2  2407               	addwf	?___awdiv,w,c
  8445  004BD4  6E0F               	movwf	___wmul@multiplier,c
  8446  004BD6  0E00               	movlw	0
  8447  004BD8  2008               	addwfc	?___awdiv+1,w,c
  8448  004BDA  6E10               	movwf	___wmul@multiplier+1,c
  8449  004BDC  0E00               	movlw	0
  8450  004BDE  6E12               	movwf	___wmul@multiplicand+1,c
  8451  004BE0  0E03               	movlw	3
  8452  004BE2  6E11               	movwf	___wmul@multiplicand,c
  8453  004BE4  ECBF  F01B         	call	___wmul	;wreg free
  8454  004BE8  0E55               	movlw	low __npowers_
  8455  004BEA  240F               	addwf	?___wmul,w,c
  8456  004BEC  6EF6               	movwf	tblptrl,c
  8457  004BEE  0E7F               	movlw	high __npowers_
  8458  004BF0  2010               	addwfc	?___wmul+1,w,c
  8459  004BF2  6EF7               	movwf	tblptrh,c
  8460  004BF4                     	if	0	;There are less than 3 active tblptr bytes
  8461  004BF4                     	endif
  8462  004BF4  0009               	tblrd		*+
  8463  004BF6  CFF5 F019          	movff	tablat,___ftmul@f1
  8464  004BFA  0009               	tblrd		*+
  8465  004BFC  CFF5 F01A          	movff	tablat,___ftmul@f1+1
  8466  004C00  000A               	tblrd		*-
  8467  004C02  CFF5 F01B          	movff	tablat,___ftmul@f1+2
  8468  004C06  0E00               	movlw	0
  8469  004C08  6E12               	movwf	___wmul@multiplicand+1,c
  8470  004C0A  0E03               	movlw	3
  8471  004C0C  6E11               	movwf	___wmul@multiplicand,c
  8472  004C0E  0E00               	movlw	0
  8473  004C10  6E04               	movwf	___awmod@divisor+1,c
  8474  004C12  0E0A               	movlw	10
  8475  004C14  6E03               	movwf	___awmod@divisor,c
  8476  004C16  502E               	movf	scale@scl,w,c
  8477  004C18  6E01               	movwf	___awmod@dividend,c
  8478  004C1A  6A02               	clrf	___awmod@dividend+1,c
  8479  004C1C  BE01               	btfsc	___awmod@dividend,7,c
  8480  004C1E  0602               	decf	___awmod@dividend+1,f,c
  8481  004C20  EC7B  F01D         	call	___awmod	;wreg free
  8482  004C24  C001  F00F         	movff	?___awmod,___wmul@multiplier
  8483  004C28  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  8484  004C2C  ECBF  F01B         	call	___wmul	;wreg free
  8485  004C30  0E55               	movlw	low __npowers_
  8486  004C32  240F               	addwf	?___wmul,w,c
  8487  004C34  6EF6               	movwf	tblptrl,c
  8488  004C36  0E7F               	movlw	high __npowers_
  8489  004C38  2010               	addwfc	?___wmul+1,w,c
  8490  004C3A  6EF7               	movwf	tblptrh,c
  8491  004C3C                     	if	0	;There are less than 3 active tblptr bytes
  8492  004C3C                     	endif
  8493  004C3C  0009               	tblrd		*+
  8494  004C3E  CFF5 F01C          	movff	tablat,___ftmul@f2
  8495  004C42  0009               	tblrd		*+
  8496  004C44  CFF5 F01D          	movff	tablat,___ftmul@f2+1
  8497  004C48  000A               	tblrd		*-
  8498  004C4A  CFF5 F01E          	movff	tablat,___ftmul@f2+2
  8499  004C4E  EC58  F020         	call	___ftmul	;wreg free
  8500  004C52  D7A7               	goto	L13
  8501  004C54                     l3891:
  8502                           
  8503                           ;doprnt.c: 434: return _npowers_[scl];
  8504  004C54  502E               	movf	scale@scl,w,c
  8505  004C56  0D03               	mullw	3
  8506  004C58  0E55               	movlw	low __npowers_
  8507  004C5A  24F3               	addwf	prodl,w,c
  8508  004C5C  6EF6               	movwf	tblptrl,c
  8509  004C5E  0E7F               	movlw	high __npowers_
  8510  004C60  20F4               	addwfc	prodh,w,c
  8511  004C62  6EF7               	movwf	tblptrh,c
  8512  004C64                     	if	0	;There are less than 3 active tblptr bytes
  8513  004C64                     	endif
  8514  004C64  0009               	tblrd		*+
  8515  004C66  CFF5 F028          	movff	tablat,?_scale
  8516  004C6A  0009               	tblrd		*+
  8517  004C6C  CFF5 F029          	movff	tablat,?_scale+1
  8518  004C70  000A               	tblrd		*-
  8519  004C72  CFF5 F02A          	movff	tablat,?_scale+2
  8520  004C76  0012               	return	
  8521  004C78                     l3895:
  8522                           
  8523                           ;doprnt.c: 435: }
  8524                           ;doprnt.c: 436: if(scl>=110)
  8525  004C78  502E               	movf	scale@scl,w,c
  8526  004C7A  0A80               	xorlw	128
  8527  004C7C  0F12               	addlw	-238
  8528  004C7E  A0D8               	btfss	status,0,c
  8529  004C80  D091               	goto	l3903
  8530                           
  8531                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8532  004C82  0E00               	movlw	0
  8533  004C84  6E12               	movwf	___wmul@multiplicand+1,c
  8534  004C86  0E03               	movlw	3
  8535  004C88  6E11               	movwf	___wmul@multiplicand,c
  8536  004C8A  0E00               	movlw	0
  8537  004C8C  6E0A               	movwf	___awdiv@divisor+1,c
  8538  004C8E  0E0A               	movlw	10
  8539  004C90  6E09               	movwf	___awdiv@divisor,c
  8540  004C92  0E00               	movlw	0
  8541  004C94  6E04               	movwf	___awmod@divisor+1,c
  8542  004C96  0E64               	movlw	100
  8543  004C98  6E03               	movwf	___awmod@divisor,c
  8544  004C9A  502E               	movf	scale@scl,w,c
  8545  004C9C  6E01               	movwf	___awmod@dividend,c
  8546  004C9E  6A02               	clrf	___awmod@dividend+1,c
  8547  004CA0  BE01               	btfsc	___awmod@dividend,7,c
  8548  004CA2  0602               	decf	___awmod@dividend+1,f,c
  8549  004CA4  EC7B  F01D         	call	___awmod	;wreg free
  8550  004CA8  C001  F007         	movff	?___awmod,___awdiv@dividend
  8551  004CAC  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  8552  004CB0  ECF4  F01D         	call	___awdiv	;wreg free
  8553  004CB4  0E09               	movlw	9
  8554  004CB6  2407               	addwf	?___awdiv,w,c
  8555  004CB8  6E0F               	movwf	___wmul@multiplier,c
  8556  004CBA  0E00               	movlw	0
  8557  004CBC  2008               	addwfc	?___awdiv+1,w,c
  8558  004CBE  6E10               	movwf	___wmul@multiplier+1,c
  8559  004CC0  ECBF  F01B         	call	___wmul	;wreg free
  8560  004CC4  0E7C               	movlw	low __powers_
  8561  004CC6  240F               	addwf	?___wmul,w,c
  8562  004CC8  6EF6               	movwf	tblptrl,c
  8563  004CCA  0E7F               	movlw	high __powers_
  8564  004CCC  2010               	addwfc	?___wmul+1,w,c
  8565  004CCE  6EF7               	movwf	tblptrh,c
  8566  004CD0                     	if	0	;There are less than 3 active tblptr bytes
  8567  004CD0                     	endif
  8568  004CD0  0009               	tblrd		*+
  8569  004CD2  CFF5 F01C          	movff	tablat,___ftmul@f2
  8570  004CD6  0009               	tblrd		*+
  8571  004CD8  CFF5 F01D          	movff	tablat,___ftmul@f2+1
  8572  004CDC  000A               	tblrd		*-
  8573  004CDE  CFF5 F01E          	movff	tablat,___ftmul@f2+2
  8574  004CE2  0E00               	movlw	0
  8575  004CE4  6E0A               	movwf	___awdiv@divisor+1,c
  8576  004CE6  0E64               	movlw	100
  8577  004CE8  6E09               	movwf	___awdiv@divisor,c
  8578  004CEA  502E               	movf	scale@scl,w,c
  8579  004CEC  6E07               	movwf	___awdiv@dividend,c
  8580  004CEE  6A08               	clrf	___awdiv@dividend+1,c
  8581  004CF0  BE07               	btfsc	___awdiv@dividend,7,c
  8582  004CF2  0608               	decf	___awdiv@dividend+1,f,c
  8583  004CF4  ECF4  F01D         	call	___awdiv	;wreg free
  8584  004CF8  0E12               	movlw	18
  8585  004CFA  2407               	addwf	?___awdiv,w,c
  8586  004CFC  6E0F               	movwf	___wmul@multiplier,c
  8587  004CFE  0E00               	movlw	0
  8588  004D00  2008               	addwfc	?___awdiv+1,w,c
  8589  004D02  6E10               	movwf	___wmul@multiplier+1,c
  8590  004D04  0E00               	movlw	0
  8591  004D06  6E12               	movwf	___wmul@multiplicand+1,c
  8592  004D08  0E03               	movlw	3
  8593  004D0A  6E11               	movwf	___wmul@multiplicand,c
  8594  004D0C  ECBF  F01B         	call	___wmul	;wreg free
  8595  004D10  0E7C               	movlw	low __powers_
  8596  004D12  240F               	addwf	?___wmul,w,c
  8597  004D14  6EF6               	movwf	tblptrl,c
  8598  004D16  0E7F               	movlw	high __powers_
  8599  004D18  2010               	addwfc	?___wmul+1,w,c
  8600  004D1A  6EF7               	movwf	tblptrh,c
  8601  004D1C                     	if	0	;There are less than 3 active tblptr bytes
  8602  004D1C                     	endif
  8603  004D1C  0009               	tblrd		*+
  8604  004D1E  CFF5 F019          	movff	tablat,___ftmul@f1
  8605  004D22  0009               	tblrd		*+
  8606  004D24  CFF5 F01A          	movff	tablat,___ftmul@f1+1
  8607  004D28  000A               	tblrd		*-
  8608  004D2A  CFF5 F01B          	movff	tablat,___ftmul@f1+2
  8609  004D2E  EC58  F020         	call	___ftmul	;wreg free
  8610  004D32  C019  F02B         	movff	?___ftmul,_scale$1214
  8611  004D36  C01A  F02C         	movff	?___ftmul+1,_scale$1214+1
  8612  004D3A  C01B  F02D         	movff	?___ftmul+2,_scale$1214+2
  8613                           
  8614                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8615  004D3E  C02B  F019         	movff	_scale$1214,___ftmul@f1
  8616  004D42  C02C  F01A         	movff	_scale$1214+1,___ftmul@f1+1
  8617  004D46  C02D  F01B         	movff	_scale$1214+2,___ftmul@f1+2
  8618  004D4A  0E00               	movlw	0
  8619  004D4C  6E12               	movwf	___wmul@multiplicand+1,c
  8620  004D4E  0E03               	movlw	3
  8621  004D50  6E11               	movwf	___wmul@multiplicand,c
  8622  004D52  0E00               	movlw	0
  8623  004D54  6E04               	movwf	___awmod@divisor+1,c
  8624  004D56  0E0A               	movlw	10
  8625  004D58  6E03               	movwf	___awmod@divisor,c
  8626  004D5A  502E               	movf	scale@scl,w,c
  8627  004D5C  6E01               	movwf	___awmod@dividend,c
  8628  004D5E  6A02               	clrf	___awmod@dividend+1,c
  8629  004D60  BE01               	btfsc	___awmod@dividend,7,c
  8630  004D62  0602               	decf	___awmod@dividend+1,f,c
  8631  004D64  EC7B  F01D         	call	___awmod	;wreg free
  8632  004D68  C001  F00F         	movff	?___awmod,___wmul@multiplier
  8633  004D6C  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  8634  004D70  ECBF  F01B         	call	___wmul	;wreg free
  8635  004D74  0E7C               	movlw	low __powers_
  8636  004D76  240F               	addwf	?___wmul,w,c
  8637  004D78  6EF6               	movwf	tblptrl,c
  8638  004D7A  0E7F               	movlw	high __powers_
  8639  004D7C  2010               	addwfc	?___wmul+1,w,c
  8640  004D7E  6EF7               	movwf	tblptrh,c
  8641  004D80                     	if	0	;There are less than 3 active tblptr bytes
  8642  004D80                     	endif
  8643  004D80  0009               	tblrd		*+
  8644  004D82  CFF5 F01C          	movff	tablat,___ftmul@f2
  8645  004D86  0009               	tblrd		*+
  8646  004D88  CFF5 F01D          	movff	tablat,___ftmul@f2+1
  8647  004D8C  000A               	tblrd		*-
  8648  004D8E  CFF5 F01E          	movff	tablat,___ftmul@f2+2
  8649  004D92  EC58  F020         	call	___ftmul	;wreg free
  8650  004D96  C019  F028         	movff	?___ftmul,?_scale
  8651  004D9A  C01A  F029         	movff	?___ftmul+1,?_scale+1
  8652  004D9E  C01B  F02A         	movff	?___ftmul+2,?_scale+2
  8653  004DA2  0012               	return	
  8654  004DA4                     l3903:
  8655                           
  8656                           ;doprnt.c: 438: else if(scl > 10)
  8657  004DA4  502E               	movf	scale@scl,w,c
  8658  004DA6  0A80               	xorlw	128
  8659  004DA8  0F75               	addlw	-139
  8660  004DAA  A0D8               	btfss	status,0,c
  8661  004DAC  D04D               	goto	l3909
  8662                           
  8663                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8664  004DAE  0E00               	movlw	0
  8665  004DB0  6E0A               	movwf	___awdiv@divisor+1,c
  8666  004DB2  0E0A               	movlw	10
  8667  004DB4  6E09               	movwf	___awdiv@divisor,c
  8668  004DB6  502E               	movf	scale@scl,w,c
  8669  004DB8  6E07               	movwf	___awdiv@dividend,c
  8670  004DBA  6A08               	clrf	___awdiv@dividend+1,c
  8671  004DBC  BE07               	btfsc	___awdiv@dividend,7,c
  8672  004DBE  0608               	decf	___awdiv@dividend+1,f,c
  8673  004DC0  ECF4  F01D         	call	___awdiv	;wreg free
  8674  004DC4  0E09               	movlw	9
  8675  004DC6  2407               	addwf	?___awdiv,w,c
  8676  004DC8  6E0F               	movwf	___wmul@multiplier,c
  8677  004DCA  0E00               	movlw	0
  8678  004DCC  2008               	addwfc	?___awdiv+1,w,c
  8679  004DCE  6E10               	movwf	___wmul@multiplier+1,c
  8680  004DD0  0E00               	movlw	0
  8681  004DD2  6E12               	movwf	___wmul@multiplicand+1,c
  8682  004DD4  0E03               	movlw	3
  8683  004DD6  6E11               	movwf	___wmul@multiplicand,c
  8684  004DD8  ECBF  F01B         	call	___wmul	;wreg free
  8685  004DDC  0E7C               	movlw	low __powers_
  8686  004DDE  240F               	addwf	?___wmul,w,c
  8687  004DE0  6EF6               	movwf	tblptrl,c
  8688  004DE2  0E7F               	movlw	high __powers_
  8689  004DE4  2010               	addwfc	?___wmul+1,w,c
  8690  004DE6  6EF7               	movwf	tblptrh,c
  8691  004DE8                     	if	0	;There are less than 3 active tblptr bytes
  8692  004DE8                     	endif
  8693  004DE8  0009               	tblrd		*+
  8694  004DEA  CFF5 F019          	movff	tablat,___ftmul@f1
  8695  004DEE  0009               	tblrd		*+
  8696  004DF0  CFF5 F01A          	movff	tablat,___ftmul@f1+1
  8697  004DF4  000A               	tblrd		*-
  8698  004DF6  CFF5 F01B          	movff	tablat,___ftmul@f1+2
  8699  004DFA  0E00               	movlw	0
  8700  004DFC  6E12               	movwf	___wmul@multiplicand+1,c
  8701  004DFE  0E03               	movlw	3
  8702  004E00  6E11               	movwf	___wmul@multiplicand,c
  8703  004E02  0E00               	movlw	0
  8704  004E04  6E04               	movwf	___awmod@divisor+1,c
  8705  004E06  0E0A               	movlw	10
  8706  004E08  6E03               	movwf	___awmod@divisor,c
  8707  004E0A  502E               	movf	scale@scl,w,c
  8708  004E0C  6E01               	movwf	___awmod@dividend,c
  8709  004E0E  6A02               	clrf	___awmod@dividend+1,c
  8710  004E10  BE01               	btfsc	___awmod@dividend,7,c
  8711  004E12  0602               	decf	___awmod@dividend+1,f,c
  8712  004E14  EC7B  F01D         	call	___awmod	;wreg free
  8713  004E18  C001  F00F         	movff	?___awmod,___wmul@multiplier
  8714  004E1C  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  8715  004E20  ECBF  F01B         	call	___wmul	;wreg free
  8716  004E24  0E7C               	movlw	low __powers_
  8717  004E26  240F               	addwf	?___wmul,w,c
  8718  004E28  6EF6               	movwf	tblptrl,c
  8719  004E2A  0E7F               	movlw	high __powers_
  8720  004E2C  2010               	addwfc	?___wmul+1,w,c
  8721  004E2E  6EF7               	movwf	tblptrh,c
  8722  004E30                     	if	0	;There are less than 3 active tblptr bytes
  8723  004E30                     	endif
  8724  004E30  0009               	tblrd		*+
  8725  004E32  CFF5 F01C          	movff	tablat,___ftmul@f2
  8726  004E36  0009               	tblrd		*+
  8727  004E38  CFF5 F01D          	movff	tablat,___ftmul@f2+1
  8728  004E3C  000A               	tblrd		*-
  8729  004E3E  CFF5 F01E          	movff	tablat,___ftmul@f2+2
  8730  004E42  EC58  F020         	call	___ftmul	;wreg free
  8731  004E46  D7A7               	goto	L14
  8732  004E48                     l3909:
  8733                           
  8734                           ;doprnt.c: 440: return _powers_[scl];
  8735  004E48  502E               	movf	scale@scl,w,c
  8736  004E4A  0D03               	mullw	3
  8737  004E4C  0E7C               	movlw	low __powers_
  8738  004E4E  24F3               	addwf	prodl,w,c
  8739  004E50  6EF6               	movwf	tblptrl,c
  8740  004E52  0E7F               	movlw	high __powers_
  8741  004E54  20F4               	addwfc	prodh,w,c
  8742  004E56  6EF7               	movwf	tblptrh,c
  8743  004E58                     	if	0	;There are less than 3 active tblptr bytes
  8744  004E58                     	endif
  8745  004E58  0009               	tblrd		*+
  8746  004E5A  CFF5 F028          	movff	tablat,?_scale
  8747  004E5E  0009               	tblrd		*+
  8748  004E60  CFF5 F029          	movff	tablat,?_scale+1
  8749  004E64  000A               	tblrd		*-
  8750  004E66  CFF5 F02A          	movff	tablat,?_scale+2
  8751  004E6A  0012               	return	
  8752  004E6C                     __end_of_scale:
  8753                           	opt stack 0
  8754                           tblptru	equ	0xFF8
  8755                           tblptrh	equ	0xFF7
  8756                           tblptrl	equ	0xFF6
  8757                           tablat	equ	0xFF5
  8758                           prodh	equ	0xFF4
  8759                           prodl	equ	0xFF3
  8760                           postinc0	equ	0xFEE
  8761                           wreg	equ	0xFE8
  8762                           indf1	equ	0xFE7
  8763                           postdec1	equ	0xFE5
  8764                           fsr1h	equ	0xFE2
  8765                           fsr1l	equ	0xFE1
  8766                           indf2	equ	0xFDF
  8767                           postinc2	equ	0xFDE
  8768                           postdec2	equ	0xFDD
  8769                           fsr2h	equ	0xFDA
  8770                           fsr2l	equ	0xFD9
  8771                           status	equ	0xFD8
  8772                           
  8773 ;; *************** function _isdigit *****************
  8774 ;; Defined at:
  8775 ;;		line 8 in file "/opt/microchip/xc8/v1.37/sources/common/isdigit.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  c               1    wreg     unsigned char 
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;  c               1    2[COMRAM] unsigned char 
  8780 ;; Return value:  Size  Location     Type
  8781 ;;		None               void
  8782 ;; Registers used:
  8783 ;;		wreg, status,2, status,0
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8789 ;;      Params:         0       0       0       0       0       0       0       0       0
  8790 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8791 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8792 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8793 ;;Total ram usage:        3 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; This function calls:
  8796 ;;		Nothing
  8797 ;; This function is called by:
  8798 ;;		_sprintf
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           	psect	text6
  8803  0036D4                     __ptext6:
  8804                           	opt stack 0
  8805  0036D4                     _isdigit:
  8806                           	opt stack 29
  8807                           
  8808                           ;incstack = 0
  8809                           ;isdigit@c stored from wreg
  8810  0036D4  6E03               	movwf	isdigit@c,c
  8811  0036D6  0E00               	movlw	0
  8812  0036D8  6E02               	movwf	_isdigit$869,c
  8813  0036DA  0E3A               	movlw	58
  8814  0036DC  6003               	cpfslt	isdigit@c,c
  8815  0036DE  D005               	goto	l3921
  8816  0036E0  0E2F               	movlw	47
  8817  0036E2  6403               	cpfsgt	isdigit@c,c
  8818  0036E4  D002               	goto	l3921
  8819  0036E6  0E01               	movlw	1
  8820  0036E8  6E02               	movwf	_isdigit$869,c
  8821  0036EA                     l3921:
  8822  0036EA  C002  F001         	movff	_isdigit$869,??_isdigit
  8823  0036EE  3001               	rrcf	??_isdigit,w,c
  8824  0036F0  0012               	return	
  8825  0036F2                     __end_of_isdigit:
  8826                           	opt stack 0
  8827                           tblptru	equ	0xFF8
  8828                           tblptrh	equ	0xFF7
  8829                           tblptrl	equ	0xFF6
  8830                           tablat	equ	0xFF5
  8831                           prodh	equ	0xFF4
  8832                           prodl	equ	0xFF3
  8833                           postinc0	equ	0xFEE
  8834                           wreg	equ	0xFE8
  8835                           indf1	equ	0xFE7
  8836                           postdec1	equ	0xFE5
  8837                           fsr1h	equ	0xFE2
  8838                           fsr1l	equ	0xFE1
  8839                           indf2	equ	0xFDF
  8840                           postinc2	equ	0xFDE
  8841                           postdec2	equ	0xFDD
  8842                           fsr2h	equ	0xFDA
  8843                           fsr2l	equ	0xFD9
  8844                           status	equ	0xFD8
  8845                           
  8846 ;; *************** function _fround *****************
  8847 ;; Defined at:
  8848 ;;		line 409 in file "/opt/microchip/xc8/v1.37/sources/common/doprnt.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;  prec            1    wreg     unsigned char 
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;  prec            1   48[COMRAM] unsigned char 
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  3   39[COMRAM] unsigned char 
  8855 ;; Registers used:
  8856 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8862 ;;      Params:         3       0       0       0       0       0       0       0       0
  8863 ;;      Locals:         7       0       0       0       0       0       0       0       0
  8864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8865 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8866 ;;Total ram usage:       10 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:    2
  8869 ;; This function calls:
  8870 ;;		___awdiv
  8871 ;;		___awmod
  8872 ;;		___ftmul
  8873 ;;		___wmul
  8874 ;; This function is called by:
  8875 ;;		_sprintf
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text7
  8880  004836                     __ptext7:
  8881                           	opt stack 0
  8882  004836                     _fround:
  8883                           	opt stack 27
  8884                           
  8885                           ;incstack = 0
  8886                           ;fround@prec stored from wreg
  8887  004836  6E31               	movwf	fround@prec,c
  8888                           
  8889                           ;doprnt.c: 413: if(prec>=110)
  8890  004838  0E6D               	movlw	109
  8891  00483A  6431               	cpfsgt	fround@prec,c
  8892  00483C  D09F               	goto	l3863
  8893                           
  8894                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8895  00483E  0E00               	movlw	0
  8896  004840  6E12               	movwf	___wmul@multiplicand+1,c
  8897  004842  0E03               	movlw	3
  8898  004844  6E11               	movwf	___wmul@multiplicand,c
  8899  004846  0E00               	movlw	0
  8900  004848  6E0A               	movwf	___awdiv@divisor+1,c
  8901  00484A  0E0A               	movlw	10
  8902  00484C  6E09               	movwf	___awdiv@divisor,c
  8903  00484E  0E00               	movlw	0
  8904  004850  6E04               	movwf	___awmod@divisor+1,c
  8905  004852  0E64               	movlw	100
  8906  004854  6E03               	movwf	___awmod@divisor,c
  8907  004856  C031  F001         	movff	fround@prec,___awmod@dividend
  8908  00485A  6A02               	clrf	___awmod@dividend+1,c
  8909  00485C  EC7B  F01D         	call	___awmod	;wreg free
  8910  004860  C001  F007         	movff	?___awmod,___awdiv@dividend
  8911  004864  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  8912  004868  ECF4  F01D         	call	___awdiv	;wreg free
  8913  00486C  0E09               	movlw	9
  8914  00486E  2407               	addwf	?___awdiv,w,c
  8915  004870  6E0F               	movwf	___wmul@multiplier,c
  8916  004872  0E00               	movlw	0
  8917  004874  2008               	addwfc	?___awdiv+1,w,c
  8918  004876  6E10               	movwf	___wmul@multiplier+1,c
  8919  004878  ECBF  F01B         	call	___wmul	;wreg free
  8920  00487C  0E55               	movlw	low __npowers_
  8921  00487E  240F               	addwf	?___wmul,w,c
  8922  004880  6EF6               	movwf	tblptrl,c
  8923  004882  0E7F               	movlw	high __npowers_
  8924  004884  2010               	addwfc	?___wmul+1,w,c
  8925  004886  6EF7               	movwf	tblptrh,c
  8926  004888                     	if	0	;There are less than 3 active tblptr bytes
  8927  004888                     	endif
  8928  004888  0009               	tblrd		*+
  8929  00488A  CFF5 F01C          	movff	tablat,___ftmul@f2
  8930  00488E  0009               	tblrd		*+
  8931  004890  CFF5 F01D          	movff	tablat,___ftmul@f2+1
  8932  004894  000A               	tblrd		*-
  8933  004896  CFF5 F01E          	movff	tablat,___ftmul@f2+2
  8934  00489A  0E00               	movlw	0
  8935  00489C  6E0A               	movwf	___awdiv@divisor+1,c
  8936  00489E  0E64               	movlw	100
  8937  0048A0  6E09               	movwf	___awdiv@divisor,c
  8938  0048A2  C031  F007         	movff	fround@prec,___awdiv@dividend
  8939  0048A6  6A08               	clrf	___awdiv@dividend+1,c
  8940  0048A8  ECF4  F01D         	call	___awdiv	;wreg free
  8941  0048AC  0E12               	movlw	18
  8942  0048AE  2407               	addwf	?___awdiv,w,c
  8943  0048B0  6E0F               	movwf	___wmul@multiplier,c
  8944  0048B2  0E00               	movlw	0
  8945  0048B4  2008               	addwfc	?___awdiv+1,w,c
  8946  0048B6  6E10               	movwf	___wmul@multiplier+1,c
  8947  0048B8  0E00               	movlw	0
  8948  0048BA  6E12               	movwf	___wmul@multiplicand+1,c
  8949  0048BC  0E03               	movlw	3
  8950  0048BE  6E11               	movwf	___wmul@multiplicand,c
  8951  0048C0  ECBF  F01B         	call	___wmul	;wreg free
  8952  0048C4  0E55               	movlw	low __npowers_
  8953  0048C6  240F               	addwf	?___wmul,w,c
  8954  0048C8  6EF6               	movwf	tblptrl,c
  8955  0048CA  0E7F               	movlw	high __npowers_
  8956  0048CC  2010               	addwfc	?___wmul+1,w,c
  8957  0048CE  6EF7               	movwf	tblptrh,c
  8958  0048D0                     	if	0	;There are less than 3 active tblptr bytes
  8959  0048D0                     	endif
  8960  0048D0  0009               	tblrd		*+
  8961  0048D2  CFF5 F019          	movff	tablat,___ftmul@f1
  8962  0048D6  0009               	tblrd		*+
  8963  0048D8  CFF5 F01A          	movff	tablat,___ftmul@f1+1
  8964  0048DC  000A               	tblrd		*-
  8965  0048DE  CFF5 F01B          	movff	tablat,___ftmul@f1+2
  8966  0048E2  EC58  F020         	call	___ftmul	;wreg free
  8967  0048E6  C019  F02E         	movff	?___ftmul,_fround$1212
  8968  0048EA  C01A  F02F         	movff	?___ftmul+1,_fround$1212+1
  8969  0048EE  C01B  F030         	movff	?___ftmul+2,_fround$1212+2
  8970                           
  8971                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8972  0048F2  0E00               	movlw	0
  8973  0048F4  6E12               	movwf	___wmul@multiplicand+1,c
  8974  0048F6  0E03               	movlw	3
  8975  0048F8  6E11               	movwf	___wmul@multiplicand,c
  8976  0048FA  0E00               	movlw	0
  8977  0048FC  6E04               	movwf	___awmod@divisor+1,c
  8978  0048FE  0E0A               	movlw	10
  8979  004900  6E03               	movwf	___awmod@divisor,c
  8980  004902  C031  F001         	movff	fround@prec,___awmod@dividend
  8981  004906  6A02               	clrf	___awmod@dividend+1,c
  8982  004908  EC7B  F01D         	call	___awmod	;wreg free
  8983  00490C  C001  F00F         	movff	?___awmod,___wmul@multiplier
  8984  004910  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  8985  004914  ECBF  F01B         	call	___wmul	;wreg free
  8986  004918  0E55               	movlw	low __npowers_
  8987  00491A  240F               	addwf	?___wmul,w,c
  8988  00491C  6EF6               	movwf	tblptrl,c
  8989  00491E  0E7F               	movlw	high __npowers_
  8990  004920  2010               	addwfc	?___wmul+1,w,c
  8991  004922  6EF7               	movwf	tblptrh,c
  8992  004924                     	if	0	;There are less than 3 active tblptr bytes
  8993  004924                     	endif
  8994  004924  0009               	tblrd		*+
  8995  004926  CFF5 F01C          	movff	tablat,___ftmul@f2
  8996  00492A  0009               	tblrd		*+
  8997  00492C  CFF5 F01D          	movff	tablat,___ftmul@f2+1
  8998  004930  000A               	tblrd		*-
  8999  004932  CFF5 F01E          	movff	tablat,___ftmul@f2+2
  9000  004936  C02E  F019         	movff	_fround$1212,___ftmul@f1
  9001  00493A  C02F  F01A         	movff	_fround$1212+1,___ftmul@f1+1
  9002  00493E  C030  F01B         	movff	_fround$1212+2,___ftmul@f1+2
  9003  004942  EC58  F020         	call	___ftmul	;wreg free
  9004  004946  C019  F02B         	movff	?___ftmul,_fround$1213
  9005  00494A  C01A  F02C         	movff	?___ftmul+1,_fround$1213+1
  9006  00494E  C01B  F02D         	movff	?___ftmul+2,_fround$1213+2
  9007                           
  9008                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9009  004952  C02B  F019         	movff	_fround$1213,___ftmul@f1
  9010  004956  C02C  F01A         	movff	_fround$1213+1,___ftmul@f1+1
  9011  00495A  C02D  F01B         	movff	_fround$1213+2,___ftmul@f1+2
  9012  00495E  0E00               	movlw	0
  9013  004960  6E1C               	movwf	___ftmul@f2,c
  9014  004962  0E00               	movlw	0
  9015  004964  6E1D               	movwf	___ftmul@f2+1,c
  9016  004966  0E3F               	movlw	63
  9017  004968  6E1E               	movwf	___ftmul@f2+2,c
  9018  00496A  EC58  F020         	call	___ftmul	;wreg free
  9019  00496E  C019  F028         	movff	?___ftmul,?_fround
  9020  004972  C01A  F029         	movff	?___ftmul+1,?_fround+1
  9021  004976  C01B  F02A         	movff	?___ftmul+2,?_fround+2
  9022  00497A  0012               	return	
  9023  00497C                     l3863:
  9024                           
  9025                           ;doprnt.c: 415: else if(prec > 10)
  9026  00497C  0E0A               	movlw	10
  9027  00497E  6431               	cpfsgt	fround@prec,c
  9028  004980  D05D               	goto	l3871
  9029                           
  9030                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9031  004982  0E00               	movlw	0
  9032  004984  6E12               	movwf	___wmul@multiplicand+1,c
  9033  004986  0E03               	movlw	3
  9034  004988  6E11               	movwf	___wmul@multiplicand,c
  9035  00498A  0E00               	movlw	0
  9036  00498C  6E04               	movwf	___awmod@divisor+1,c
  9037  00498E  0E0A               	movlw	10
  9038  004990  6E03               	movwf	___awmod@divisor,c
  9039  004992  C031  F001         	movff	fround@prec,___awmod@dividend
  9040  004996  6A02               	clrf	___awmod@dividend+1,c
  9041  004998  EC7B  F01D         	call	___awmod	;wreg free
  9042  00499C  C001  F00F         	movff	?___awmod,___wmul@multiplier
  9043  0049A0  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  9044  0049A4  ECBF  F01B         	call	___wmul	;wreg free
  9045  0049A8  0E55               	movlw	low __npowers_
  9046  0049AA  240F               	addwf	?___wmul,w,c
  9047  0049AC  6EF6               	movwf	tblptrl,c
  9048  0049AE  0E7F               	movlw	high __npowers_
  9049  0049B0  2010               	addwfc	?___wmul+1,w,c
  9050  0049B2  6EF7               	movwf	tblptrh,c
  9051  0049B4                     	if	0	;There are less than 3 active tblptr bytes
  9052  0049B4                     	endif
  9053  0049B4  0009               	tblrd		*+
  9054  0049B6  CFF5 F01C          	movff	tablat,___ftmul@f2
  9055  0049BA  0009               	tblrd		*+
  9056  0049BC  CFF5 F01D          	movff	tablat,___ftmul@f2+1
  9057  0049C0  000A               	tblrd		*-
  9058  0049C2  CFF5 F01E          	movff	tablat,___ftmul@f2+2
  9059  0049C6  0E00               	movlw	0
  9060  0049C8  6E0A               	movwf	___awdiv@divisor+1,c
  9061  0049CA  0E0A               	movlw	10
  9062  0049CC  6E09               	movwf	___awdiv@divisor,c
  9063  0049CE  C031  F007         	movff	fround@prec,___awdiv@dividend
  9064  0049D2  6A08               	clrf	___awdiv@dividend+1,c
  9065  0049D4  ECF4  F01D         	call	___awdiv	;wreg free
  9066  0049D8  0E09               	movlw	9
  9067  0049DA  2407               	addwf	?___awdiv,w,c
  9068  0049DC  6E0F               	movwf	___wmul@multiplier,c
  9069  0049DE  0E00               	movlw	0
  9070  0049E0  2008               	addwfc	?___awdiv+1,w,c
  9071  0049E2  6E10               	movwf	___wmul@multiplier+1,c
  9072  0049E4  0E00               	movlw	0
  9073  0049E6  6E12               	movwf	___wmul@multiplicand+1,c
  9074  0049E8  0E03               	movlw	3
  9075  0049EA  6E11               	movwf	___wmul@multiplicand,c
  9076  0049EC  ECBF  F01B         	call	___wmul	;wreg free
  9077  0049F0  0E55               	movlw	low __npowers_
  9078  0049F2  240F               	addwf	?___wmul,w,c
  9079  0049F4  6EF6               	movwf	tblptrl,c
  9080  0049F6  0E7F               	movlw	high __npowers_
  9081  0049F8  2010               	addwfc	?___wmul+1,w,c
  9082  0049FA  6EF7               	movwf	tblptrh,c
  9083  0049FC                     	if	0	;There are less than 3 active tblptr bytes
  9084  0049FC                     	endif
  9085  0049FC  0009               	tblrd		*+
  9086  0049FE  CFF5 F019          	movff	tablat,___ftmul@f1
  9087  004A02  0009               	tblrd		*+
  9088  004A04  CFF5 F01A          	movff	tablat,___ftmul@f1+1
  9089  004A08  000A               	tblrd		*-
  9090  004A0A  CFF5 F01B          	movff	tablat,___ftmul@f1+2
  9091  004A0E  EC58  F020         	call	___ftmul	;wreg free
  9092  004A12  C019  F02E         	movff	?___ftmul,_fround$1212
  9093  004A16  C01A  F02F         	movff	?___ftmul+1,_fround$1212+1
  9094  004A1A  C01B  F030         	movff	?___ftmul+2,_fround$1212+2
  9095                           
  9096                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9097  004A1E  C02E  F019         	movff	_fround$1212,___ftmul@f1
  9098  004A22  C02F  F01A         	movff	_fround$1212+1,___ftmul@f1+1
  9099  004A26  C030  F01B         	movff	_fround$1212+2,___ftmul@f1+2
  9100  004A2A  0E00               	movlw	0
  9101  004A2C  6E1C               	movwf	___ftmul@f2,c
  9102  004A2E  0E00               	movlw	0
  9103  004A30  6E1D               	movwf	___ftmul@f2+1,c
  9104  004A32  0E3F               	movlw	63
  9105  004A34  6E1E               	movwf	___ftmul@f2+2,c
  9106  004A36  EC58  F020         	call	___ftmul	;wreg free
  9107  004A3A  D799               	goto	L15
  9108  004A3C                     l3871:
  9109                           
  9110                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9111  004A3C  5031               	movf	fround@prec,w,c
  9112  004A3E  0D03               	mullw	3
  9113  004A40  0E55               	movlw	low __npowers_
  9114  004A42  24F3               	addwf	prodl,w,c
  9115  004A44  6EF6               	movwf	tblptrl,c
  9116  004A46  0E7F               	movlw	high __npowers_
  9117  004A48  20F4               	addwfc	prodh,w,c
  9118  004A4A  6EF7               	movwf	tblptrh,c
  9119  004A4C                     	if	0	;There are less than 3 active tblptr bytes
  9120  004A4C                     	endif
  9121  004A4C  0009               	tblrd		*+
  9122  004A4E  CFF5 F019          	movff	tablat,___ftmul@f1
  9123  004A52  0009               	tblrd		*+
  9124  004A54  CFF5 F01A          	movff	tablat,___ftmul@f1+1
  9125  004A58  000A               	tblrd		*-
  9126  004A5A  CFF5 F01B          	movff	tablat,___ftmul@f1+2
  9127  004A5E  0E00               	movlw	0
  9128  004A60  6E1C               	movwf	___ftmul@f2,c
  9129  004A62  0E00               	movlw	0
  9130  004A64  6E1D               	movwf	___ftmul@f2+1,c
  9131  004A66  0E3F               	movlw	63
  9132  004A68  6E1E               	movwf	___ftmul@f2+2,c
  9133  004A6A  EC58  F020         	call	___ftmul	;wreg free
  9134  004A6E  C019  F028         	movff	?___ftmul,?_fround
  9135  004A72  C01A  F029         	movff	?___ftmul+1,?_fround+1
  9136  004A76  C01B  F02A         	movff	?___ftmul+2,?_fround+2
  9137  004A7A  0012               	return	
  9138  004A7C                     __end_of_fround:
  9139                           	opt stack 0
  9140                           tblptru	equ	0xFF8
  9141                           tblptrh	equ	0xFF7
  9142                           tblptrl	equ	0xFF6
  9143                           tablat	equ	0xFF5
  9144                           prodh	equ	0xFF4
  9145                           prodl	equ	0xFF3
  9146                           postinc0	equ	0xFEE
  9147                           wreg	equ	0xFE8
  9148                           indf1	equ	0xFE7
  9149                           postdec1	equ	0xFE5
  9150                           fsr1h	equ	0xFE2
  9151                           fsr1l	equ	0xFE1
  9152                           indf2	equ	0xFDF
  9153                           postinc2	equ	0xFDE
  9154                           postdec2	equ	0xFDD
  9155                           fsr2h	equ	0xFDA
  9156                           fsr2l	equ	0xFD9
  9157                           status	equ	0xFD8
  9158                           
  9159 ;; *************** function ___ftmul *****************
  9160 ;; Defined at:
  9161 ;;		line 62 in file "/opt/microchip/xc8/v1.37/sources/common/ftmul.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;  f1              3   24[COMRAM] float 
  9164 ;;  f2              3   27[COMRAM] float 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  f3_as_produc    3   34[COMRAM] unsigned um
  9167 ;;  sign            1   38[COMRAM] unsigned char 
  9168 ;;  cntr            1   37[COMRAM] unsigned char 
  9169 ;;  exp             1   33[COMRAM] unsigned char 
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  3   24[COMRAM] float 
  9172 ;; Registers used:
  9173 ;;		wreg, status,2, status,0, cstack
  9174 ;; Tracked objects:
  9175 ;;		On entry : 0/0
  9176 ;;		On exit  : 0/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9179 ;;      Params:         6       0       0       0       0       0       0       0       0
  9180 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9181 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9182 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9183 ;;Total ram usage:       15 bytes
  9184 ;; Hardware stack levels used:    1
  9185 ;; Hardware stack levels required when called:    1
  9186 ;; This function calls:
  9187 ;;		___ftpack
  9188 ;; This function is called by:
  9189 ;;		_main
  9190 ;;		_fround
  9191 ;;		_scale
  9192 ;;		_sprintf
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           	psect	text8
  9197  0040B0                     __ptext8:
  9198                           	opt stack 0
  9199  0040B0                     ___ftmul:
  9200                           	opt stack 27
  9201                           
  9202                           ;incstack = 0
  9203  0040B0  C01B  F01F         	movff	___ftmul@f1+2,??___ftmul
  9204  0040B4  6A20               	clrf	(??___ftmul+1)& (0+255),c
  9205  0040B6  6A21               	clrf	(??___ftmul+2)& (0+255),c
  9206  0040B8  341A               	rlcf	___ftmul@f1+1,w,c
  9207  0040BA  361F               	rlcf	??___ftmul& (0+255),f,c
  9208  0040BC  E301               	bnc	u3621
  9209  0040BE  8020               	bsf	(??___ftmul+1)& (0+255),0,c
  9210  0040C0                     u3621:
  9211  0040C0  501F               	movf	??___ftmul,w,c
  9212  0040C2  6E22               	movwf	___ftmul@exp,c
  9213  0040C4  5022               	movf	___ftmul@exp,w,c
  9214  0040C6  A4D8               	btfss	status,2,c
  9215  0040C8  D007               	goto	l3601
  9216  0040CA  0E00               	movlw	0
  9217  0040CC  6E19               	movwf	?___ftmul,c
  9218  0040CE  0E00               	movlw	0
  9219  0040D0  6E1A               	movwf	?___ftmul+1,c
  9220  0040D2  0E00               	movlw	0
  9221  0040D4  6E1B               	movwf	?___ftmul+2,c
  9222  0040D6  0012               	return	
  9223  0040D8                     l3601:
  9224  0040D8  C01E  F01F         	movff	___ftmul@f2+2,??___ftmul
  9225  0040DC  6A20               	clrf	(??___ftmul+1)& (0+255),c
  9226  0040DE  6A21               	clrf	(??___ftmul+2)& (0+255),c
  9227  0040E0  341D               	rlcf	___ftmul@f2+1,w,c
  9228  0040E2  361F               	rlcf	??___ftmul& (0+255),f,c
  9229  0040E4  E301               	bnc	u3641
  9230  0040E6  8020               	bsf	(??___ftmul+1)& (0+255),0,c
  9231  0040E8                     u3641:
  9232  0040E8  501F               	movf	??___ftmul,w,c
  9233  0040EA  6E27               	movwf	___ftmul@sign,c
  9234  0040EC  5027               	movf	___ftmul@sign,w,c
  9235  0040EE  A4D8               	btfss	status,2,c
  9236  0040F0  D007               	goto	l3607
  9237  0040F2  0E00               	movlw	0
  9238  0040F4  6E19               	movwf	?___ftmul,c
  9239  0040F6  0E00               	movlw	0
  9240  0040F8  6E1A               	movwf	?___ftmul+1,c
  9241  0040FA  0E00               	movlw	0
  9242  0040FC  6E1B               	movwf	?___ftmul+2,c
  9243  0040FE  0012               	return	
  9244  004100                     l3607:
  9245  004100  5027               	movf	___ftmul@sign,w,c
  9246  004102  0F7B               	addlw	123
  9247  004104  2622               	addwf	___ftmul@exp,f,c
  9248  004106  C01B  F027         	movff	___ftmul@f1+2,___ftmul@sign
  9249  00410A  501E               	movf	___ftmul@f2+2,w,c
  9250  00410C  1A27               	xorwf	___ftmul@sign,f,c
  9251  00410E  0E80               	movlw	128
  9252  004110  1627               	andwf	___ftmul@sign,f,c
  9253  004112  8E1A               	bsf	___ftmul@f1+1,7,c
  9254  004114  8E1D               	bsf	___ftmul@f2+1,7,c
  9255  004116  0EFF               	movlw	255
  9256  004118  161C               	andwf	___ftmul@f2,f,c
  9257  00411A  0EFF               	movlw	255
  9258  00411C  161D               	andwf	___ftmul@f2+1,f,c
  9259  00411E  0E00               	movlw	0
  9260  004120  161E               	andwf	___ftmul@f2+2,f,c
  9261  004122  0E00               	movlw	0
  9262  004124  6E23               	movwf	___ftmul@f3_as_product,c
  9263  004126  0E00               	movlw	0
  9264  004128  6E24               	movwf	___ftmul@f3_as_product+1,c
  9265  00412A  0E00               	movlw	0
  9266  00412C  6E25               	movwf	___ftmul@f3_as_product+2,c
  9267  00412E  0E07               	movlw	7
  9268  004130  6E26               	movwf	___ftmul@cntr,c
  9269  004132                     l3621:
  9270  004132  A019               	btfss	___ftmul@f1,0,c
  9271  004134  D006               	goto	l3625
  9272  004136  501C               	movf	___ftmul@f2,w,c
  9273  004138  2623               	addwf	___ftmul@f3_as_product,f,c
  9274  00413A  501D               	movf	___ftmul@f2+1,w,c
  9275  00413C  2224               	addwfc	___ftmul@f3_as_product+1,f,c
  9276  00413E  501E               	movf	___ftmul@f2+2,w,c
  9277  004140  2225               	addwfc	___ftmul@f3_as_product+2,f,c
  9278  004142                     l3625:
  9279  004142  90D8               	bcf	status,0,c
  9280  004144  321B               	rrcf	___ftmul@f1+2,f,c
  9281  004146  321A               	rrcf	___ftmul@f1+1,f,c
  9282  004148  3219               	rrcf	___ftmul@f1,f,c
  9283  00414A  90D8               	bcf	status,0,c
  9284  00414C  361C               	rlcf	___ftmul@f2,f,c
  9285  00414E  361D               	rlcf	___ftmul@f2+1,f,c
  9286  004150  361E               	rlcf	___ftmul@f2+2,f,c
  9287  004152  2E26               	decfsz	___ftmul@cntr,f,c
  9288  004154  D7EE               	goto	l3621
  9289  004156  0E09               	movlw	9
  9290  004158  6E26               	movwf	___ftmul@cntr,c
  9291  00415A                     l3631:
  9292  00415A  A019               	btfss	___ftmul@f1,0,c
  9293  00415C  D006               	goto	l3635
  9294  00415E  501C               	movf	___ftmul@f2,w,c
  9295  004160  2623               	addwf	___ftmul@f3_as_product,f,c
  9296  004162  501D               	movf	___ftmul@f2+1,w,c
  9297  004164  2224               	addwfc	___ftmul@f3_as_product+1,f,c
  9298  004166  501E               	movf	___ftmul@f2+2,w,c
  9299  004168  2225               	addwfc	___ftmul@f3_as_product+2,f,c
  9300  00416A                     l3635:
  9301  00416A  90D8               	bcf	status,0,c
  9302  00416C  321B               	rrcf	___ftmul@f1+2,f,c
  9303  00416E  321A               	rrcf	___ftmul@f1+1,f,c
  9304  004170  3219               	rrcf	___ftmul@f1,f,c
  9305  004172  90D8               	bcf	status,0,c
  9306  004174  3225               	rrcf	___ftmul@f3_as_product+2,f,c
  9307  004176  3224               	rrcf	___ftmul@f3_as_product+1,f,c
  9308  004178  3223               	rrcf	___ftmul@f3_as_product,f,c
  9309  00417A  2E26               	decfsz	___ftmul@cntr,f,c
  9310  00417C  D7EE               	goto	l3631
  9311  00417E  C023  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  9312  004182  C024  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9313  004186  C025  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9314  00418A  C022  F004         	movff	___ftmul@exp,___ftpack@exp
  9315  00418E  C027  F005         	movff	___ftmul@sign,___ftpack@sign
  9316  004192  EC14  F01F         	call	___ftpack	;wreg free
  9317  004196  C001  F019         	movff	?___ftpack,?___ftmul
  9318  00419A  C002  F01A         	movff	?___ftpack+1,?___ftmul+1
  9319  00419E  C003  F01B         	movff	?___ftpack+2,?___ftmul+2
  9320  0041A2  0012               	return	
  9321  0041A4                     __end_of___ftmul:
  9322                           	opt stack 0
  9323                           tblptru	equ	0xFF8
  9324                           tblptrh	equ	0xFF7
  9325                           tblptrl	equ	0xFF6
  9326                           tablat	equ	0xFF5
  9327                           prodh	equ	0xFF4
  9328                           prodl	equ	0xFF3
  9329                           postinc0	equ	0xFEE
  9330                           wreg	equ	0xFE8
  9331                           indf1	equ	0xFE7
  9332                           postdec1	equ	0xFE5
  9333                           fsr1h	equ	0xFE2
  9334                           fsr1l	equ	0xFE1
  9335                           indf2	equ	0xFDF
  9336                           postinc2	equ	0xFDE
  9337                           postdec2	equ	0xFDD
  9338                           fsr2h	equ	0xFDA
  9339                           fsr2l	equ	0xFD9
  9340                           status	equ	0xFD8
  9341                           
  9342 ;; *************** function ___awmod *****************
  9343 ;; Defined at:
  9344 ;;		line 8 in file "/opt/microchip/xc8/v1.37/sources/common/awmod.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  dividend        2    0[COMRAM] int 
  9347 ;;  divisor         2    2[COMRAM] int 
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;  sign            1    5[COMRAM] unsigned char 
  9350 ;;  counter         1    4[COMRAM] unsigned char 
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  2    0[COMRAM] int 
  9353 ;; Registers used:
  9354 ;;		wreg, status,2, status,0
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9360 ;;      Params:         4       0       0       0       0       0       0       0       0
  9361 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9363 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9364 ;;Total ram usage:        6 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; This function calls:
  9367 ;;		Nothing
  9368 ;; This function is called by:
  9369 ;;		_fround
  9370 ;;		_scale
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text9
  9375  003AF6                     __ptext9:
  9376                           	opt stack 0
  9377  003AF6                     ___awmod:
  9378                           	opt stack 28
  9379                           
  9380                           ;incstack = 0
  9381  003AF6  0E00               	movlw	0
  9382  003AF8  6E06               	movwf	___awmod@sign,c
  9383  003AFA  AE02               	btfss	___awmod@dividend+1,7,c
  9384  003AFC  D006               	goto	l3695
  9385  003AFE  6C01               	negf	___awmod@dividend,c
  9386  003B00  1E02               	comf	___awmod@dividend+1,f,c
  9387  003B02  B0D8               	btfsc	status,0,c
  9388  003B04  2A02               	incf	___awmod@dividend+1,f,c
  9389  003B06  0E01               	movlw	1
  9390  003B08  6E06               	movwf	___awmod@sign,c
  9391  003B0A                     l3695:
  9392  003B0A  AE04               	btfss	___awmod@divisor+1,7,c
  9393  003B0C  D004               	goto	l3699
  9394  003B0E  6C03               	negf	___awmod@divisor,c
  9395  003B10  1E04               	comf	___awmod@divisor+1,f,c
  9396  003B12  B0D8               	btfsc	status,0,c
  9397  003B14  2A04               	incf	___awmod@divisor+1,f,c
  9398  003B16                     l3699:
  9399  003B16  5003               	movf	___awmod@divisor,w,c
  9400  003B18  1004               	iorwf	___awmod@divisor+1,w,c
  9401  003B1A  B4D8               	btfsc	status,2,c
  9402  003B1C  D018               	goto	l3715
  9403  003B1E  0E01               	movlw	1
  9404  003B20  6E05               	movwf	___awmod@counter,c
  9405  003B22  D004               	goto	l3705
  9406  003B24                     l3703:
  9407  003B24  90D8               	bcf	status,0,c
  9408  003B26  3603               	rlcf	___awmod@divisor,f,c
  9409  003B28  3604               	rlcf	___awmod@divisor+1,f,c
  9410  003B2A  2A05               	incf	___awmod@counter,f,c
  9411  003B2C                     l3705:
  9412  003B2C  AE04               	btfss	___awmod@divisor+1,7,c
  9413  003B2E  D7FA               	goto	l3703
  9414  003B30                     l3707:
  9415  003B30  5003               	movf	___awmod@divisor,w,c
  9416  003B32  5C01               	subwf	___awmod@dividend,w,c
  9417  003B34  5004               	movf	___awmod@divisor+1,w,c
  9418  003B36  5802               	subwfb	___awmod@dividend+1,w,c
  9419  003B38  A0D8               	btfss	status,0,c
  9420  003B3A  D004               	goto	l3711
  9421  003B3C  5003               	movf	___awmod@divisor,w,c
  9422  003B3E  5E01               	subwf	___awmod@dividend,f,c
  9423  003B40  5004               	movf	___awmod@divisor+1,w,c
  9424  003B42  5A02               	subwfb	___awmod@dividend+1,f,c
  9425  003B44                     l3711:
  9426  003B44  90D8               	bcf	status,0,c
  9427  003B46  3204               	rrcf	___awmod@divisor+1,f,c
  9428  003B48  3203               	rrcf	___awmod@divisor,f,c
  9429  003B4A  2E05               	decfsz	___awmod@counter,f,c
  9430  003B4C  D7F1               	goto	l3707
  9431  003B4E                     l3715:
  9432  003B4E  5006               	movf	___awmod@sign,w,c
  9433  003B50  B4D8               	btfsc	status,2,c
  9434  003B52  D004               	goto	l3719
  9435  003B54  6C01               	negf	___awmod@dividend,c
  9436  003B56  1E02               	comf	___awmod@dividend+1,f,c
  9437  003B58  B0D8               	btfsc	status,0,c
  9438  003B5A  2A02               	incf	___awmod@dividend+1,f,c
  9439  003B5C                     l3719:
  9440  003B5C  C001  F001         	movff	___awmod@dividend,?___awmod
  9441  003B60  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9442  003B64  0012               	return	
  9443  003B66                     __end_of___awmod:
  9444                           	opt stack 0
  9445                           tblptru	equ	0xFF8
  9446                           tblptrh	equ	0xFF7
  9447                           tblptrl	equ	0xFF6
  9448                           tablat	equ	0xFF5
  9449                           prodh	equ	0xFF4
  9450                           prodl	equ	0xFF3
  9451                           postinc0	equ	0xFEE
  9452                           wreg	equ	0xFE8
  9453                           indf1	equ	0xFE7
  9454                           postdec1	equ	0xFE5
  9455                           fsr1h	equ	0xFE2
  9456                           fsr1l	equ	0xFE1
  9457                           indf2	equ	0xFDF
  9458                           postinc2	equ	0xFDE
  9459                           postdec2	equ	0xFDD
  9460                           fsr2h	equ	0xFDA
  9461                           fsr2l	equ	0xFD9
  9462                           status	equ	0xFD8
  9463                           
  9464 ;; *************** function __tdiv_to_l_ *****************
  9465 ;; Defined at:
  9466 ;;		line 60 in file "/opt/microchip/xc8/v1.37/sources/common/ftdivl.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  f1              3    0[COMRAM] float 
  9469 ;;  f2              3    3[COMRAM] float 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  quot            4    9[COMRAM] unsigned long 
  9472 ;;  exp1            1   14[COMRAM] unsigned char 
  9473 ;;  cntr            1   13[COMRAM] unsigned char 
  9474 ;; Return value:  Size  Location     Type
  9475 ;;                  4    0[COMRAM] unsigned long 
  9476 ;; Registers used:
  9477 ;;		wreg, status,2, status,0
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9483 ;;      Params:         6       0       0       0       0       0       0       0       0
  9484 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9485 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9486 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9487 ;;Total ram usage:       15 bytes
  9488 ;; Hardware stack levels used:    1
  9489 ;; This function calls:
  9490 ;;		Nothing
  9491 ;; This function is called by:
  9492 ;;		_sprintf
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           	psect	text10
  9497  0042CC                     __ptext10:
  9498                           	opt stack 0
  9499  0042CC                     __tdiv_to_l_:
  9500                           	opt stack 29
  9501                           
  9502                           ;incstack = 0
  9503  0042CC  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9504  0042D0  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  9505  0042D2  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  9506  0042D4  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  9507  0042D6  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  9508  0042D8  E301               	bnc	u4061
  9509  0042DA  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  9510  0042DC                     u4061:
  9511  0042DC  5007               	movf	??__tdiv_to_l_,w,c
  9512  0042DE  6E0F               	movwf	__tdiv_to_l_@exp1,c
  9513  0042E0  500F               	movf	__tdiv_to_l_@exp1,w,c
  9514  0042E2  A4D8               	btfss	status,2,c
  9515  0042E4  D009               	goto	l3931
  9516  0042E6  0E00               	movlw	0
  9517  0042E8  6E01               	movwf	?__tdiv_to_l_,c
  9518  0042EA  0E00               	movlw	0
  9519  0042EC  6E02               	movwf	?__tdiv_to_l_+1,c
  9520  0042EE  0E00               	movlw	0
  9521  0042F0  6E03               	movwf	?__tdiv_to_l_+2,c
  9522  0042F2  0E00               	movlw	0
  9523  0042F4  6E04               	movwf	?__tdiv_to_l_+3,c
  9524  0042F6  0012               	return	
  9525  0042F8                     l3931:
  9526  0042F8  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9527  0042FC  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  9528  0042FE  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  9529  004300  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  9530  004302  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  9531  004304  E301               	bnc	u4081
  9532  004306  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  9533  004308                     u4081:
  9534  004308  5007               	movf	??__tdiv_to_l_,w,c
  9535  00430A  6E0E               	movwf	__tdiv_to_l_@cntr,c
  9536  00430C  500E               	movf	__tdiv_to_l_@cntr,w,c
  9537  00430E  A4D8               	btfss	status,2,c
  9538  004310  D009               	goto	l3937
  9539  004312  0E00               	movlw	0
  9540  004314  6E01               	movwf	?__tdiv_to_l_,c
  9541  004316  0E00               	movlw	0
  9542  004318  6E02               	movwf	?__tdiv_to_l_+1,c
  9543  00431A  0E00               	movlw	0
  9544  00431C  6E03               	movwf	?__tdiv_to_l_+2,c
  9545  00431E  0E00               	movlw	0
  9546  004320  6E04               	movwf	?__tdiv_to_l_+3,c
  9547  004322  0012               	return	
  9548  004324                     l3937:
  9549  004324  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  9550  004326  0EFF               	movlw	255
  9551  004328  1601               	andwf	__tdiv_to_l_@f1,f,c
  9552  00432A  0EFF               	movlw	255
  9553  00432C  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  9554  00432E  0E00               	movlw	0
  9555  004330  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  9556  004332  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  9557  004334  0EFF               	movlw	255
  9558  004336  1604               	andwf	__tdiv_to_l_@f2,f,c
  9559  004338  0EFF               	movlw	255
  9560  00433A  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  9561  00433C  0E00               	movlw	0
  9562  00433E  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  9563  004340  0E00               	movlw	0
  9564  004342  6E0A               	movwf	__tdiv_to_l_@quot,c
  9565  004344  0E00               	movlw	0
  9566  004346  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  9567  004348  0E00               	movlw	0
  9568  00434A  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  9569  00434C  0E00               	movlw	0
  9570  00434E  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  9571  004350  0E7F               	movlw	127
  9572  004352  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  9573  004354  500E               	movf	__tdiv_to_l_@cntr,w,c
  9574  004356  0F98               	addlw	152
  9575  004358  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  9576  00435A  0E18               	movlw	24
  9577  00435C  6E0E               	movwf	__tdiv_to_l_@cntr,c
  9578  00435E                     l788:
  9579  00435E  90D8               	bcf	status,0,c
  9580  004360  360A               	rlcf	__tdiv_to_l_@quot,f,c
  9581  004362  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  9582  004364  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  9583  004366  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  9584  004368  5004               	movf	__tdiv_to_l_@f2,w,c
  9585  00436A  5C01               	subwf	__tdiv_to_l_@f1,w,c
  9586  00436C  5005               	movf	__tdiv_to_l_@f2+1,w,c
  9587  00436E  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  9588  004370  5006               	movf	__tdiv_to_l_@f2+2,w,c
  9589  004372  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  9590  004374  A0D8               	btfss	status,0,c
  9591  004376  D007               	goto	l789
  9592  004378  5004               	movf	__tdiv_to_l_@f2,w,c
  9593  00437A  5E01               	subwf	__tdiv_to_l_@f1,f,c
  9594  00437C  5005               	movf	__tdiv_to_l_@f2+1,w,c
  9595  00437E  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  9596  004380  5006               	movf	__tdiv_to_l_@f2+2,w,c
  9597  004382  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  9598  004384  800A               	bsf	__tdiv_to_l_@quot,0,c
  9599  004386                     l789:
  9600  004386  90D8               	bcf	status,0,c
  9601  004388  3601               	rlcf	__tdiv_to_l_@f1,f,c
  9602  00438A  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  9603  00438C  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  9604  00438E  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  9605  004390  D7E6               	goto	l788
  9606  004392  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  9607  004394  D016               	goto	l3971
  9608  004396  500F               	movf	__tdiv_to_l_@exp1,w,c
  9609  004398  0A80               	xorlw	128
  9610  00439A  0F97               	addlw	151
  9611  00439C  B0D8               	btfsc	status,0,c
  9612  00439E  D009               	goto	l3967
  9613  0043A0  0E00               	movlw	0
  9614  0043A2  6E01               	movwf	?__tdiv_to_l_,c
  9615  0043A4  0E00               	movlw	0
  9616  0043A6  6E02               	movwf	?__tdiv_to_l_+1,c
  9617  0043A8  0E00               	movlw	0
  9618  0043AA  6E03               	movwf	?__tdiv_to_l_+2,c
  9619  0043AC  0E00               	movlw	0
  9620  0043AE  6E04               	movwf	?__tdiv_to_l_+3,c
  9621  0043B0  0012               	return	
  9622  0043B2                     l3967:
  9623  0043B2  90D8               	bcf	status,0,c
  9624  0043B4  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  9625  0043B6  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  9626  0043B8  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  9627  0043BA  320A               	rrcf	__tdiv_to_l_@quot,f,c
  9628  0043BC  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  9629  0043BE  D7F9               	goto	l3967
  9630  0043C0  D015               	goto	l795
  9631  0043C2                     l3971:
  9632  0043C2  0E17               	movlw	23
  9633  0043C4  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  9634  0043C6  D00F               	goto	l3979
  9635  0043C8  0E00               	movlw	0
  9636  0043CA  6E01               	movwf	?__tdiv_to_l_,c
  9637  0043CC  0E00               	movlw	0
  9638  0043CE  6E02               	movwf	?__tdiv_to_l_+1,c
  9639  0043D0  0E00               	movlw	0
  9640  0043D2  6E03               	movwf	?__tdiv_to_l_+2,c
  9641  0043D4  0E00               	movlw	0
  9642  0043D6  6E04               	movwf	?__tdiv_to_l_+3,c
  9643  0043D8  0012               	return	
  9644  0043DA                     l3977:
  9645  0043DA  90D8               	bcf	status,0,c
  9646  0043DC  360A               	rlcf	__tdiv_to_l_@quot,f,c
  9647  0043DE  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  9648  0043E0  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  9649  0043E2  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  9650  0043E4  060F               	decf	__tdiv_to_l_@exp1,f,c
  9651  0043E6                     l3979:
  9652  0043E6  500F               	movf	__tdiv_to_l_@exp1,w,c
  9653  0043E8  A4D8               	btfss	status,2,c
  9654  0043EA  D7F7               	goto	l3977
  9655  0043EC                     l795:
  9656  0043EC  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9657  0043F0  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9658  0043F4  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9659  0043F8  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9660  0043FC  0012               	return		;funcret
  9661  0043FE                     __end_of__tdiv_to_l_:
  9662                           	opt stack 0
  9663                           tblptru	equ	0xFF8
  9664                           tblptrh	equ	0xFF7
  9665                           tblptrl	equ	0xFF6
  9666                           tablat	equ	0xFF5
  9667                           prodh	equ	0xFF4
  9668                           prodl	equ	0xFF3
  9669                           postinc0	equ	0xFEE
  9670                           wreg	equ	0xFE8
  9671                           indf1	equ	0xFE7
  9672                           postdec1	equ	0xFE5
  9673                           fsr1h	equ	0xFE2
  9674                           fsr1l	equ	0xFE1
  9675                           indf2	equ	0xFDF
  9676                           postinc2	equ	0xFDE
  9677                           postdec2	equ	0xFDD
  9678                           fsr2h	equ	0xFDA
  9679                           fsr2l	equ	0xFD9
  9680                           status	equ	0xFD8
  9681                           
  9682 ;; *************** function __div_to_l_ *****************
  9683 ;; Defined at:
  9684 ;;		line 60 in file "/opt/microchip/xc8/v1.37/sources/common/fldivl.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;  f1              3    0[COMRAM] unsigned long 
  9687 ;;  f2              3    3[COMRAM] unsigned long 
  9688 ;; Auto vars:     Size  Location     Type
  9689 ;;  quot            4    6[COMRAM] unsigned long 
  9690 ;;  exp1            1   11[COMRAM] unsigned char 
  9691 ;;  cntr            1   10[COMRAM] unsigned char 
  9692 ;; Return value:  Size  Location     Type
  9693 ;;                  4    0[COMRAM] unsigned long 
  9694 ;; Registers used:
  9695 ;;		wreg, status,2, status,0
  9696 ;; Tracked objects:
  9697 ;;		On entry : 0/0
  9698 ;;		On exit  : 0/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9701 ;;      Params:         6       0       0       0       0       0       0       0       0
  9702 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9704 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9705 ;;Total ram usage:       12 bytes
  9706 ;; Hardware stack levels used:    1
  9707 ;; This function calls:
  9708 ;;		Nothing
  9709 ;; This function is called by:
  9710 ;;		_sprintf
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           	psect	text11
  9715  0041A4                     __ptext11:
  9716                           	opt stack 0
  9717  0041A4                     __div_to_l_:
  9718                           	opt stack 29
  9719                           
  9720                           ;incstack = 0
  9721  0041A4  3403               	rlcf	__div_to_l_@f1+2,w,c
  9722  0041A6  3404               	rlcf	__div_to_l_@f1+3,w,c
  9723  0041A8  6E0C               	movwf	__div_to_l_@exp1,c
  9724  0041AA  500C               	movf	__div_to_l_@exp1,w,c
  9725  0041AC  A4D8               	btfss	status,2,c
  9726  0041AE  D009               	goto	l3987
  9727  0041B0  0E00               	movlw	0
  9728  0041B2  6E01               	movwf	?__div_to_l_,c
  9729  0041B4  0E00               	movlw	0
  9730  0041B6  6E02               	movwf	?__div_to_l_+1,c
  9731  0041B8  0E00               	movlw	0
  9732  0041BA  6E03               	movwf	?__div_to_l_+2,c
  9733  0041BC  0E00               	movlw	0
  9734  0041BE  6E04               	movwf	?__div_to_l_+3,c
  9735  0041C0  0012               	return	
  9736  0041C2                     l3987:
  9737  0041C2  3406               	rlcf	__div_to_l_@f2+2,w,c
  9738  0041C4  3407               	rlcf	__div_to_l_@f2+3,w,c
  9739  0041C6  6E0B               	movwf	__div_to_l_@cntr,c
  9740  0041C8  500B               	movf	__div_to_l_@cntr,w,c
  9741  0041CA  A4D8               	btfss	status,2,c
  9742  0041CC  D009               	goto	l3993
  9743  0041CE  0E00               	movlw	0
  9744  0041D0  6E01               	movwf	?__div_to_l_,c
  9745  0041D2  0E00               	movlw	0
  9746  0041D4  6E02               	movwf	?__div_to_l_+1,c
  9747  0041D6  0E00               	movlw	0
  9748  0041D8  6E03               	movwf	?__div_to_l_+2,c
  9749  0041DA  0E00               	movlw	0
  9750  0041DC  6E04               	movwf	?__div_to_l_+3,c
  9751  0041DE  0012               	return	
  9752  0041E0                     l3993:
  9753  0041E0  8E03               	bsf	__div_to_l_@f1+2,7,c
  9754  0041E2  0EFF               	movlw	255
  9755  0041E4  1601               	andwf	__div_to_l_@f1,f,c
  9756  0041E6  0EFF               	movlw	255
  9757  0041E8  1602               	andwf	__div_to_l_@f1+1,f,c
  9758  0041EA  0EFF               	movlw	255
  9759  0041EC  1603               	andwf	__div_to_l_@f1+2,f,c
  9760  0041EE  0E00               	movlw	0
  9761  0041F0  1604               	andwf	__div_to_l_@f1+3,f,c
  9762  0041F2  8E06               	bsf	__div_to_l_@f2+2,7,c
  9763  0041F4  0EFF               	movlw	255
  9764  0041F6  1604               	andwf	__div_to_l_@f2,f,c
  9765  0041F8  0EFF               	movlw	255
  9766  0041FA  1605               	andwf	__div_to_l_@f2+1,f,c
  9767  0041FC  0EFF               	movlw	255
  9768  0041FE  1606               	andwf	__div_to_l_@f2+2,f,c
  9769  004200  0E00               	movlw	0
  9770  004202  1607               	andwf	__div_to_l_@f2+3,f,c
  9771  004204  0E00               	movlw	0
  9772  004206  6E07               	movwf	__div_to_l_@quot,c
  9773  004208  0E00               	movlw	0
  9774  00420A  6E08               	movwf	__div_to_l_@quot+1,c
  9775  00420C  0E00               	movlw	0
  9776  00420E  6E09               	movwf	__div_to_l_@quot+2,c
  9777  004210  0E00               	movlw	0
  9778  004212  6E0A               	movwf	__div_to_l_@quot+3,c
  9779  004214  0E7F               	movlw	127
  9780  004216  5E0C               	subwf	__div_to_l_@exp1,f,c
  9781  004218  500B               	movf	__div_to_l_@cntr,w,c
  9782  00421A  0FA0               	addlw	160
  9783  00421C  5E0C               	subwf	__div_to_l_@exp1,f,c
  9784  00421E  0E20               	movlw	32
  9785  004220  6E0B               	movwf	__div_to_l_@cntr,c
  9786  004222                     l4007:
  9787  004222  90D8               	bcf	status,0,c
  9788  004224  3607               	rlcf	__div_to_l_@quot,f,c
  9789  004226  3608               	rlcf	__div_to_l_@quot+1,f,c
  9790  004228  3609               	rlcf	__div_to_l_@quot+2,f,c
  9791  00422A  360A               	rlcf	__div_to_l_@quot+3,f,c
  9792  00422C  5004               	movf	__div_to_l_@f2,w,c
  9793  00422E  5C01               	subwf	__div_to_l_@f1,w,c
  9794  004230  5005               	movf	__div_to_l_@f2+1,w,c
  9795  004232  5802               	subwfb	__div_to_l_@f1+1,w,c
  9796  004234  5006               	movf	__div_to_l_@f2+2,w,c
  9797  004236  5803               	subwfb	__div_to_l_@f1+2,w,c
  9798  004238  5007               	movf	__div_to_l_@f2+3,w,c
  9799  00423A  5804               	subwfb	__div_to_l_@f1+3,w,c
  9800  00423C  A0D8               	btfss	status,0,c
  9801  00423E  D009               	goto	l4015
  9802  004240  5004               	movf	__div_to_l_@f2,w,c
  9803  004242  5E01               	subwf	__div_to_l_@f1,f,c
  9804  004244  5005               	movf	__div_to_l_@f2+1,w,c
  9805  004246  5A02               	subwfb	__div_to_l_@f1+1,f,c
  9806  004248  5006               	movf	__div_to_l_@f2+2,w,c
  9807  00424A  5A03               	subwfb	__div_to_l_@f1+2,f,c
  9808  00424C  5007               	movf	__div_to_l_@f2+3,w,c
  9809  00424E  5A04               	subwfb	__div_to_l_@f1+3,f,c
  9810  004250  8007               	bsf	__div_to_l_@quot,0,c
  9811  004252                     l4015:
  9812  004252  90D8               	bcf	status,0,c
  9813  004254  3601               	rlcf	__div_to_l_@f1,f,c
  9814  004256  3602               	rlcf	__div_to_l_@f1+1,f,c
  9815  004258  3603               	rlcf	__div_to_l_@f1+2,f,c
  9816  00425A  3604               	rlcf	__div_to_l_@f1+3,f,c
  9817  00425C  2E0B               	decfsz	__div_to_l_@cntr,f,c
  9818  00425E  D7E1               	goto	l4007
  9819  004260  AE0C               	btfss	__div_to_l_@exp1,7,c
  9820  004262  D016               	goto	l4031
  9821  004264  500C               	movf	__div_to_l_@exp1,w,c
  9822  004266  0A80               	xorlw	128
  9823  004268  0F9F               	addlw	159
  9824  00426A  B0D8               	btfsc	status,0,c
  9825  00426C  D009               	goto	l4027
  9826  00426E  0E00               	movlw	0
  9827  004270  6E01               	movwf	?__div_to_l_,c
  9828  004272  0E00               	movlw	0
  9829  004274  6E02               	movwf	?__div_to_l_+1,c
  9830  004276  0E00               	movlw	0
  9831  004278  6E03               	movwf	?__div_to_l_+2,c
  9832  00427A  0E00               	movlw	0
  9833  00427C  6E04               	movwf	?__div_to_l_+3,c
  9834  00427E  0012               	return	
  9835  004280                     l4027:
  9836  004280  90D8               	bcf	status,0,c
  9837  004282  320A               	rrcf	__div_to_l_@quot+3,f,c
  9838  004284  3209               	rrcf	__div_to_l_@quot+2,f,c
  9839  004286  3208               	rrcf	__div_to_l_@quot+1,f,c
  9840  004288  3207               	rrcf	__div_to_l_@quot,f,c
  9841  00428A  3E0C               	incfsz	__div_to_l_@exp1,f,c
  9842  00428C  D7F9               	goto	l4027
  9843  00428E  D015               	goto	l691
  9844  004290                     l4031:
  9845  004290  0E1F               	movlw	31
  9846  004292  640C               	cpfsgt	__div_to_l_@exp1,c
  9847  004294  D00F               	goto	l4039
  9848  004296  0E00               	movlw	0
  9849  004298  6E01               	movwf	?__div_to_l_,c
  9850  00429A  0E00               	movlw	0
  9851  00429C  6E02               	movwf	?__div_to_l_+1,c
  9852  00429E  0E00               	movlw	0
  9853  0042A0  6E03               	movwf	?__div_to_l_+2,c
  9854  0042A2  0E00               	movlw	0
  9855  0042A4  6E04               	movwf	?__div_to_l_+3,c
  9856  0042A6  0012               	return	
  9857  0042A8                     l4037:
  9858  0042A8  90D8               	bcf	status,0,c
  9859  0042AA  3607               	rlcf	__div_to_l_@quot,f,c
  9860  0042AC  3608               	rlcf	__div_to_l_@quot+1,f,c
  9861  0042AE  3609               	rlcf	__div_to_l_@quot+2,f,c
  9862  0042B0  360A               	rlcf	__div_to_l_@quot+3,f,c
  9863  0042B2  060C               	decf	__div_to_l_@exp1,f,c
  9864  0042B4                     l4039:
  9865  0042B4  500C               	movf	__div_to_l_@exp1,w,c
  9866  0042B6  A4D8               	btfss	status,2,c
  9867  0042B8  D7F7               	goto	l4037
  9868  0042BA                     l691:
  9869  0042BA  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  9870  0042BE  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9871  0042C2  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9872  0042C6  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9873  0042CA  0012               	return		;funcret
  9874  0042CC                     __end_of__div_to_l_:
  9875                           	opt stack 0
  9876                           tblptru	equ	0xFF8
  9877                           tblptrh	equ	0xFF7
  9878                           tblptrl	equ	0xFF6
  9879                           tablat	equ	0xFF5
  9880                           prodh	equ	0xFF4
  9881                           prodl	equ	0xFF3
  9882                           postinc0	equ	0xFEE
  9883                           wreg	equ	0xFE8
  9884                           indf1	equ	0xFE7
  9885                           postdec1	equ	0xFE5
  9886                           fsr1h	equ	0xFE2
  9887                           fsr1l	equ	0xFE1
  9888                           indf2	equ	0xFDF
  9889                           postinc2	equ	0xFDE
  9890                           postdec2	equ	0xFDD
  9891                           fsr2h	equ	0xFDA
  9892                           fsr2l	equ	0xFD9
  9893                           status	equ	0xFD8
  9894                           
  9895 ;; *************** function ___lltoft *****************
  9896 ;; Defined at:
  9897 ;;		line 35 in file "/opt/microchip/xc8/v1.37/sources/common/lltoft.c"
  9898 ;; Parameters:    Size  Location     Type
  9899 ;;  c               4    8[COMRAM] unsigned long 
  9900 ;; Auto vars:     Size  Location     Type
  9901 ;;  exp             1   16[COMRAM] unsigned char 
  9902 ;; Return value:  Size  Location     Type
  9903 ;;                  3    8[COMRAM] float 
  9904 ;; Registers used:
  9905 ;;		wreg, status,2, status,0, cstack
  9906 ;; Tracked objects:
  9907 ;;		On entry : 0/0
  9908 ;;		On exit  : 0/0
  9909 ;;		Unchanged: 0/0
  9910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9911 ;;      Params:         4       0       0       0       0       0       0       0       0
  9912 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9913 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9914 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9915 ;;Total ram usage:        9 bytes
  9916 ;; Hardware stack levels used:    1
  9917 ;; Hardware stack levels required when called:    1
  9918 ;; This function calls:
  9919 ;;		___ftpack
  9920 ;; This function is called by:
  9921 ;;		_sprintf
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text12
  9926  003A34                     __ptext12:
  9927                           	opt stack 0
  9928  003A34                     ___lltoft:
  9929                           	opt stack 28
  9930                           
  9931                           ;incstack = 0
  9932  003A34  0E8E               	movlw	142
  9933  003A36  6E11               	movwf	___lltoft@exp,c
  9934  003A38  D006               	goto	l4159
  9935  003A3A                     l4157:
  9936  003A3A  90D8               	bcf	status,0,c
  9937  003A3C  320C               	rrcf	___lltoft@c+3,f,c
  9938  003A3E  320B               	rrcf	___lltoft@c+2,f,c
  9939  003A40  320A               	rrcf	___lltoft@c+1,f,c
  9940  003A42  3209               	rrcf	___lltoft@c,f,c
  9941  003A44  2A11               	incf	___lltoft@exp,f,c
  9942  003A46                     l4159:
  9943  003A46  0E00               	movlw	0
  9944  003A48  1409               	andwf	___lltoft@c,w,c
  9945  003A4A  6E0D               	movwf	??___lltoft& (0+255),c
  9946  003A4C  0E00               	movlw	0
  9947  003A4E  140A               	andwf	___lltoft@c+1,w,c
  9948  003A50  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  9949  003A52  0E00               	movlw	0
  9950  003A54  140B               	andwf	___lltoft@c+2,w,c
  9951  003A56  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  9952  003A58  0EFF               	movlw	255
  9953  003A5A  140C               	andwf	___lltoft@c+3,w,c
  9954  003A5C  6E10               	movwf	(??___lltoft+3)& (0+255),c
  9955  003A5E  500D               	movf	??___lltoft,w,c
  9956  003A60  100E               	iorwf	??___lltoft+1,w,c
  9957  003A62  100F               	iorwf	??___lltoft+2,w,c
  9958  003A64  1010               	iorwf	??___lltoft+3,w,c
  9959  003A66  A4D8               	btfss	status,2,c
  9960  003A68  D7E8               	goto	l4157
  9961  003A6A  C009  F001         	movff	___lltoft@c,___ftpack@arg
  9962  003A6E  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  9963  003A72  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  9964  003A76  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  9965  003A7A  0E00               	movlw	0
  9966  003A7C  6E05               	movwf	___ftpack@sign,c
  9967  003A7E  EC14  F01F         	call	___ftpack	;wreg free
  9968  003A82  C001  F009         	movff	?___ftpack,?___lltoft
  9969  003A86  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  9970  003A8A  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  9971  003A8E  0012               	return	
  9972  003A90                     __end_of___lltoft:
  9973                           	opt stack 0
  9974                           tblptru	equ	0xFF8
  9975                           tblptrh	equ	0xFF7
  9976                           tblptrl	equ	0xFF6
  9977                           tablat	equ	0xFF5
  9978                           prodh	equ	0xFF4
  9979                           prodl	equ	0xFF3
  9980                           postinc0	equ	0xFEE
  9981                           wreg	equ	0xFE8
  9982                           indf1	equ	0xFE7
  9983                           postdec1	equ	0xFE5
  9984                           fsr1h	equ	0xFE2
  9985                           fsr1l	equ	0xFE1
  9986                           indf2	equ	0xFDF
  9987                           postinc2	equ	0xFDE
  9988                           postdec2	equ	0xFDD
  9989                           fsr2h	equ	0xFDA
  9990                           fsr2l	equ	0xFD9
  9991                           status	equ	0xFD8
  9992                           
  9993 ;; *************** function ___llmod *****************
  9994 ;; Defined at:
  9995 ;;		line 8 in file "/opt/microchip/xc8/v1.37/sources/common/llmod.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;  dividend        4   13[COMRAM] unsigned long 
  9998 ;;  divisor         4   17[COMRAM] unsigned long 
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;  counter         1   21[COMRAM] unsigned char 
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  4   13[COMRAM] unsigned long 
 10003 ;; Registers used:
 10004 ;;		wreg, status,2, status,0
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10010 ;;      Params:         8       0       0       0       0       0       0       0       0
 10011 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10013 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10014 ;;Total ram usage:        9 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; This function calls:
 10017 ;;		Nothing
 10018 ;; This function is called by:
 10019 ;;		_sprintf
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023                           	psect	text13
 10024  003A90                     __ptext13:
 10025                           	opt stack 0
 10026  003A90                     ___llmod:
 10027                           	opt stack 29
 10028                           
 10029                           ;incstack = 0
 10030  003A90  5012               	movf	___llmod@divisor,w,c
 10031  003A92  1013               	iorwf	___llmod@divisor+1,w,c
 10032  003A94  1014               	iorwf	___llmod@divisor+2,w,c
 10033  003A96  1015               	iorwf	___llmod@divisor+3,w,c
 10034  003A98  B4D8               	btfsc	status,2,c
 10035  003A9A  D024               	goto	l880
 10036  003A9C  0E01               	movlw	1
 10037  003A9E  6E16               	movwf	___llmod@counter,c
 10038  003AA0  D006               	goto	l4145
 10039  003AA2                     l4143:
 10040  003AA2  90D8               	bcf	status,0,c
 10041  003AA4  3612               	rlcf	___llmod@divisor,f,c
 10042  003AA6  3613               	rlcf	___llmod@divisor+1,f,c
 10043  003AA8  3614               	rlcf	___llmod@divisor+2,f,c
 10044  003AAA  3615               	rlcf	___llmod@divisor+3,f,c
 10045  003AAC  2A16               	incf	___llmod@counter,f,c
 10046  003AAE                     l4145:
 10047  003AAE  AE15               	btfss	___llmod@divisor+3,7,c
 10048  003AB0  D7F8               	goto	l4143
 10049  003AB2                     l4147:
 10050  003AB2  5012               	movf	___llmod@divisor,w,c
 10051  003AB4  5C0E               	subwf	___llmod@dividend,w,c
 10052  003AB6  5013               	movf	___llmod@divisor+1,w,c
 10053  003AB8  580F               	subwfb	___llmod@dividend+1,w,c
 10054  003ABA  5014               	movf	___llmod@divisor+2,w,c
 10055  003ABC  5810               	subwfb	___llmod@dividend+2,w,c
 10056  003ABE  5015               	movf	___llmod@divisor+3,w,c
 10057  003AC0  5811               	subwfb	___llmod@dividend+3,w,c
 10058  003AC2  A0D8               	btfss	status,0,c
 10059  003AC4  D008               	goto	l4151
 10060  003AC6  5012               	movf	___llmod@divisor,w,c
 10061  003AC8  5E0E               	subwf	___llmod@dividend,f,c
 10062  003ACA  5013               	movf	___llmod@divisor+1,w,c
 10063  003ACC  5A0F               	subwfb	___llmod@dividend+1,f,c
 10064  003ACE  5014               	movf	___llmod@divisor+2,w,c
 10065  003AD0  5A10               	subwfb	___llmod@dividend+2,f,c
 10066  003AD2  5015               	movf	___llmod@divisor+3,w,c
 10067  003AD4  5A11               	subwfb	___llmod@dividend+3,f,c
 10068  003AD6                     l4151:
 10069  003AD6  90D8               	bcf	status,0,c
 10070  003AD8  3215               	rrcf	___llmod@divisor+3,f,c
 10071  003ADA  3214               	rrcf	___llmod@divisor+2,f,c
 10072  003ADC  3213               	rrcf	___llmod@divisor+1,f,c
 10073  003ADE  3212               	rrcf	___llmod@divisor,f,c
 10074  003AE0  2E16               	decfsz	___llmod@counter,f,c
 10075  003AE2  D7E7               	goto	l4147
 10076  003AE4                     l880:
 10077  003AE4  C00E  F00E         	movff	___llmod@dividend,?___llmod
 10078  003AE8  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
 10079  003AEC  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
 10080  003AF0  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
 10081  003AF4  0012               	return		;funcret
 10082  003AF6                     __end_of___llmod:
 10083                           	opt stack 0
 10084                           tblptru	equ	0xFF8
 10085                           tblptrh	equ	0xFF7
 10086                           tblptrl	equ	0xFF6
 10087                           tablat	equ	0xFF5
 10088                           prodh	equ	0xFF4
 10089                           prodl	equ	0xFF3
 10090                           postinc0	equ	0xFEE
 10091                           wreg	equ	0xFE8
 10092                           indf1	equ	0xFE7
 10093                           postdec1	equ	0xFE5
 10094                           fsr1h	equ	0xFE2
 10095                           fsr1l	equ	0xFE1
 10096                           indf2	equ	0xFDF
 10097                           postinc2	equ	0xFDE
 10098                           postdec2	equ	0xFDD
 10099                           fsr2h	equ	0xFDA
 10100                           fsr2l	equ	0xFD9
 10101                           status	equ	0xFD8
 10102                           
 10103 ;; *************** function ___lldiv *****************
 10104 ;; Defined at:
 10105 ;;		line 8 in file "/opt/microchip/xc8/v1.37/sources/common/lldiv.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;  dividend        4    0[COMRAM] unsigned long 
 10108 ;;  divisor         4    4[COMRAM] unsigned long 
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;  quotient        4    8[COMRAM] unsigned long 
 10111 ;;  counter         1   12[COMRAM] unsigned char 
 10112 ;; Return value:  Size  Location     Type
 10113 ;;                  4    0[COMRAM] unsigned long 
 10114 ;; Registers used:
 10115 ;;		wreg, status,2, status,0
 10116 ;; Tracked objects:
 10117 ;;		On entry : 0/0
 10118 ;;		On exit  : 0/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10121 ;;      Params:         8       0       0       0       0       0       0       0       0
 10122 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10123 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10124 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10125 ;;Total ram usage:       13 bytes
 10126 ;; Hardware stack levels used:    1
 10127 ;; This function calls:
 10128 ;;		Nothing
 10129 ;; This function is called by:
 10130 ;;		_sprintf
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text14
 10135  003B66                     __ptext14:
 10136                           	opt stack 0
 10137  003B66                     ___lldiv:
 10138                           	opt stack 29
 10139                           
 10140                           ;incstack = 0
 10141  003B66  0E00               	movlw	0
 10142  003B68  6E09               	movwf	___lldiv@quotient,c
 10143  003B6A  0E00               	movlw	0
 10144  003B6C  6E0A               	movwf	___lldiv@quotient+1,c
 10145  003B6E  0E00               	movlw	0
 10146  003B70  6E0B               	movwf	___lldiv@quotient+2,c
 10147  003B72  0E00               	movlw	0
 10148  003B74  6E0C               	movwf	___lldiv@quotient+3,c
 10149  003B76  5005               	movf	___lldiv@divisor,w,c
 10150  003B78  1006               	iorwf	___lldiv@divisor+1,w,c
 10151  003B7A  1007               	iorwf	___lldiv@divisor+2,w,c
 10152  003B7C  1008               	iorwf	___lldiv@divisor+3,w,c
 10153  003B7E  B4D8               	btfsc	status,2,c
 10154  003B80  D02A               	goto	l870
 10155  003B82  0E01               	movlw	1
 10156  003B84  6E0D               	movwf	___lldiv@counter,c
 10157  003B86  D006               	goto	l4125
 10158  003B88                     l4123:
 10159  003B88  90D8               	bcf	status,0,c
 10160  003B8A  3605               	rlcf	___lldiv@divisor,f,c
 10161  003B8C  3606               	rlcf	___lldiv@divisor+1,f,c
 10162  003B8E  3607               	rlcf	___lldiv@divisor+2,f,c
 10163  003B90  3608               	rlcf	___lldiv@divisor+3,f,c
 10164  003B92  2A0D               	incf	___lldiv@counter,f,c
 10165  003B94                     l4125:
 10166  003B94  AE08               	btfss	___lldiv@divisor+3,7,c
 10167  003B96  D7F8               	goto	l4123
 10168  003B98                     l4127:
 10169  003B98  90D8               	bcf	status,0,c
 10170  003B9A  3609               	rlcf	___lldiv@quotient,f,c
 10171  003B9C  360A               	rlcf	___lldiv@quotient+1,f,c
 10172  003B9E  360B               	rlcf	___lldiv@quotient+2,f,c
 10173  003BA0  360C               	rlcf	___lldiv@quotient+3,f,c
 10174  003BA2  5005               	movf	___lldiv@divisor,w,c
 10175  003BA4  5C01               	subwf	___lldiv@dividend,w,c
 10176  003BA6  5006               	movf	___lldiv@divisor+1,w,c
 10177  003BA8  5802               	subwfb	___lldiv@dividend+1,w,c
 10178  003BAA  5007               	movf	___lldiv@divisor+2,w,c
 10179  003BAC  5803               	subwfb	___lldiv@dividend+2,w,c
 10180  003BAE  5008               	movf	___lldiv@divisor+3,w,c
 10181  003BB0  5804               	subwfb	___lldiv@dividend+3,w,c
 10182  003BB2  A0D8               	btfss	status,0,c
 10183  003BB4  D009               	goto	l4135
 10184  003BB6  5005               	movf	___lldiv@divisor,w,c
 10185  003BB8  5E01               	subwf	___lldiv@dividend,f,c
 10186  003BBA  5006               	movf	___lldiv@divisor+1,w,c
 10187  003BBC  5A02               	subwfb	___lldiv@dividend+1,f,c
 10188  003BBE  5007               	movf	___lldiv@divisor+2,w,c
 10189  003BC0  5A03               	subwfb	___lldiv@dividend+2,f,c
 10190  003BC2  5008               	movf	___lldiv@divisor+3,w,c
 10191  003BC4  5A04               	subwfb	___lldiv@dividend+3,f,c
 10192  003BC6  8009               	bsf	___lldiv@quotient,0,c
 10193  003BC8                     l4135:
 10194  003BC8  90D8               	bcf	status,0,c
 10195  003BCA  3208               	rrcf	___lldiv@divisor+3,f,c
 10196  003BCC  3207               	rrcf	___lldiv@divisor+2,f,c
 10197  003BCE  3206               	rrcf	___lldiv@divisor+1,f,c
 10198  003BD0  3205               	rrcf	___lldiv@divisor,f,c
 10199  003BD2  2E0D               	decfsz	___lldiv@counter,f,c
 10200  003BD4  D7E1               	goto	l4127
 10201  003BD6                     l870:
 10202  003BD6  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10203  003BDA  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10204  003BDE  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10205  003BE2  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10206  003BE6  0012               	return		;funcret
 10207  003BE8                     __end_of___lldiv:
 10208                           	opt stack 0
 10209                           tblptru	equ	0xFF8
 10210                           tblptrh	equ	0xFF7
 10211                           tblptrl	equ	0xFF6
 10212                           tablat	equ	0xFF5
 10213                           prodh	equ	0xFF4
 10214                           prodl	equ	0xFF3
 10215                           postinc0	equ	0xFEE
 10216                           wreg	equ	0xFE8
 10217                           indf1	equ	0xFE7
 10218                           postdec1	equ	0xFE5
 10219                           fsr1h	equ	0xFE2
 10220                           fsr1l	equ	0xFE1
 10221                           indf2	equ	0xFDF
 10222                           postinc2	equ	0xFDE
 10223                           postdec2	equ	0xFDD
 10224                           fsr2h	equ	0xFDA
 10225                           fsr2l	equ	0xFD9
 10226                           status	equ	0xFD8
 10227                           
 10228 ;; *************** function ___fttol *****************
 10229 ;; Defined at:
 10230 ;;		line 44 in file "/opt/microchip/xc8/v1.37/sources/common/fttol.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;  f1              3   61[COMRAM] float 
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;  lval            4   71[COMRAM] unsigned long 
 10235 ;;  exp1            1   75[COMRAM] unsigned char 
 10236 ;;  sign1           1   70[COMRAM] unsigned char 
 10237 ;; Return value:  Size  Location     Type
 10238 ;;                  4   61[COMRAM] long 
 10239 ;; Registers used:
 10240 ;;		wreg, status,2, status,0
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/0
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10246 ;;      Params:         4       0       0       0       0       0       0       0       0
 10247 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10248 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10249 ;;      Totals:        15       0       0       0       0       0       0       0       0
 10250 ;;Total ram usage:       15 bytes
 10251 ;; Hardware stack levels used:    1
 10252 ;; This function calls:
 10253 ;;		Nothing
 10254 ;; This function is called by:
 10255 ;;		_main
 10256 ;;		_sprintf
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260                           	psect	text15
 10261  003FBC                     __ptext15:
 10262                           	opt stack 0
 10263  003FBC                     ___fttol:
 10264                           	opt stack 29
 10265                           
 10266                           ;incstack = 0
 10267  003FBC  C040  F042         	movff	___fttol@f1+2,??___fttol
 10268  003FC0  6A43               	clrf	(??___fttol+1)& (0+255),c
 10269  003FC2  6A44               	clrf	(??___fttol+2)& (0+255),c
 10270  003FC4  343F               	rlcf	___fttol@f1+1,w,c
 10271  003FC6  3642               	rlcf	??___fttol& (0+255),f,c
 10272  003FC8  E301               	bnc	u4271
 10273  003FCA  8043               	bsf	(??___fttol+1)& (0+255),0,c
 10274  003FCC                     u4271:
 10275  003FCC  5042               	movf	??___fttol,w,c
 10276  003FCE  6E4C               	movwf	___fttol@exp1,c
 10277  003FD0  504C               	movf	___fttol@exp1,w,c
 10278  003FD2  A4D8               	btfss	status,2,c
 10279  003FD4  D009               	goto	l4077
 10280  003FD6  0E00               	movlw	0
 10281  003FD8  6E3E               	movwf	?___fttol,c
 10282  003FDA  0E00               	movlw	0
 10283  003FDC  6E3F               	movwf	?___fttol+1,c
 10284  003FDE  0E00               	movlw	0
 10285  003FE0  6E40               	movwf	?___fttol+2,c
 10286  003FE2  0E00               	movlw	0
 10287  003FE4  6E41               	movwf	?___fttol+3,c
 10288  003FE6  0012               	return	
 10289  003FE8                     l4077:
 10290  003FE8  0E17               	movlw	23
 10291  003FEA  6E42               	movwf	??___fttol& (0+255),c
 10292  003FEC  C03E  F043         	movff	___fttol@f1,??___fttol+1
 10293  003FF0  C03F  F044         	movff	___fttol@f1+1,??___fttol+2
 10294  003FF4  C040  F045         	movff	___fttol@f1+2,??___fttol+3
 10295  003FF8  2842               	incf	??___fttol,w,c
 10296  003FFA  6E46               	movwf	(??___fttol+4)& (0+255),c
 10297  003FFC  D004               	goto	u4290
 10298  003FFE                     u4295:
 10299  003FFE  90D8               	bcf	status,0,c
 10300  004000  3245               	rrcf	??___fttol+3,f,c
 10301  004002  3244               	rrcf	??___fttol+2,f,c
 10302  004004  3243               	rrcf	??___fttol+1,f,c
 10303  004006                     u4290:
 10304  004006  2E46               	decfsz	(??___fttol+4)& (0+255),f,c
 10305  004008  D7FA               	goto	u4295
 10306  00400A  5043               	movf	??___fttol+1,w,c
 10307  00400C  6E47               	movwf	___fttol@sign1,c
 10308  00400E  8E3F               	bsf	___fttol@f1+1,7,c
 10309  004010  0EFF               	movlw	255
 10310  004012  163E               	andwf	___fttol@f1,f,c
 10311  004014  0EFF               	movlw	255
 10312  004016  163F               	andwf	___fttol@f1+1,f,c
 10313  004018  0E00               	movlw	0
 10314  00401A  1640               	andwf	___fttol@f1+2,f,c
 10315  00401C  503E               	movf	___fttol@f1,w,c
 10316  00401E  6E48               	movwf	___fttol@lval,c
 10317  004020  503F               	movf	___fttol@f1+1,w,c
 10318  004022  6E49               	movwf	___fttol@lval+1,c
 10319  004024  5040               	movf	___fttol@f1+2,w,c
 10320  004026  6E4A               	movwf	___fttol@lval+2,c
 10321  004028  6A4B               	clrf	___fttol@lval+3,c
 10322  00402A  0E8E               	movlw	142
 10323  00402C  5E4C               	subwf	___fttol@exp1,f,c
 10324  00402E  AE4C               	btfss	___fttol@exp1,7,c
 10325  004030  D016               	goto	l4099
 10326  004032  504C               	movf	___fttol@exp1,w,c
 10327  004034  0A80               	xorlw	128
 10328  004036  0F8F               	addlw	143
 10329  004038  B0D8               	btfsc	status,0,c
 10330  00403A  D009               	goto	l4095
 10331  00403C  0E00               	movlw	0
 10332  00403E  6E3E               	movwf	?___fttol,c
 10333  004040  0E00               	movlw	0
 10334  004042  6E3F               	movwf	?___fttol+1,c
 10335  004044  0E00               	movlw	0
 10336  004046  6E40               	movwf	?___fttol+2,c
 10337  004048  0E00               	movlw	0
 10338  00404A  6E41               	movwf	?___fttol+3,c
 10339  00404C  0012               	return	
 10340  00404E                     l4095:
 10341  00404E  90D8               	bcf	status,0,c
 10342  004050  324B               	rrcf	___fttol@lval+3,f,c
 10343  004052  324A               	rrcf	___fttol@lval+2,f,c
 10344  004054  3249               	rrcf	___fttol@lval+1,f,c
 10345  004056  3248               	rrcf	___fttol@lval,f,c
 10346  004058  3E4C               	incfsz	___fttol@exp1,f,c
 10347  00405A  D7F9               	goto	l4095
 10348  00405C  D015               	goto	l4109
 10349  00405E                     l4099:
 10350  00405E  0E17               	movlw	23
 10351  004060  644C               	cpfsgt	___fttol@exp1,c
 10352  004062  D00F               	goto	l4107
 10353  004064  0E00               	movlw	0
 10354  004066  6E3E               	movwf	?___fttol,c
 10355  004068  0E00               	movlw	0
 10356  00406A  6E3F               	movwf	?___fttol+1,c
 10357  00406C  0E00               	movlw	0
 10358  00406E  6E40               	movwf	?___fttol+2,c
 10359  004070  0E00               	movlw	0
 10360  004072  6E41               	movwf	?___fttol+3,c
 10361  004074  0012               	return	
 10362  004076                     l4105:
 10363  004076  90D8               	bcf	status,0,c
 10364  004078  3648               	rlcf	___fttol@lval,f,c
 10365  00407A  3649               	rlcf	___fttol@lval+1,f,c
 10366  00407C  364A               	rlcf	___fttol@lval+2,f,c
 10367  00407E  364B               	rlcf	___fttol@lval+3,f,c
 10368  004080  064C               	decf	___fttol@exp1,f,c
 10369  004082                     l4107:
 10370  004082  504C               	movf	___fttol@exp1,w,c
 10371  004084  A4D8               	btfss	status,2,c
 10372  004086  D7F7               	goto	l4105
 10373  004088                     l4109:
 10374  004088  5047               	movf	___fttol@sign1,w,c
 10375  00408A  B4D8               	btfsc	status,2,c
 10376  00408C  D008               	goto	l4113
 10377  00408E  1E4B               	comf	___fttol@lval+3,f,c
 10378  004090  1E4A               	comf	___fttol@lval+2,f,c
 10379  004092  1E49               	comf	___fttol@lval+1,f,c
 10380  004094  6C48               	negf	___fttol@lval,c
 10381  004096  0E00               	movlw	0
 10382  004098  2249               	addwfc	___fttol@lval+1,f,c
 10383  00409A  224A               	addwfc	___fttol@lval+2,f,c
 10384  00409C  224B               	addwfc	___fttol@lval+3,f,c
 10385  00409E                     l4113:
 10386  00409E  C048  F03E         	movff	___fttol@lval,?___fttol
 10387  0040A2  C049  F03F         	movff	___fttol@lval+1,?___fttol+1
 10388  0040A6  C04A  F040         	movff	___fttol@lval+2,?___fttol+2
 10389  0040AA  C04B  F041         	movff	___fttol@lval+3,?___fttol+3
 10390  0040AE  0012               	return	
 10391  0040B0                     __end_of___fttol:
 10392                           	opt stack 0
 10393                           tblptru	equ	0xFF8
 10394                           tblptrh	equ	0xFF7
 10395                           tblptrl	equ	0xFF6
 10396                           tablat	equ	0xFF5
 10397                           prodh	equ	0xFF4
 10398                           prodl	equ	0xFF3
 10399                           postinc0	equ	0xFEE
 10400                           wreg	equ	0xFE8
 10401                           indf1	equ	0xFE7
 10402                           postdec1	equ	0xFE5
 10403                           fsr1h	equ	0xFE2
 10404                           fsr1l	equ	0xFE1
 10405                           indf2	equ	0xFDF
 10406                           postinc2	equ	0xFDE
 10407                           postdec2	equ	0xFDD
 10408                           fsr2h	equ	0xFDA
 10409                           fsr2l	equ	0xFD9
 10410                           status	equ	0xFD8
 10411                           
 10412 ;; *************** function ___ftsub *****************
 10413 ;; Defined at:
 10414 ;;		line 20 in file "/opt/microchip/xc8/v1.37/sources/common/ftsub.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;  f1              3   61[COMRAM] float 
 10417 ;;  f2              3   64[COMRAM] float 
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;		None
 10420 ;; Return value:  Size  Location     Type
 10421 ;;                  3   61[COMRAM] float 
 10422 ;; Registers used:
 10423 ;;		wreg, status,2, status,0, cstack
 10424 ;; Tracked objects:
 10425 ;;		On entry : 0/0
 10426 ;;		On exit  : 0/0
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10429 ;;      Params:         6       0       0       0       0       0       0       0       0
 10430 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10431 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10432 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10433 ;;Total ram usage:        6 bytes
 10434 ;; Hardware stack levels used:    1
 10435 ;; Hardware stack levels required when called:    2
 10436 ;; This function calls:
 10437 ;;		___ftadd
 10438 ;; This function is called by:
 10439 ;;		_sprintf
 10440 ;; This function uses a non-reentrant model
 10441 ;;
 10442                           
 10443                           	psect	text16
 10444  003868                     __ptext16:
 10445                           	opt stack 0
 10446  003868                     ___ftsub:
 10447                           	opt stack 27
 10448                           
 10449                           ;incstack = 0
 10450  003868  5041               	movf	___ftsub@f2,w,c
 10451  00386A  1042               	iorwf	___ftsub@f2+1,w,c
 10452  00386C  1043               	iorwf	___ftsub@f2+2,w,c
 10453  00386E  B4D8               	btfsc	status,2,c
 10454  003870  D006               	goto	l4045
 10455  003872  0E00               	movlw	0
 10456  003874  1A41               	xorwf	___ftsub@f2,f,c
 10457  003876  0E00               	movlw	0
 10458  003878  1A42               	xorwf	___ftsub@f2+1,f,c
 10459  00387A  0E80               	movlw	128
 10460  00387C  1A43               	xorwf	___ftsub@f2+2,f,c
 10461  00387E                     l4045:
 10462  00387E  C03E  F032         	movff	___ftsub@f1,___ftadd@f1
 10463  003882  C03F  F033         	movff	___ftsub@f1+1,___ftadd@f1+1
 10464  003886  C040  F034         	movff	___ftsub@f1+2,___ftadd@f1+2
 10465  00388A  C041  F035         	movff	___ftsub@f2,___ftadd@f2
 10466  00388E  C042  F036         	movff	___ftsub@f2+1,___ftadd@f2+1
 10467  003892  C043  F037         	movff	___ftsub@f2+2,___ftadd@f2+2
 10468  003896  EC45  F023         	call	___ftadd	;wreg free
 10469  00389A  C032  F03E         	movff	?___ftadd,?___ftsub
 10470  00389E  C033  F03F         	movff	?___ftadd+1,?___ftsub+1
 10471  0038A2  C034  F040         	movff	?___ftadd+2,?___ftsub+2
 10472  0038A6  0012               	return	
 10473  0038A8                     __end_of___ftsub:
 10474                           	opt stack 0
 10475                           tblptru	equ	0xFF8
 10476                           tblptrh	equ	0xFF7
 10477                           tblptrl	equ	0xFF6
 10478                           tablat	equ	0xFF5
 10479                           prodh	equ	0xFF4
 10480                           prodl	equ	0xFF3
 10481                           postinc0	equ	0xFEE
 10482                           wreg	equ	0xFE8
 10483                           indf1	equ	0xFE7
 10484                           postdec1	equ	0xFE5
 10485                           fsr1h	equ	0xFE2
 10486                           fsr1l	equ	0xFE1
 10487                           indf2	equ	0xFDF
 10488                           postinc2	equ	0xFDE
 10489                           postdec2	equ	0xFDD
 10490                           fsr2h	equ	0xFDA
 10491                           fsr2l	equ	0xFD9
 10492                           status	equ	0xFD8
 10493                           
 10494 ;; *************** function ___ftadd *****************
 10495 ;; Defined at:
 10496 ;;		line 86 in file "/opt/microchip/xc8/v1.37/sources/common/ftadd.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;  f1              3   49[COMRAM] float 
 10499 ;;  f2              3   52[COMRAM] float 
 10500 ;; Auto vars:     Size  Location     Type
 10501 ;;  exp1            1   60[COMRAM] unsigned char 
 10502 ;;  exp2            1   59[COMRAM] unsigned char 
 10503 ;;  sign            1   58[COMRAM] unsigned char 
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  3   49[COMRAM] float 
 10506 ;; Registers used:
 10507 ;;		wreg, status,2, status,0, cstack
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10513 ;;      Params:         6       0       0       0       0       0       0       0       0
 10514 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10515 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10516 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10517 ;;Total ram usage:       12 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    1
 10520 ;; This function calls:
 10521 ;;		___ftpack
 10522 ;; This function is called by:
 10523 ;;		_main
 10524 ;;		_sprintf
 10525 ;;		___ftsub
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           	psect	text17
 10530  00468A                     __ptext17:
 10531                           	opt stack 0
 10532  00468A                     ___ftadd:
 10533                           	opt stack 27
 10534                           
 10535                           ;incstack = 0
 10536  00468A  C034  F038         	movff	___ftadd@f1+2,??___ftadd
 10537  00468E  6A39               	clrf	(??___ftadd+1)& (0+255),c
 10538  004690  6A3A               	clrf	(??___ftadd+2)& (0+255),c
 10539  004692  3433               	rlcf	___ftadd@f1+1,w,c
 10540  004694  3638               	rlcf	??___ftadd& (0+255),f,c
 10541  004696  E301               	bnc	u3411
 10542  004698  8039               	bsf	(??___ftadd+1)& (0+255),0,c
 10543  00469A                     u3411:
 10544  00469A  5038               	movf	??___ftadd,w,c
 10545  00469C  6E3D               	movwf	___ftadd@exp1,c
 10546  00469E  C037  F038         	movff	___ftadd@f2+2,??___ftadd
 10547  0046A2  6A39               	clrf	(??___ftadd+1)& (0+255),c
 10548  0046A4  6A3A               	clrf	(??___ftadd+2)& (0+255),c
 10549  0046A6  3436               	rlcf	___ftadd@f2+1,w,c
 10550  0046A8  3638               	rlcf	??___ftadd& (0+255),f,c
 10551  0046AA  E301               	bnc	u3421
 10552  0046AC  8039               	bsf	(??___ftadd+1)& (0+255),0,c
 10553  0046AE                     u3421:
 10554  0046AE  5038               	movf	??___ftadd,w,c
 10555  0046B0  6E3C               	movwf	___ftadd@exp2,c
 10556  0046B2  503D               	movf	___ftadd@exp1,w,c
 10557  0046B4  B4D8               	btfsc	status,2,c
 10558  0046B6  D00B               	goto	l746
 10559  0046B8  503C               	movf	___ftadd@exp2,w,c
 10560  0046BA  5C3D               	subwf	___ftadd@exp1,w,c
 10561  0046BC  B0D8               	btfsc	status,0,c
 10562  0046BE  D00E               	goto	l3533
 10563  0046C0  503D               	movf	___ftadd@exp1,w,c
 10564  0046C2  0800               	sublw	0
 10565  0046C4  243C               	addwf	___ftadd@exp2,w,c
 10566  0046C6  6E38               	movwf	??___ftadd& (0+255),c
 10567  0046C8  0E18               	movlw	24
 10568  0046CA  6438               	cpfsgt	??___ftadd,c
 10569  0046CC  D007               	goto	l3533
 10570  0046CE                     l746:
 10571  0046CE  C035  F032         	movff	___ftadd@f2,?___ftadd
 10572  0046D2  C036  F033         	movff	___ftadd@f2+1,?___ftadd+1
 10573  0046D6  C037  F034         	movff	___ftadd@f2+2,?___ftadd+2
 10574  0046DA  0012               	return	
 10575  0046DC                     l3533:
 10576  0046DC  503C               	movf	___ftadd@exp2,w,c
 10577  0046DE  B4D8               	btfsc	status,2,c
 10578  0046E0  D00B               	goto	l750
 10579  0046E2  503D               	movf	___ftadd@exp1,w,c
 10580  0046E4  5C3C               	subwf	___ftadd@exp2,w,c
 10581  0046E6  B0D8               	btfsc	status,0,c
 10582  0046E8  D00E               	goto	l3539
 10583  0046EA  503C               	movf	___ftadd@exp2,w,c
 10584  0046EC  0800               	sublw	0
 10585  0046EE  243D               	addwf	___ftadd@exp1,w,c
 10586  0046F0  6E38               	movwf	??___ftadd& (0+255),c
 10587  0046F2  0E18               	movlw	24
 10588  0046F4  6438               	cpfsgt	??___ftadd,c
 10589  0046F6  D007               	goto	l3539
 10590  0046F8                     l750:
 10591  0046F8  C032  F032         	movff	___ftadd@f1,?___ftadd
 10592  0046FC  C033  F033         	movff	___ftadd@f1+1,?___ftadd+1
 10593  004700  C034  F034         	movff	___ftadd@f1+2,?___ftadd+2
 10594  004704  0012               	return	
 10595  004706                     l3539:
 10596  004706  0E06               	movlw	6
 10597  004708  6E3B               	movwf	___ftadd@sign,c
 10598  00470A  BE34               	btfsc	___ftadd@f1+2,7,c
 10599  00470C  8E3B               	bsf	___ftadd@sign,7,c
 10600  00470E  BE37               	btfsc	___ftadd@f2+2,7,c
 10601  004710  8C3B               	bsf	___ftadd@sign,6,c
 10602  004712  8E33               	bsf	___ftadd@f1+1,7,c
 10603  004714  0EFF               	movlw	255
 10604  004716  1632               	andwf	___ftadd@f1,f,c
 10605  004718  0EFF               	movlw	255
 10606  00471A  1633               	andwf	___ftadd@f1+1,f,c
 10607  00471C  0E00               	movlw	0
 10608  00471E  1634               	andwf	___ftadd@f1+2,f,c
 10609  004720  8E36               	bsf	___ftadd@f2+1,7,c
 10610  004722  0EFF               	movlw	255
 10611  004724  1635               	andwf	___ftadd@f2,f,c
 10612  004726  0EFF               	movlw	255
 10613  004728  1636               	andwf	___ftadd@f2+1,f,c
 10614  00472A  0E00               	movlw	0
 10615  00472C  1637               	andwf	___ftadd@f2+2,f,c
 10616  00472E  503C               	movf	___ftadd@exp2,w,c
 10617  004730  5C3D               	subwf	___ftadd@exp1,w,c
 10618  004732  B0D8               	btfsc	status,0,c
 10619  004734  D01B               	goto	l3565
 10620  004736                     l3555:
 10621  004736  90D8               	bcf	status,0,c
 10622  004738  3635               	rlcf	___ftadd@f2,f,c
 10623  00473A  3636               	rlcf	___ftadd@f2+1,f,c
 10624  00473C  3637               	rlcf	___ftadd@f2+2,f,c
 10625  00473E  063C               	decf	___ftadd@exp2,f,c
 10626  004740  503D               	movf	___ftadd@exp1,w,c
 10627  004742  183C               	xorwf	___ftadd@exp2,w,c
 10628  004744  B4D8               	btfsc	status,2,c
 10629  004746  D00D               	goto	l3563
 10630  004748  063B               	decf	___ftadd@sign,f,c
 10631  00474A  C03B  F038         	movff	___ftadd@sign,??___ftadd
 10632  00474E  0E07               	movlw	7
 10633  004750  1638               	andwf	??___ftadd,f,c
 10634  004752  B4D8               	btfsc	status,2,c
 10635  004754  D006               	goto	l3563
 10636  004756  D7EF               	goto	l3555
 10637  004758                     l3561:
 10638  004758  90D8               	bcf	status,0,c
 10639  00475A  3234               	rrcf	___ftadd@f1+2,f,c
 10640  00475C  3233               	rrcf	___ftadd@f1+1,f,c
 10641  00475E  3232               	rrcf	___ftadd@f1,f,c
 10642  004760  2A3D               	incf	___ftadd@exp1,f,c
 10643  004762                     l3563:
 10644  004762  503C               	movf	___ftadd@exp2,w,c
 10645  004764  183D               	xorwf	___ftadd@exp1,w,c
 10646  004766  B4D8               	btfsc	status,2,c
 10647  004768  D01F               	goto	l761
 10648  00476A  D7F6               	goto	l3561
 10649  00476C                     l3565:
 10650  00476C  503D               	movf	___ftadd@exp1,w,c
 10651  00476E  5C3C               	subwf	___ftadd@exp2,w,c
 10652  004770  B0D8               	btfsc	status,0,c
 10653  004772  D01A               	goto	l761
 10654  004774                     l3567:
 10655  004774  90D8               	bcf	status,0,c
 10656  004776  3632               	rlcf	___ftadd@f1,f,c
 10657  004778  3633               	rlcf	___ftadd@f1+1,f,c
 10658  00477A  3634               	rlcf	___ftadd@f1+2,f,c
 10659  00477C  063D               	decf	___ftadd@exp1,f,c
 10660  00477E  503D               	movf	___ftadd@exp1,w,c
 10661  004780  183C               	xorwf	___ftadd@exp2,w,c
 10662  004782  B4D8               	btfsc	status,2,c
 10663  004784  D00D               	goto	l3575
 10664  004786  063B               	decf	___ftadd@sign,f,c
 10665  004788  C03B  F038         	movff	___ftadd@sign,??___ftadd
 10666  00478C  0E07               	movlw	7
 10667  00478E  1638               	andwf	??___ftadd,f,c
 10668  004790  B4D8               	btfsc	status,2,c
 10669  004792  D006               	goto	l3575
 10670  004794  D7EF               	goto	l3567
 10671  004796                     l3573:
 10672  004796  90D8               	bcf	status,0,c
 10673  004798  3237               	rrcf	___ftadd@f2+2,f,c
 10674  00479A  3236               	rrcf	___ftadd@f2+1,f,c
 10675  00479C  3235               	rrcf	___ftadd@f2,f,c
 10676  00479E  2A3C               	incf	___ftadd@exp2,f,c
 10677  0047A0                     l3575:
 10678  0047A0  503C               	movf	___ftadd@exp2,w,c
 10679  0047A2  183D               	xorwf	___ftadd@exp1,w,c
 10680  0047A4  A4D8               	btfss	status,2,c
 10681  0047A6  D7F7               	goto	l3573
 10682  0047A8                     l761:
 10683  0047A8  AE3B               	btfss	___ftadd@sign,7,c
 10684  0047AA  D00C               	goto	l770
 10685  0047AC  0EFF               	movlw	255
 10686  0047AE  1A32               	xorwf	___ftadd@f1,f,c
 10687  0047B0  0EFF               	movlw	255
 10688  0047B2  1A33               	xorwf	___ftadd@f1+1,f,c
 10689  0047B4  0EFF               	movlw	255
 10690  0047B6  1A34               	xorwf	___ftadd@f1+2,f,c
 10691  0047B8  0E01               	movlw	1
 10692  0047BA  2632               	addwf	___ftadd@f1,f,c
 10693  0047BC  0E00               	movlw	0
 10694  0047BE  2233               	addwfc	___ftadd@f1+1,f,c
 10695  0047C0  0E00               	movlw	0
 10696  0047C2  2234               	addwfc	___ftadd@f1+2,f,c
 10697  0047C4                     l770:
 10698  0047C4  AC3B               	btfss	___ftadd@sign,6,c
 10699  0047C6  D00C               	goto	l3581
 10700  0047C8  0EFF               	movlw	255
 10701  0047CA  1A35               	xorwf	___ftadd@f2,f,c
 10702  0047CC  0EFF               	movlw	255
 10703  0047CE  1A36               	xorwf	___ftadd@f2+1,f,c
 10704  0047D0  0EFF               	movlw	255
 10705  0047D2  1A37               	xorwf	___ftadd@f2+2,f,c
 10706  0047D4  0E01               	movlw	1
 10707  0047D6  2635               	addwf	___ftadd@f2,f,c
 10708  0047D8  0E00               	movlw	0
 10709  0047DA  2236               	addwfc	___ftadd@f2+1,f,c
 10710  0047DC  0E00               	movlw	0
 10711  0047DE  2237               	addwfc	___ftadd@f2+2,f,c
 10712  0047E0                     l3581:
 10713  0047E0  0E00               	movlw	0
 10714  0047E2  6E3B               	movwf	___ftadd@sign,c
 10715  0047E4  5032               	movf	___ftadd@f1,w,c
 10716  0047E6  2635               	addwf	___ftadd@f2,f,c
 10717  0047E8  5033               	movf	___ftadd@f1+1,w,c
 10718  0047EA  2236               	addwfc	___ftadd@f2+1,f,c
 10719  0047EC  5034               	movf	___ftadd@f1+2,w,c
 10720  0047EE  2237               	addwfc	___ftadd@f2+2,f,c
 10721  0047F0  AE37               	btfss	___ftadd@f2+2,7,c
 10722  0047F2  D00E               	goto	l3591
 10723  0047F4  0EFF               	movlw	255
 10724  0047F6  1A35               	xorwf	___ftadd@f2,f,c
 10725  0047F8  0EFF               	movlw	255
 10726  0047FA  1A36               	xorwf	___ftadd@f2+1,f,c
 10727  0047FC  0EFF               	movlw	255
 10728  0047FE  1A37               	xorwf	___ftadd@f2+2,f,c
 10729  004800  0E01               	movlw	1
 10730  004802  2635               	addwf	___ftadd@f2,f,c
 10731  004804  0E00               	movlw	0
 10732  004806  2236               	addwfc	___ftadd@f2+1,f,c
 10733  004808  0E00               	movlw	0
 10734  00480A  2237               	addwfc	___ftadd@f2+2,f,c
 10735  00480C  0E01               	movlw	1
 10736  00480E  6E3B               	movwf	___ftadd@sign,c
 10737  004810                     l3591:
 10738  004810  C035  F001         	movff	___ftadd@f2,___ftpack@arg
 10739  004814  C036  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
 10740  004818  C037  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
 10741  00481C  C03D  F004         	movff	___ftadd@exp1,___ftpack@exp
 10742  004820  C03B  F005         	movff	___ftadd@sign,___ftpack@sign
 10743  004824  EC14  F01F         	call	___ftpack	;wreg free
 10744  004828  C001  F032         	movff	?___ftpack,?___ftadd
 10745  00482C  C002  F033         	movff	?___ftpack+1,?___ftadd+1
 10746  004830  C003  F034         	movff	?___ftpack+2,?___ftadd+2
 10747  004834  0012               	return	
 10748  004836                     __end_of___ftadd:
 10749                           	opt stack 0
 10750                           tblptru	equ	0xFF8
 10751                           tblptrh	equ	0xFF7
 10752                           tblptrl	equ	0xFF6
 10753                           tablat	equ	0xFF5
 10754                           prodh	equ	0xFF4
 10755                           prodl	equ	0xFF3
 10756                           postinc0	equ	0xFEE
 10757                           wreg	equ	0xFE8
 10758                           indf1	equ	0xFE7
 10759                           postdec1	equ	0xFE5
 10760                           fsr1h	equ	0xFE2
 10761                           fsr1l	equ	0xFE1
 10762                           indf2	equ	0xFDF
 10763                           postinc2	equ	0xFDE
 10764                           postdec2	equ	0xFDD
 10765                           fsr2h	equ	0xFDA
 10766                           fsr2l	equ	0xFD9
 10767                           status	equ	0xFD8
 10768                           
 10769 ;; *************** function ___ftneg *****************
 10770 ;; Defined at:
 10771 ;;		line 15 in file "/opt/microchip/xc8/v1.37/sources/common/ftneg.c"
 10772 ;; Parameters:    Size  Location     Type
 10773 ;;  f1              3    0[COMRAM] float 
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;		None
 10776 ;; Return value:  Size  Location     Type
 10777 ;;                  3    0[COMRAM] float 
 10778 ;; Registers used:
 10779 ;;		wreg, status,2, status,0
 10780 ;; Tracked objects:
 10781 ;;		On entry : 0/0
 10782 ;;		On exit  : 0/0
 10783 ;;		Unchanged: 0/0
 10784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10785 ;;      Params:         3       0       0       0       0       0       0       0       0
 10786 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10787 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10788 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10789 ;;Total ram usage:        3 bytes
 10790 ;; Hardware stack levels used:    1
 10791 ;; This function calls:
 10792 ;;		Nothing
 10793 ;; This function is called by:
 10794 ;;		_sprintf
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           	psect	text18
 10799  00375A                     __ptext18:
 10800                           	opt stack 0
 10801  00375A                     ___ftneg:
 10802                           	opt stack 29
 10803                           
 10804                           ;incstack = 0
 10805  00375A  5001               	movf	___ftneg@f1,w,c
 10806  00375C  1002               	iorwf	___ftneg@f1+1,w,c
 10807  00375E  1003               	iorwf	___ftneg@f1+2,w,c
 10808  003760  B4D8               	btfsc	status,2,c
 10809  003762  D006               	goto	l820
 10810  003764  0E00               	movlw	0
 10811  003766  1A01               	xorwf	___ftneg@f1,f,c
 10812  003768  0E00               	movlw	0
 10813  00376A  1A02               	xorwf	___ftneg@f1+1,f,c
 10814  00376C  0E80               	movlw	128
 10815  00376E  1A03               	xorwf	___ftneg@f1+2,f,c
 10816  003770                     l820:
 10817  003770  C001  F001         	movff	___ftneg@f1,?___ftneg
 10818  003774  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
 10819  003778  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
 10820  00377C  0012               	return		;funcret
 10821  00377E                     __end_of___ftneg:
 10822                           	opt stack 0
 10823                           tblptru	equ	0xFF8
 10824                           tblptrh	equ	0xFF7
 10825                           tblptrl	equ	0xFF6
 10826                           tablat	equ	0xFF5
 10827                           prodh	equ	0xFF4
 10828                           prodl	equ	0xFF3
 10829                           postinc0	equ	0xFEE
 10830                           wreg	equ	0xFE8
 10831                           indf1	equ	0xFE7
 10832                           postdec1	equ	0xFE5
 10833                           fsr1h	equ	0xFE2
 10834                           fsr1l	equ	0xFE1
 10835                           indf2	equ	0xFDF
 10836                           postinc2	equ	0xFDE
 10837                           postdec2	equ	0xFDD
 10838                           fsr2h	equ	0xFDA
 10839                           fsr2l	equ	0xFD9
 10840                           status	equ	0xFD8
 10841                           
 10842 ;; *************** function ___ftge *****************
 10843 ;; Defined at:
 10844 ;;		line 4 in file "/opt/microchip/xc8/v1.37/sources/common/ftge.c"
 10845 ;; Parameters:    Size  Location     Type
 10846 ;;  ff1             3    0[COMRAM] float 
 10847 ;;  ff2             3    3[COMRAM] float 
 10848 ;; Auto vars:     Size  Location     Type
 10849 ;;		None
 10850 ;; Return value:  Size  Location     Type
 10851 ;;		None               void
 10852 ;; Registers used:
 10853 ;;		wreg, status,2, status,0
 10854 ;; Tracked objects:
 10855 ;;		On entry : 0/0
 10856 ;;		On exit  : 0/0
 10857 ;;		Unchanged: 0/0
 10858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10859 ;;      Params:         6       0       0       0       0       0       0       0       0
 10860 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10861 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10862 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10863 ;;Total ram usage:        9 bytes
 10864 ;; Hardware stack levels used:    1
 10865 ;; This function calls:
 10866 ;;		Nothing
 10867 ;; This function is called by:
 10868 ;;		_main
 10869 ;;		_sprintf
 10870 ;; This function uses a non-reentrant model
 10871 ;;
 10872                           
 10873                           	psect	text19
 10874  003CFC                     __ptext19:
 10875                           	opt stack 0
 10876  003CFC                     ___ftge:
 10877                           	opt stack 29
 10878                           
 10879                           ;incstack = 0
 10880  003CFC  AE03               	btfss	___ftge@ff1+2,7,c
 10881  003CFE  D016               	goto	l4053
 10882  003D00  C001  F007         	movff	___ftge@ff1,??___ftge
 10883  003D04  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
 10884  003D08  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
 10885  003D0C  1E07               	comf	??___ftge,f,c
 10886  003D0E  1E08               	comf	??___ftge+1,f,c
 10887  003D10  1E09               	comf	??___ftge+2,f,c
 10888  003D12  2A07               	incf	??___ftge,f,c
 10889  003D14  0E00               	movlw	0
 10890  003D16  2208               	addwfc	??___ftge+1,f,c
 10891  003D18  2209               	addwfc	??___ftge+2,f,c
 10892  003D1A  0E00               	movlw	0
 10893  003D1C  2407               	addwf	??___ftge,w,c
 10894  003D1E  6E01               	movwf	___ftge@ff1,c
 10895  003D20  0E00               	movlw	0
 10896  003D22  2008               	addwfc	??___ftge+1,w,c
 10897  003D24  6E02               	movwf	___ftge@ff1+1,c
 10898  003D26  0E80               	movlw	128
 10899  003D28  2009               	addwfc	??___ftge+2,w,c
 10900  003D2A  6E03               	movwf	___ftge@ff1+2,c
 10901  003D2C                     l4053:
 10902  003D2C  AE06               	btfss	___ftge@ff2+2,7,c
 10903  003D2E  D016               	goto	l4057
 10904  003D30  C004  F007         	movff	___ftge@ff2,??___ftge
 10905  003D34  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
 10906  003D38  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
 10907  003D3C  1E07               	comf	??___ftge,f,c
 10908  003D3E  1E08               	comf	??___ftge+1,f,c
 10909  003D40  1E09               	comf	??___ftge+2,f,c
 10910  003D42  2A07               	incf	??___ftge,f,c
 10911  003D44  0E00               	movlw	0
 10912  003D46  2208               	addwfc	??___ftge+1,f,c
 10913  003D48  2209               	addwfc	??___ftge+2,f,c
 10914  003D4A  0E00               	movlw	0
 10915  003D4C  2407               	addwf	??___ftge,w,c
 10916  003D4E  6E04               	movwf	___ftge@ff2,c
 10917  003D50  0E00               	movlw	0
 10918  003D52  2008               	addwfc	??___ftge+1,w,c
 10919  003D54  6E05               	movwf	___ftge@ff2+1,c
 10920  003D56  0E80               	movlw	128
 10921  003D58  2009               	addwfc	??___ftge+2,w,c
 10922  003D5A  6E06               	movwf	___ftge@ff2+2,c
 10923  003D5C                     l4057:
 10924  003D5C  0E00               	movlw	0
 10925  003D5E  1A01               	xorwf	___ftge@ff1,f,c
 10926  003D60  0E00               	movlw	0
 10927  003D62  1A02               	xorwf	___ftge@ff1+1,f,c
 10928  003D64  0E80               	movlw	128
 10929  003D66  1A03               	xorwf	___ftge@ff1+2,f,c
 10930  003D68  0E00               	movlw	0
 10931  003D6A  1A04               	xorwf	___ftge@ff2,f,c
 10932  003D6C  0E00               	movlw	0
 10933  003D6E  1A05               	xorwf	___ftge@ff2+1,f,c
 10934  003D70  0E80               	movlw	128
 10935  003D72  1A06               	xorwf	___ftge@ff2+2,f,c
 10936  003D74  5004               	movf	___ftge@ff2,w,c
 10937  003D76  5C01               	subwf	___ftge@ff1,w,c
 10938  003D78  5005               	movf	___ftge@ff2+1,w,c
 10939  003D7A  5802               	subwfb	___ftge@ff1+1,w,c
 10940  003D7C  5006               	movf	___ftge@ff2+2,w,c
 10941  003D7E  5803               	subwfb	___ftge@ff1+2,w,c
 10942  003D80  B0D8               	btfsc	status,0,c
 10943  003D82  D002               	goto	l4063
 10944  003D84  90D8               	bcf	status,0,c
 10945  003D86  0012               	return	
 10946  003D88                     l4063:
 10947  003D88  80D8               	bsf	status,0,c
 10948  003D8A  0012               	return	
 10949  003D8C                     __end_of___ftge:
 10950                           	opt stack 0
 10951                           tblptru	equ	0xFF8
 10952                           tblptrh	equ	0xFF7
 10953                           tblptrl	equ	0xFF6
 10954                           tablat	equ	0xFF5
 10955                           prodh	equ	0xFF4
 10956                           prodl	equ	0xFF3
 10957                           postinc0	equ	0xFEE
 10958                           wreg	equ	0xFE8
 10959                           indf1	equ	0xFE7
 10960                           postdec1	equ	0xFE5
 10961                           fsr1h	equ	0xFE2
 10962                           fsr1l	equ	0xFE1
 10963                           indf2	equ	0xFDF
 10964                           postinc2	equ	0xFDE
 10965                           postdec2	equ	0xFDD
 10966                           fsr2h	equ	0xFDA
 10967                           fsr2l	equ	0xFD9
 10968                           status	equ	0xFD8
 10969                           
 10970 ;; *************** function _abs *****************
 10971 ;; Defined at:
 10972 ;;		line 21 in file "main.c"
 10973 ;; Parameters:    Size  Location     Type
 10974 ;;  a               2    0[COMRAM] int 
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;		None
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  2    0[COMRAM] int 
 10979 ;; Registers used:
 10980 ;;		wreg, status,2, status,0
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10986 ;;      Params:         2       0       0       0       0       0       0       0       0
 10987 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10988 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10989 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10990 ;;Total ram usage:        4 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; This function calls:
 10993 ;;		Nothing
 10994 ;; This function is called by:
 10995 ;;		_main
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           	psect	text20
 11000  0037A4                     __ptext20:
 11001                           	opt stack 0
 11002  0037A4                     _abs:
 11003                           	opt stack 30
 11004                           
 11005                           ;main.c: 23: return a >= 0 ? a : -a;
 11006                           
 11007                           ;incstack = 0
 11008  0037A4  AE02               	btfss	abs@a+1,7,c
 11009  0037A6  D00D               	goto	l54
 11010  0037A8  C001  F003         	movff	abs@a,??_abs
 11011  0037AC  C002  F004         	movff	abs@a+1,??_abs+1
 11012  0037B0  1E03               	comf	??_abs,f,c
 11013  0037B2  1E04               	comf	??_abs+1,f,c
 11014  0037B4  4A03               	infsnz	??_abs,f,c
 11015  0037B6  2A04               	incf	??_abs+1,f,c
 11016  0037B8  C003  F001         	movff	??_abs,?_abs
 11017  0037BC  C004  F002         	movff	??_abs+1,?_abs+1
 11018  0037C0  0012               	return	
 11019  0037C2                     l54:
 11020  0037C2  C001  F001         	movff	abs@a,?_abs
 11021  0037C6  C002  F002         	movff	abs@a+1,?_abs+1
 11022  0037CA  0012               	return	
 11023  0037CC                     __end_of_abs:
 11024                           	opt stack 0
 11025                           tblptru	equ	0xFF8
 11026                           tblptrh	equ	0xFF7
 11027                           tblptrl	equ	0xFF6
 11028                           tablat	equ	0xFF5
 11029                           prodh	equ	0xFF4
 11030                           prodl	equ	0xFF3
 11031                           postinc0	equ	0xFEE
 11032                           wreg	equ	0xFE8
 11033                           indf1	equ	0xFE7
 11034                           postdec1	equ	0xFE5
 11035                           fsr1h	equ	0xFE2
 11036                           fsr1l	equ	0xFE1
 11037                           indf2	equ	0xFDF
 11038                           postinc2	equ	0xFDE
 11039                           postdec2	equ	0xFDD
 11040                           fsr2h	equ	0xFDA
 11041                           fsr2l	equ	0xFD9
 11042                           status	equ	0xFD8
 11043                           
 11044 ;; *************** function ___lwtoft *****************
 11045 ;; Defined at:
 11046 ;;		line 28 in file "/opt/microchip/xc8/v1.37/sources/common/lwtoft.c"
 11047 ;; Parameters:    Size  Location     Type
 11048 ;;  c               2    8[COMRAM] unsigned int 
 11049 ;; Auto vars:     Size  Location     Type
 11050 ;;		None
 11051 ;; Return value:  Size  Location     Type
 11052 ;;                  3    8[COMRAM] float 
 11053 ;; Registers used:
 11054 ;;		wreg, status,2, status,0, cstack
 11055 ;; Tracked objects:
 11056 ;;		On entry : 0/0
 11057 ;;		On exit  : 0/0
 11058 ;;		Unchanged: 0/0
 11059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11060 ;;      Params:         3       0       0       0       0       0       0       0       0
 11061 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11062 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11063 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11064 ;;Total ram usage:        3 bytes
 11065 ;; Hardware stack levels used:    1
 11066 ;; Hardware stack levels required when called:    1
 11067 ;; This function calls:
 11068 ;;		___ftpack
 11069 ;; This function is called by:
 11070 ;;		_main
 11071 ;; This function uses a non-reentrant model
 11072 ;;
 11073                           
 11074                           	psect	text21
 11075  003736                     __ptext21:
 11076                           	opt stack 0
 11077  003736                     ___lwtoft:
 11078                           	opt stack 29
 11079                           
 11080                           ;incstack = 0
 11081  003736  C009  F001         	movff	___lwtoft@c,___ftpack@arg
 11082  00373A  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
 11083  00373E  6A03               	clrf	___ftpack@arg+2,c
 11084  003740  0E8E               	movlw	142
 11085  003742  6E04               	movwf	___ftpack@exp,c
 11086  003744  0E00               	movlw	0
 11087  003746  6E05               	movwf	___ftpack@sign,c
 11088  003748  EC14  F01F         	call	___ftpack	;wreg free
 11089  00374C  C001  F009         	movff	?___ftpack,?___lwtoft
 11090  003750  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
 11091  003754  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
 11092  003758  0012               	return	
 11093  00375A                     __end_of___lwtoft:
 11094                           	opt stack 0
 11095                           tblptru	equ	0xFF8
 11096                           tblptrh	equ	0xFF7
 11097                           tblptrl	equ	0xFF6
 11098                           tablat	equ	0xFF5
 11099                           prodh	equ	0xFF4
 11100                           prodl	equ	0xFF3
 11101                           postinc0	equ	0xFEE
 11102                           wreg	equ	0xFE8
 11103                           indf1	equ	0xFE7
 11104                           postdec1	equ	0xFE5
 11105                           fsr1h	equ	0xFE2
 11106                           fsr1l	equ	0xFE1
 11107                           indf2	equ	0xFDF
 11108                           postinc2	equ	0xFDE
 11109                           postdec2	equ	0xFDD
 11110                           fsr2h	equ	0xFDA
 11111                           fsr2l	equ	0xFD9
 11112                           status	equ	0xFD8
 11113                           
 11114 ;; *************** function ___ftdiv *****************
 11115 ;; Defined at:
 11116 ;;		line 54 in file "/opt/microchip/xc8/v1.37/sources/common/ftdiv.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;  f1              3   24[COMRAM] float 
 11119 ;;  f2              3   27[COMRAM] float 
 11120 ;; Auto vars:     Size  Location     Type
 11121 ;;  f3              3   34[COMRAM] float 
 11122 ;;  sign            1   38[COMRAM] unsigned char 
 11123 ;;  exp             1   37[COMRAM] unsigned char 
 11124 ;;  cntr            1   33[COMRAM] unsigned char 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  3   24[COMRAM] float 
 11127 ;; Registers used:
 11128 ;;		wreg, status,2, status,0, cstack
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11134 ;;      Params:         6       0       0       0       0       0       0       0       0
 11135 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11136 ;;      Temps:          3       0       0       0       0       0       0       0       0
 11137 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11138 ;;Total ram usage:       15 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:    1
 11141 ;; This function calls:
 11142 ;;		___ftpack
 11143 ;; This function is called by:
 11144 ;;		_main
 11145 ;; This function uses a non-reentrant model
 11146 ;;
 11147                           
 11148                           	psect	text22
 11149  003ED6                     __ptext22:
 11150                           	opt stack 0
 11151  003ED6                     ___ftdiv:
 11152                           	opt stack 29
 11153                           
 11154                           ;incstack = 0
 11155  003ED6  C01B  F01F         	movff	___ftdiv@f1+2,??___ftdiv
 11156  003EDA  6A20               	clrf	(??___ftdiv+1)& (0+255),c
 11157  003EDC  6A21               	clrf	(??___ftdiv+2)& (0+255),c
 11158  003EDE  341A               	rlcf	___ftdiv@f1+1,w,c
 11159  003EE0  361F               	rlcf	??___ftdiv& (0+255),f,c
 11160  003EE2  E301               	bnc	u5241
 11161  003EE4  8020               	bsf	(??___ftdiv+1)& (0+255),0,c
 11162  003EE6                     u5241:
 11163  003EE6  501F               	movf	??___ftdiv,w,c
 11164  003EE8  6E26               	movwf	___ftdiv@exp,c
 11165  003EEA  5026               	movf	___ftdiv@exp,w,c
 11166  003EEC  A4D8               	btfss	status,2,c
 11167  003EEE  D007               	goto	l4763
 11168  003EF0  0E00               	movlw	0
 11169  003EF2  6E19               	movwf	?___ftdiv,c
 11170  003EF4  0E00               	movlw	0
 11171  003EF6  6E1A               	movwf	?___ftdiv+1,c
 11172  003EF8  0E00               	movlw	0
 11173  003EFA  6E1B               	movwf	?___ftdiv+2,c
 11174  003EFC  0012               	return	
 11175  003EFE                     l4763:
 11176  003EFE  C01E  F01F         	movff	___ftdiv@f2+2,??___ftdiv
 11177  003F02  6A20               	clrf	(??___ftdiv+1)& (0+255),c
 11178  003F04  6A21               	clrf	(??___ftdiv+2)& (0+255),c
 11179  003F06  341D               	rlcf	___ftdiv@f2+1,w,c
 11180  003F08  361F               	rlcf	??___ftdiv& (0+255),f,c
 11181  003F0A  E301               	bnc	u5261
 11182  003F0C  8020               	bsf	(??___ftdiv+1)& (0+255),0,c
 11183  003F0E                     u5261:
 11184  003F0E  501F               	movf	??___ftdiv,w,c
 11185  003F10  6E27               	movwf	___ftdiv@sign,c
 11186  003F12  5027               	movf	___ftdiv@sign,w,c
 11187  003F14  A4D8               	btfss	status,2,c
 11188  003F16  D007               	goto	l4769
 11189  003F18  0E00               	movlw	0
 11190  003F1A  6E19               	movwf	?___ftdiv,c
 11191  003F1C  0E00               	movlw	0
 11192  003F1E  6E1A               	movwf	?___ftdiv+1,c
 11193  003F20  0E00               	movlw	0
 11194  003F22  6E1B               	movwf	?___ftdiv+2,c
 11195  003F24  0012               	return	
 11196  003F26                     l4769:
 11197  003F26  0E00               	movlw	0
 11198  003F28  6E23               	movwf	___ftdiv@f3,c
 11199  003F2A  0E00               	movlw	0
 11200  003F2C  6E24               	movwf	___ftdiv@f3+1,c
 11201  003F2E  0E00               	movlw	0
 11202  003F30  6E25               	movwf	___ftdiv@f3+2,c
 11203  003F32  5027               	movf	___ftdiv@sign,w,c
 11204  003F34  0F89               	addlw	137
 11205  003F36  5E26               	subwf	___ftdiv@exp,f,c
 11206  003F38  C01B  F027         	movff	___ftdiv@f1+2,___ftdiv@sign
 11207  003F3C  501E               	movf	___ftdiv@f2+2,w,c
 11208  003F3E  1A27               	xorwf	___ftdiv@sign,f,c
 11209  003F40  0E80               	movlw	128
 11210  003F42  1627               	andwf	___ftdiv@sign,f,c
 11211  003F44  8E1A               	bsf	___ftdiv@f1+1,7,c
 11212  003F46  0EFF               	movlw	255
 11213  003F48  1619               	andwf	___ftdiv@f1,f,c
 11214  003F4A  0EFF               	movlw	255
 11215  003F4C  161A               	andwf	___ftdiv@f1+1,f,c
 11216  003F4E  0E00               	movlw	0
 11217  003F50  161B               	andwf	___ftdiv@f1+2,f,c
 11218  003F52  8E1D               	bsf	___ftdiv@f2+1,7,c
 11219  003F54  0EFF               	movlw	255
 11220  003F56  161C               	andwf	___ftdiv@f2,f,c
 11221  003F58  0EFF               	movlw	255
 11222  003F5A  161D               	andwf	___ftdiv@f2+1,f,c
 11223  003F5C  0E00               	movlw	0
 11224  003F5E  161E               	andwf	___ftdiv@f2+2,f,c
 11225  003F60  0E18               	movlw	24
 11226  003F62  6E22               	movwf	___ftdiv@cntr,c
 11227  003F64                     l4789:
 11228  003F64  90D8               	bcf	status,0,c
 11229  003F66  3623               	rlcf	___ftdiv@f3,f,c
 11230  003F68  3624               	rlcf	___ftdiv@f3+1,f,c
 11231  003F6A  3625               	rlcf	___ftdiv@f3+2,f,c
 11232  003F6C  501C               	movf	___ftdiv@f2,w,c
 11233  003F6E  5C19               	subwf	___ftdiv@f1,w,c
 11234  003F70  501D               	movf	___ftdiv@f2+1,w,c
 11235  003F72  581A               	subwfb	___ftdiv@f1+1,w,c
 11236  003F74  501E               	movf	___ftdiv@f2+2,w,c
 11237  003F76  581B               	subwfb	___ftdiv@f1+2,w,c
 11238  003F78  A0D8               	btfss	status,0,c
 11239  003F7A  D007               	goto	l781
 11240  003F7C  501C               	movf	___ftdiv@f2,w,c
 11241  003F7E  5E19               	subwf	___ftdiv@f1,f,c
 11242  003F80  501D               	movf	___ftdiv@f2+1,w,c
 11243  003F82  5A1A               	subwfb	___ftdiv@f1+1,f,c
 11244  003F84  501E               	movf	___ftdiv@f2+2,w,c
 11245  003F86  5A1B               	subwfb	___ftdiv@f1+2,f,c
 11246  003F88  8023               	bsf	___ftdiv@f3,0,c
 11247  003F8A                     l781:
 11248  003F8A  90D8               	bcf	status,0,c
 11249  003F8C  3619               	rlcf	___ftdiv@f1,f,c
 11250  003F8E  361A               	rlcf	___ftdiv@f1+1,f,c
 11251  003F90  361B               	rlcf	___ftdiv@f1+2,f,c
 11252  003F92  2E22               	decfsz	___ftdiv@cntr,f,c
 11253  003F94  D7E7               	goto	l4789
 11254  003F96  C023  F001         	movff	___ftdiv@f3,___ftpack@arg
 11255  003F9A  C024  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
 11256  003F9E  C025  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
 11257  003FA2  C026  F004         	movff	___ftdiv@exp,___ftpack@exp
 11258  003FA6  C027  F005         	movff	___ftdiv@sign,___ftpack@sign
 11259  003FAA  EC14  F01F         	call	___ftpack	;wreg free
 11260  003FAE  C001  F019         	movff	?___ftpack,?___ftdiv
 11261  003FB2  C002  F01A         	movff	?___ftpack+1,?___ftdiv+1
 11262  003FB6  C003  F01B         	movff	?___ftpack+2,?___ftdiv+2
 11263  003FBA  0012               	return	
 11264  003FBC                     __end_of___ftdiv:
 11265                           	opt stack 0
 11266                           tblptru	equ	0xFF8
 11267                           tblptrh	equ	0xFF7
 11268                           tblptrl	equ	0xFF6
 11269                           tablat	equ	0xFF5
 11270                           prodh	equ	0xFF4
 11271                           prodl	equ	0xFF3
 11272                           postinc0	equ	0xFEE
 11273                           wreg	equ	0xFE8
 11274                           indf1	equ	0xFE7
 11275                           postdec1	equ	0xFE5
 11276                           fsr1h	equ	0xFE2
 11277                           fsr1l	equ	0xFE1
 11278                           indf2	equ	0xFDF
 11279                           postinc2	equ	0xFDE
 11280                           postdec2	equ	0xFDD
 11281                           fsr2h	equ	0xFDA
 11282                           fsr2l	equ	0xFD9
 11283                           status	equ	0xFD8
 11284                           
 11285 ;; *************** function ___awtoft *****************
 11286 ;; Defined at:
 11287 ;;		line 32 in file "/opt/microchip/xc8/v1.37/sources/common/awtoft.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;  c               2   20[COMRAM] int 
 11290 ;; Auto vars:     Size  Location     Type
 11291 ;;  sign            1   23[COMRAM] unsigned char 
 11292 ;; Return value:  Size  Location     Type
 11293 ;;                  3   20[COMRAM] float 
 11294 ;; Registers used:
 11295 ;;		wreg, status,2, status,0, cstack
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11301 ;;      Params:         3       0       0       0       0       0       0       0       0
 11302 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11303 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11304 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11305 ;;Total ram usage:        4 bytes
 11306 ;; Hardware stack levels used:    1
 11307 ;; Hardware stack levels required when called:    1
 11308 ;; This function calls:
 11309 ;;		___ftpack
 11310 ;; This function is called by:
 11311 ;;		_main
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           	psect	text23
 11316  0037F6                     __ptext23:
 11317                           	opt stack 0
 11318  0037F6                     ___awtoft:
 11319                           	opt stack 29
 11320                           
 11321                           ;incstack = 0
 11322  0037F6  0E00               	movlw	0
 11323  0037F8  6E18               	movwf	___awtoft@sign,c
 11324  0037FA  AE16               	btfss	___awtoft@c+1,7,c
 11325  0037FC  D006               	goto	l4811
 11326  0037FE  6C15               	negf	___awtoft@c,c
 11327  003800  1E16               	comf	___awtoft@c+1,f,c
 11328  003802  B0D8               	btfsc	status,0,c
 11329  003804  2A16               	incf	___awtoft@c+1,f,c
 11330  003806  0E01               	movlw	1
 11331  003808  6E18               	movwf	___awtoft@sign,c
 11332  00380A                     l4811:
 11333  00380A  C015  F001         	movff	___awtoft@c,___ftpack@arg
 11334  00380E  C016  F002         	movff	___awtoft@c+1,___ftpack@arg+1
 11335  003812  6A03               	clrf	___ftpack@arg+2,c
 11336  003814  0E8E               	movlw	142
 11337  003816  6E04               	movwf	___ftpack@exp,c
 11338  003818  C018  F005         	movff	___awtoft@sign,___ftpack@sign
 11339  00381C  EC14  F01F         	call	___ftpack	;wreg free
 11340  003820  C001  F015         	movff	?___ftpack,?___awtoft
 11341  003824  C002  F016         	movff	?___ftpack+1,?___awtoft+1
 11342  003828  C003  F017         	movff	?___ftpack+2,?___awtoft+2
 11343  00382C  0012               	return	
 11344  00382E                     __end_of___awtoft:
 11345                           	opt stack 0
 11346                           tblptru	equ	0xFF8
 11347                           tblptrh	equ	0xFF7
 11348                           tblptrl	equ	0xFF6
 11349                           tablat	equ	0xFF5
 11350                           prodh	equ	0xFF4
 11351                           prodl	equ	0xFF3
 11352                           postinc0	equ	0xFEE
 11353                           wreg	equ	0xFE8
 11354                           indf1	equ	0xFE7
 11355                           postdec1	equ	0xFE5
 11356                           fsr1h	equ	0xFE2
 11357                           fsr1l	equ	0xFE1
 11358                           indf2	equ	0xFDF
 11359                           postinc2	equ	0xFDE
 11360                           postdec2	equ	0xFDD
 11361                           fsr2h	equ	0xFDA
 11362                           fsr2l	equ	0xFD9
 11363                           status	equ	0xFD8
 11364                           
 11365 ;; *************** function ___ftpack *****************
 11366 ;; Defined at:
 11367 ;;		line 62 in file "/opt/microchip/xc8/v1.37/sources/common/float.c"
 11368 ;; Parameters:    Size  Location     Type
 11369 ;;  arg             3    0[COMRAM] unsigned um
 11370 ;;  exp             1    3[COMRAM] unsigned char 
 11371 ;;  sign            1    4[COMRAM] unsigned char 
 11372 ;; Auto vars:     Size  Location     Type
 11373 ;;		None
 11374 ;; Return value:  Size  Location     Type
 11375 ;;                  3    0[COMRAM] float 
 11376 ;; Registers used:
 11377 ;;		wreg, status,2, status,0
 11378 ;; Tracked objects:
 11379 ;;		On entry : 0/0
 11380 ;;		On exit  : 0/0
 11381 ;;		Unchanged: 0/0
 11382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11383 ;;      Params:         5       0       0       0       0       0       0       0       0
 11384 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11385 ;;      Temps:          3       0       0       0       0       0       0       0       0
 11386 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11387 ;;Total ram usage:        8 bytes
 11388 ;; Hardware stack levels used:    1
 11389 ;; This function calls:
 11390 ;;		Nothing
 11391 ;; This function is called by:
 11392 ;;		___awtoft
 11393 ;;		___ftadd
 11394 ;;		___ftdiv
 11395 ;;		___ftmul
 11396 ;;		___lltoft
 11397 ;;		___lwtoft
 11398 ;; This function uses a non-reentrant model
 11399 ;;
 11400                           
 11401                           	psect	text24
 11402  003E28                     __ptext24:
 11403                           	opt stack 0
 11404  003E28                     ___ftpack:
 11405                           	opt stack 27
 11406                           
 11407                           ;incstack = 0
 11408  003E28  5004               	movf	___ftpack@exp,w,c
 11409  003E2A  B4D8               	btfsc	status,2,c
 11410  003E2C  D005               	goto	l3365
 11411  003E2E  5001               	movf	___ftpack@arg,w,c
 11412  003E30  1002               	iorwf	___ftpack@arg+1,w,c
 11413  003E32  1003               	iorwf	___ftpack@arg+2,w,c
 11414  003E34  A4D8               	btfss	status,2,c
 11415  003E36  D00C               	goto	l3371
 11416  003E38                     l3365:
 11417  003E38  0E00               	movlw	0
 11418  003E3A  6E01               	movwf	?___ftpack,c
 11419  003E3C  0E00               	movlw	0
 11420  003E3E  6E02               	movwf	?___ftpack+1,c
 11421  003E40  0E00               	movlw	0
 11422  003E42  6E03               	movwf	?___ftpack+2,c
 11423  003E44  0012               	return	
 11424  003E46                     l3369:
 11425  003E46  2A04               	incf	___ftpack@exp,f,c
 11426  003E48  90D8               	bcf	status,0,c
 11427  003E4A  3203               	rrcf	___ftpack@arg+2,f,c
 11428  003E4C  3202               	rrcf	___ftpack@arg+1,f,c
 11429  003E4E  3201               	rrcf	___ftpack@arg,f,c
 11430  003E50                     l3371:
 11431  003E50  0E00               	movlw	0
 11432  003E52  1401               	andwf	___ftpack@arg,w,c
 11433  003E54  6E06               	movwf	??___ftpack& (0+255),c
 11434  003E56  0E00               	movlw	0
 11435  003E58  1402               	andwf	___ftpack@arg+1,w,c
 11436  003E5A  6E07               	movwf	(??___ftpack+1)& (0+255),c
 11437  003E5C  0EFE               	movlw	254
 11438  003E5E  1403               	andwf	___ftpack@arg+2,w,c
 11439  003E60  6E08               	movwf	(??___ftpack+2)& (0+255),c
 11440  003E62  5006               	movf	??___ftpack,w,c
 11441  003E64  1007               	iorwf	??___ftpack+1,w,c
 11442  003E66  1008               	iorwf	??___ftpack+2,w,c
 11443  003E68  B4D8               	btfsc	status,2,c
 11444  003E6A  D00C               	goto	l3377
 11445  003E6C  D7EC               	goto	l3369
 11446  003E6E                     l3373:
 11447  003E6E  2A04               	incf	___ftpack@exp,f,c
 11448  003E70  0E01               	movlw	1
 11449  003E72  2601               	addwf	___ftpack@arg,f,c
 11450  003E74  0E00               	movlw	0
 11451  003E76  2202               	addwfc	___ftpack@arg+1,f,c
 11452  003E78  0E00               	movlw	0
 11453  003E7A  2203               	addwfc	___ftpack@arg+2,f,c
 11454  003E7C  90D8               	bcf	status,0,c
 11455  003E7E  3203               	rrcf	___ftpack@arg+2,f,c
 11456  003E80  3202               	rrcf	___ftpack@arg+1,f,c
 11457  003E82  3201               	rrcf	___ftpack@arg,f,c
 11458  003E84                     l3377:
 11459  003E84  0E00               	movlw	0
 11460  003E86  1401               	andwf	___ftpack@arg,w,c
 11461  003E88  6E06               	movwf	??___ftpack& (0+255),c
 11462  003E8A  0E00               	movlw	0
 11463  003E8C  1402               	andwf	___ftpack@arg+1,w,c
 11464  003E8E  6E07               	movwf	(??___ftpack+1)& (0+255),c
 11465  003E90  0EFF               	movlw	255
 11466  003E92  1403               	andwf	___ftpack@arg+2,w,c
 11467  003E94  6E08               	movwf	(??___ftpack+2)& (0+255),c
 11468  003E96  5006               	movf	??___ftpack,w,c
 11469  003E98  1007               	iorwf	??___ftpack+1,w,c
 11470  003E9A  1008               	iorwf	??___ftpack+2,w,c
 11471  003E9C  B4D8               	btfsc	status,2,c
 11472  003E9E  D006               	goto	l3381
 11473  003EA0  D7E6               	goto	l3373
 11474  003EA2                     l3379:
 11475  003EA2  0604               	decf	___ftpack@exp,f,c
 11476  003EA4  90D8               	bcf	status,0,c
 11477  003EA6  3601               	rlcf	___ftpack@arg,f,c
 11478  003EA8  3602               	rlcf	___ftpack@arg+1,f,c
 11479  003EAA  3603               	rlcf	___ftpack@arg+2,f,c
 11480  003EAC                     l3381:
 11481  003EAC  BE02               	btfsc	___ftpack@arg+1,7,c
 11482  003EAE  D003               	goto	l723
 11483  003EB0  0E02               	movlw	2
 11484  003EB2  6004               	cpfslt	___ftpack@exp,c
 11485  003EB4  D7F6               	goto	l3379
 11486  003EB6                     l723:
 11487  003EB6  A004               	btfss	___ftpack@exp,0,c
 11488  003EB8  9E02               	bcf	___ftpack@arg+1,7,c
 11489  003EBA  90D8               	bcf	status,0,c
 11490  003EBC  3204               	rrcf	___ftpack@exp,f,c
 11491  003EBE  5004               	movf	___ftpack@exp,w,c
 11492  003EC0  1203               	iorwf	___ftpack@arg+2,f,c
 11493  003EC2  5005               	movf	___ftpack@sign,w,c
 11494  003EC4  A4D8               	btfss	status,2,c
 11495  003EC6  8E03               	bsf	___ftpack@arg+2,7,c
 11496  003EC8  C001  F001         	movff	___ftpack@arg,?___ftpack
 11497  003ECC  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
 11498  003ED0  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
 11499  003ED4  0012               	return	
 11500  003ED6                     __end_of___ftpack:
 11501                           	opt stack 0
 11502                           tblptru	equ	0xFF8
 11503                           tblptrh	equ	0xFF7
 11504                           tblptrl	equ	0xFF6
 11505                           tablat	equ	0xFF5
 11506                           prodh	equ	0xFF4
 11507                           prodl	equ	0xFF3
 11508                           postinc0	equ	0xFEE
 11509                           wreg	equ	0xFE8
 11510                           indf1	equ	0xFE7
 11511                           postdec1	equ	0xFE5
 11512                           fsr1h	equ	0xFE2
 11513                           fsr1l	equ	0xFE1
 11514                           indf2	equ	0xFDF
 11515                           postinc2	equ	0xFDE
 11516                           postdec2	equ	0xFDD
 11517                           fsr2h	equ	0xFDA
 11518                           fsr2l	equ	0xFD9
 11519                           status	equ	0xFD8
 11520                           
 11521 ;; *************** function _LCDstring *****************
 11522 ;; Defined at:
 11523 ;;		line 1718 in file "LCDgraphic.c"
 11524 ;; Parameters:    Size  Location     Type
 11525 ;;  a               1    wreg     unsigned char 
 11526 ;;  buffer          2   32[COMRAM] PTR const unsigned char 
 11527 ;;		 -> main@buf2(17), main@buf_384(40), main@buf_371(10), main@buf(10), 
 11528 ;; Auto vars:     Size  Location     Type
 11529 ;;  a               1   43[COMRAM] unsigned char 
 11530 ;;  dim             2   50[COMRAM] int 
 11531 ;;  l               2   48[COMRAM] int 
 11532 ;;  mem1            2   46[COMRAM] int 
 11533 ;;  n               2   44[COMRAM] int 
 11534 ;;  i               2   41[COMRAM] int 
 11535 ;;  mem2            2   39[COMRAM] int 
 11536 ;;  res             2    0        int 
 11537 ;;  b               2    0        int 
 11538 ;; Return value:  Size  Location     Type
 11539 ;;                  1    wreg      unsigned char 
 11540 ;; Registers used:
 11541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11542 ;; Tracked objects:
 11543 ;;		On entry : 0/0
 11544 ;;		On exit  : 0/0
 11545 ;;		Unchanged: 0/0
 11546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11547 ;;      Params:         2       0       0       0       0       0       0       0       0
 11548 ;;      Locals:        13       0       0       0       0       0       0       0       0
 11549 ;;      Temps:          5       0       0       0       0       0       0       0       0
 11550 ;;      Totals:        20       0       0       0       0       0       0       0       0
 11551 ;;Total ram usage:       20 bytes
 11552 ;; Hardware stack levels used:    1
 11553 ;; Hardware stack levels required when called:    5
 11554 ;; This function calls:
 11555 ;;		_LCDchar
 11556 ;;		_LCDpage
 11557 ;;		_LCDy
 11558 ;;		___awdiv
 11559 ;;		___wmul
 11560 ;;		__lcd_waitbusy
 11561 ;;		_emptycolumn
 11562 ;;		_strlen
 11563 ;; This function is called by:
 11564 ;;		_main
 11565 ;; This function uses a non-reentrant model
 11566 ;;
 11567                           
 11568                           	psect	text25
 11569  00532C                     __ptext25:
 11570                           	opt stack 0
 11571  00532C                     _LCDstring:
 11572                           	opt stack 25
 11573                           
 11574                           ;incstack = 0
 11575                           ;LCDstring@a stored from wreg
 11576  00532C  6E2C               	movwf	LCDstring@a,c
 11577                           
 11578                           ;LCDgraphic.c: 1719: int dim = 0,b,mem1,mem2,res,i,l,n;
 11579  00532E  0E00               	movlw	0
 11580  005330  6E34               	movwf	LCDstring@dim+1,c
 11581  005332  0E00               	movlw	0
 11582  005334  6E33               	movwf	LCDstring@dim,c
 11583                           
 11584                           ;LCDgraphic.c: 1721: _lcd_waitbusy();
 11585  005336  EC62  F01B         	call	__lcd_waitbusy	;wreg free
 11586                           
 11587                           ;LCDgraphic.c: 1723: dim = strlen(buffer);
 11588  00533A  C021  F001         	movff	LCDstring@buffer,strlen@s
 11589  00533E  C022  F002         	movff	LCDstring@buffer+1,strlen@s+1
 11590  005342  EC17  F01C         	call	_strlen	;wreg free
 11591  005346  C001  F033         	movff	?_strlen,LCDstring@dim
 11592  00534A  C002  F034         	movff	?_strlen+1,LCDstring@dim+1
 11593                           
 11594                           ;LCDgraphic.c: 1726: if(a == 1)
 11595  00534E  042C               	decf	LCDstring@a,w,c
 11596  005350  A4D8               	btfss	status,2,c
 11597  005352  D085               	goto	l4563
 11598                           
 11599                           ;LCDgraphic.c: 1727: {
 11600                           ;LCDgraphic.c: 1729: LCDpage(0,curr_page);
 11601  005354  C247  F005         	movff	_curr_page,LCDpage@page
 11602  005358  0E00               	movlw	0
 11603  00535A  EC9A  F01C         	call	_LCDpage
 11604                           
 11605                           ;LCDgraphic.c: 1730: LCDy(0,1);
 11606  00535E  0E01               	movlw	1
 11607  005360  6E05               	movwf	LCDy@value,c
 11608  005362  0E00               	movlw	0
 11609  005364  ECEE  F01C         	call	_LCDy
 11610                           
 11611                           ;LCDgraphic.c: 1732: if(dim < 11)
 11612  005368  BE34               	btfsc	LCDstring@dim+1,7,c
 11613  00536A  D006               	goto	l4513
 11614  00536C  5034               	movf	LCDstring@dim+1,w,c
 11615  00536E  E123               	bnz	l4525
 11616  005370  0E0B               	movlw	11
 11617  005372  5C33               	subwf	LCDstring@dim,w,c
 11618  005374  B0D8               	btfsc	status,0,c
 11619  005376  D01F               	goto	l4525
 11620  005378                     l4513:
 11621                           
 11622                           ;LCDgraphic.c: 1733: {
 11623                           ;LCDgraphic.c: 1735: for(l=0;l<dim;l++)
 11624  005378  0E00               	movlw	0
 11625  00537A  6E32               	movwf	LCDstring@l+1,c
 11626  00537C  0E00               	movlw	0
 11627  00537E  6E31               	movwf	LCDstring@l,c
 11628  005380  D00F               	goto	l4523
 11629  005382                     l4515:
 11630                           
 11631                           ;LCDgraphic.c: 1736: {
 11632                           ;LCDgraphic.c: 1737: LCDchar(*buffer++,0);
 11633  005382  0E00               	movlw	0
 11634  005384  6E15               	movwf	LCDchar@position,c
 11635  005386  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 11636  00538A  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 11637  00538E  50DF               	movf	indf2,w,c
 11638  005390  EC36  F027         	call	_LCDchar
 11639  005394  4A21               	infsnz	LCDstring@buffer,f,c
 11640  005396  2A22               	incf	LCDstring@buffer+1,f,c
 11641                           
 11642                           ;LCDgraphic.c: 1739: emptycolumn();
 11643  005398  ECC6  F01E         	call	_emptycolumn	;wreg free
 11644  00539C  4A31               	infsnz	LCDstring@l,f,c
 11645  00539E  2A32               	incf	LCDstring@l+1,f,c
 11646  0053A0                     l4523:
 11647  0053A0  5033               	movf	LCDstring@dim,w,c
 11648  0053A2  5C31               	subwf	LCDstring@l,w,c
 11649  0053A4  5032               	movf	LCDstring@l+1,w,c
 11650  0053A6  0A80               	xorlw	128
 11651  0053A8  6E23               	movwf	??_LCDstring& (0+255),c
 11652  0053AA  5034               	movf	LCDstring@dim+1,w,c
 11653  0053AC  0A80               	xorlw	128
 11654  0053AE  5823               	subwfb	??_LCDstring& (0+255),w,c
 11655  0053B0  B0D8               	btfsc	status,0,c
 11656  0053B2  D055               	goto	l4563
 11657  0053B4  D7E6               	goto	l4515
 11658  0053B6                     l4525:
 11659                           
 11660                           ;LCDgraphic.c: 1743: else
 11661                           ;LCDgraphic.c: 1744: {
 11662                           ;LCDgraphic.c: 1746: for(l=0;l<10;l++)
 11663  0053B6  0E00               	movlw	0
 11664  0053B8  6E32               	movwf	LCDstring@l+1,c
 11665  0053BA  0E00               	movlw	0
 11666  0053BC  6E31               	movwf	LCDstring@l,c
 11667  0053BE                     l4527:
 11668  0053BE  BE32               	btfsc	LCDstring@l+1,7,c
 11669  0053C0  D006               	goto	l4531
 11670  0053C2  5032               	movf	LCDstring@l+1,w,c
 11671  0053C4  E114               	bnz	l4541
 11672  0053C6  0E0A               	movlw	10
 11673  0053C8  5C31               	subwf	LCDstring@l,w,c
 11674  0053CA  B0D8               	btfsc	status,0,c
 11675  0053CC  D010               	goto	l4541
 11676  0053CE                     l4531:
 11677                           
 11678                           ;LCDgraphic.c: 1747: {
 11679                           ;LCDgraphic.c: 1748: LCDchar(*buffer++,0);
 11680  0053CE  0E00               	movlw	0
 11681  0053D0  6E15               	movwf	LCDchar@position,c
 11682  0053D2  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 11683  0053D6  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 11684  0053DA  50DF               	movf	indf2,w,c
 11685  0053DC  EC36  F027         	call	_LCDchar
 11686  0053E0  4A21               	infsnz	LCDstring@buffer,f,c
 11687  0053E2  2A22               	incf	LCDstring@buffer+1,f,c
 11688                           
 11689                           ;LCDgraphic.c: 1749: emptycolumn();
 11690  0053E4  ECC6  F01E         	call	_emptycolumn	;wreg free
 11691  0053E8  4A31               	infsnz	LCDstring@l,f,c
 11692  0053EA  2A32               	incf	LCDstring@l+1,f,c
 11693  0053EC  D7E8               	goto	l4527
 11694  0053EE                     l4541:
 11695                           
 11696                           ;LCDgraphic.c: 1750: }
 11697                           ;LCDgraphic.c: 1752: LCDpage(0,curr_page);
 11698  0053EE  C247  F005         	movff	_curr_page,LCDpage@page
 11699  0053F2  0E00               	movlw	0
 11700  0053F4  EC9A  F01C         	call	_LCDpage
 11701                           
 11702                           ;LCDgraphic.c: 1753: LCDchar(*buffer++,2);
 11703  0053F8  0E02               	movlw	2
 11704  0053FA  6E15               	movwf	LCDchar@position,c
 11705  0053FC  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 11706  005400  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 11707  005404  50DF               	movf	indf2,w,c
 11708  005406  EC36  F027         	call	_LCDchar
 11709  00540A  4A21               	infsnz	LCDstring@buffer,f,c
 11710  00540C  2A22               	incf	LCDstring@buffer+1,f,c
 11711                           
 11712                           ;LCDgraphic.c: 1756: LCDpage(1,curr_page);
 11713  00540E  C247  F005         	movff	_curr_page,LCDpage@page
 11714  005412  0E01               	movlw	1
 11715  005414  EC9A  F01C         	call	_LCDpage
 11716                           
 11717                           ;LCDgraphic.c: 1757: LCDy(1,3);
 11718  005418  0E03               	movlw	3
 11719  00541A  6E05               	movwf	LCDy@value,c
 11720  00541C  0E01               	movlw	1
 11721  00541E  ECEE  F01C         	call	_LCDy
 11722                           
 11723                           ;LCDgraphic.c: 1759: for(l=11;l<dim;l++)
 11724  005422  0E00               	movlw	0
 11725  005424  6E32               	movwf	LCDstring@l+1,c
 11726  005426  0E0B               	movlw	11
 11727  005428  6E31               	movwf	LCDstring@l,c
 11728  00542A  D00F               	goto	l4561
 11729  00542C                     l4553:
 11730                           
 11731                           ;LCDgraphic.c: 1760: {
 11732                           ;LCDgraphic.c: 1761: LCDchar(*buffer,0);
 11733  00542C  0E00               	movlw	0
 11734  00542E  6E15               	movwf	LCDchar@position,c
 11735  005430  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 11736  005434  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 11737  005438  50DF               	movf	indf2,w,c
 11738  00543A  EC36  F027         	call	_LCDchar
 11739                           
 11740                           ;LCDgraphic.c: 1762: emptycolumn();
 11741  00543E  ECC6  F01E         	call	_emptycolumn	;wreg free
 11742                           
 11743                           ;LCDgraphic.c: 1764: buffer++;
 11744  005442  4A21               	infsnz	LCDstring@buffer,f,c
 11745  005444  2A22               	incf	LCDstring@buffer+1,f,c
 11746  005446  4A31               	infsnz	LCDstring@l,f,c
 11747  005448  2A32               	incf	LCDstring@l+1,f,c
 11748  00544A                     l4561:
 11749  00544A  5033               	movf	LCDstring@dim,w,c
 11750  00544C  5C31               	subwf	LCDstring@l,w,c
 11751  00544E  5032               	movf	LCDstring@l+1,w,c
 11752  005450  0A80               	xorlw	128
 11753  005452  6E23               	movwf	??_LCDstring& (0+255),c
 11754  005454  5034               	movf	LCDstring@dim+1,w,c
 11755  005456  0A80               	xorlw	128
 11756  005458  5823               	subwfb	??_LCDstring& (0+255),w,c
 11757  00545A  A0D8               	btfss	status,0,c
 11758  00545C  D7E7               	goto	l4553
 11759  00545E                     l4563:
 11760                           
 11761                           ;LCDgraphic.c: 1765: }
 11762                           ;LCDgraphic.c: 1766: }
 11763                           ;LCDgraphic.c: 1767: }
 11764                           ;LCDgraphic.c: 1770: if(a==2)
 11765  00545E  0E02               	movlw	2
 11766  005460  182C               	xorwf	LCDstring@a,w,c
 11767  005462  A4D8               	btfss	status,2,c
 11768  005464  D0FE               	goto	l4643
 11769                           
 11770                           ;LCDgraphic.c: 1771: {
 11771                           ;LCDgraphic.c: 1773: mem1=dim/2;
 11772  005466  C033  F007         	movff	LCDstring@dim,___awdiv@dividend
 11773  00546A  C034  F008         	movff	LCDstring@dim+1,___awdiv@dividend+1
 11774  00546E  0E00               	movlw	0
 11775  005470  6E0A               	movwf	___awdiv@divisor+1,c
 11776  005472  0E02               	movlw	2
 11777  005474  6E09               	movwf	___awdiv@divisor,c
 11778  005476  ECF4  F01D         	call	___awdiv	;wreg free
 11779  00547A  C007  F02F         	movff	?___awdiv,LCDstring@mem1
 11780  00547E  C008  F030         	movff	?___awdiv+1,LCDstring@mem1+1
 11781                           
 11782                           ;LCDgraphic.c: 1774: mem2=dim-mem1;
 11783  005482  C02F  F023         	movff	LCDstring@mem1,??_LCDstring
 11784  005486  C030  F024         	movff	LCDstring@mem1+1,??_LCDstring+1
 11785  00548A  1E23               	comf	??_LCDstring,f,c
 11786  00548C  1E24               	comf	??_LCDstring+1,f,c
 11787  00548E  4A23               	infsnz	??_LCDstring,f,c
 11788  005490  2A24               	incf	??_LCDstring+1,f,c
 11789  005492  5033               	movf	LCDstring@dim,w,c
 11790  005494  2423               	addwf	??_LCDstring,w,c
 11791  005496  6E28               	movwf	LCDstring@mem2,c
 11792  005498  5034               	movf	LCDstring@dim+1,w,c
 11793  00549A  2024               	addwfc	??_LCDstring+1,w,c
 11794  00549C  6E29               	movwf	LCDstring@mem2+1,c
 11795                           
 11796                           ;LCDgraphic.c: 1777: if(mem1==mem2)
 11797  00549E  5028               	movf	LCDstring@mem2,w,c
 11798  0054A0  182F               	xorwf	LCDstring@mem1,w,c
 11799  0054A2  E169               	bnz	l4603
 11800  0054A4  5029               	movf	LCDstring@mem2+1,w,c
 11801  0054A6  1830               	xorwf	LCDstring@mem1+1,w,c
 11802  0054A8  A4D8               	btfss	status,2,c
 11803  0054AA  D065               	goto	l4603
 11804                           
 11805                           ;LCDgraphic.c: 1778: {
 11806                           ;LCDgraphic.c: 1780: n=63-(6*mem1);
 11807  0054AC  C02F  F00F         	movff	LCDstring@mem1,___wmul@multiplier
 11808  0054B0  C030  F010         	movff	LCDstring@mem1+1,___wmul@multiplier+1
 11809  0054B4  0E00               	movlw	0
 11810  0054B6  6E12               	movwf	___wmul@multiplicand+1,c
 11811  0054B8  0E06               	movlw	6
 11812  0054BA  6E11               	movwf	___wmul@multiplicand,c
 11813  0054BC  ECBF  F01B         	call	___wmul	;wreg free
 11814  0054C0  1E0F               	comf	?___wmul,f,c
 11815  0054C2  1E10               	comf	?___wmul+1,f,c
 11816  0054C4  4A0F               	infsnz	?___wmul,f,c
 11817  0054C6  2A10               	incf	?___wmul+1,f,c
 11818  0054C8  0E3F               	movlw	63
 11819  0054CA  240F               	addwf	?___wmul,w,c
 11820  0054CC  6E2D               	movwf	LCDstring@n,c
 11821  0054CE  0E00               	movlw	0
 11822  0054D0  2010               	addwfc	?___wmul+1,w,c
 11823  0054D2  6E2E               	movwf	LCDstring@n+1,c
 11824                           
 11825                           ;LCDgraphic.c: 1781: LCDpage(0,curr_page);
 11826  0054D4  C247  F005         	movff	_curr_page,LCDpage@page
 11827  0054D8  0E00               	movlw	0
 11828  0054DA  EC9A  F01C         	call	_LCDpage
 11829                           
 11830                           ;LCDgraphic.c: 1782: LCDy(0,n);
 11831  0054DE  C02D  F005         	movff	LCDstring@n,LCDy@value
 11832  0054E2  0E00               	movlw	0
 11833  0054E4  ECEE  F01C         	call	_LCDy
 11834                           
 11835                           ;LCDgraphic.c: 1784: for(l=0;l<mem1;l++)
 11836  0054E8  0E00               	movlw	0
 11837  0054EA  6E32               	movwf	LCDstring@l+1,c
 11838  0054EC  0E00               	movlw	0
 11839  0054EE  6E31               	movwf	LCDstring@l,c
 11840  0054F0  D00F               	goto	l4587
 11841  0054F2                     l4579:
 11842                           
 11843                           ;LCDgraphic.c: 1785: {
 11844                           ;LCDgraphic.c: 1787: LCDchar(*buffer++,0);
 11845  0054F2  0E00               	movlw	0
 11846  0054F4  6E15               	movwf	LCDchar@position,c
 11847  0054F6  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 11848  0054FA  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 11849  0054FE  50DF               	movf	indf2,w,c
 11850  005500  EC36  F027         	call	_LCDchar
 11851  005504  4A21               	infsnz	LCDstring@buffer,f,c
 11852  005506  2A22               	incf	LCDstring@buffer+1,f,c
 11853                           
 11854                           ;LCDgraphic.c: 1788: emptycolumn();
 11855  005508  ECC6  F01E         	call	_emptycolumn	;wreg free
 11856  00550C  4A31               	infsnz	LCDstring@l,f,c
 11857  00550E  2A32               	incf	LCDstring@l+1,f,c
 11858  005510                     l4587:
 11859  005510  502F               	movf	LCDstring@mem1,w,c
 11860  005512  5C31               	subwf	LCDstring@l,w,c
 11861  005514  5032               	movf	LCDstring@l+1,w,c
 11862  005516  0A80               	xorlw	128
 11863  005518  6E23               	movwf	??_LCDstring& (0+255),c
 11864  00551A  5030               	movf	LCDstring@mem1+1,w,c
 11865  00551C  0A80               	xorlw	128
 11866  00551E  5823               	subwfb	??_LCDstring& (0+255),w,c
 11867  005520  A0D8               	btfss	status,0,c
 11868  005522  D7E7               	goto	l4579
 11869                           
 11870                           ;LCDgraphic.c: 1789: }
 11871                           ;LCDgraphic.c: 1791: LCDpage(1,curr_page);
 11872  005524  C247  F005         	movff	_curr_page,LCDpage@page
 11873  005528  0E01               	movlw	1
 11874  00552A  EC9A  F01C         	call	_LCDpage
 11875                           
 11876                           ;LCDgraphic.c: 1792: LCDy(1,0);
 11877  00552E  0E00               	movlw	0
 11878  005530  6E05               	movwf	LCDy@value,c
 11879  005532  0E01               	movlw	1
 11880  005534  ECEE  F01C         	call	_LCDy
 11881                           
 11882                           ;LCDgraphic.c: 1793: for(i=mem1;i<dim;i++)
 11883  005538  C02F  F02A         	movff	LCDstring@mem1,LCDstring@i
 11884  00553C  C030  F02B         	movff	LCDstring@mem1+1,LCDstring@i+1
 11885  005540  D00F               	goto	l4601
 11886  005542                     l4593:
 11887                           
 11888                           ;LCDgraphic.c: 1794: {
 11889                           ;LCDgraphic.c: 1796: LCDchar(*buffer++,0);
 11890  005542  0E00               	movlw	0
 11891  005544  6E15               	movwf	LCDchar@position,c
 11892  005546  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 11893  00554A  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 11894  00554E  50DF               	movf	indf2,w,c
 11895  005550  EC36  F027         	call	_LCDchar
 11896  005554  4A21               	infsnz	LCDstring@buffer,f,c
 11897  005556  2A22               	incf	LCDstring@buffer+1,f,c
 11898                           
 11899                           ;LCDgraphic.c: 1797: emptycolumn();
 11900  005558  ECC6  F01E         	call	_emptycolumn	;wreg free
 11901  00555C  4A2A               	infsnz	LCDstring@i,f,c
 11902  00555E  2A2B               	incf	LCDstring@i+1,f,c
 11903  005560                     l4601:
 11904  005560  5033               	movf	LCDstring@dim,w,c
 11905  005562  5C2A               	subwf	LCDstring@i,w,c
 11906  005564  502B               	movf	LCDstring@i+1,w,c
 11907  005566  0A80               	xorlw	128
 11908  005568  6E23               	movwf	??_LCDstring& (0+255),c
 11909  00556A  5034               	movf	LCDstring@dim+1,w,c
 11910  00556C  0A80               	xorlw	128
 11911  00556E  5823               	subwfb	??_LCDstring& (0+255),w,c
 11912  005570  B0D8               	btfsc	status,0,c
 11913  005572  D077               	goto	l4643
 11914  005574  D7E6               	goto	l4593
 11915  005576                     l4603:
 11916                           
 11917                           ;LCDgraphic.c: 1802: else
 11918                           ;LCDgraphic.c: 1803: {
 11919                           ;LCDgraphic.c: 1805: n=61-(6*mem1);
 11920  005576  C02F  F00F         	movff	LCDstring@mem1,___wmul@multiplier
 11921  00557A  C030  F010         	movff	LCDstring@mem1+1,___wmul@multiplier+1
 11922  00557E  0E00               	movlw	0
 11923  005580  6E12               	movwf	___wmul@multiplicand+1,c
 11924  005582  0E06               	movlw	6
 11925  005584  6E11               	movwf	___wmul@multiplicand,c
 11926  005586  ECBF  F01B         	call	___wmul	;wreg free
 11927  00558A  1E0F               	comf	?___wmul,f,c
 11928  00558C  1E10               	comf	?___wmul+1,f,c
 11929  00558E  4A0F               	infsnz	?___wmul,f,c
 11930  005590  2A10               	incf	?___wmul+1,f,c
 11931  005592  0E3D               	movlw	61
 11932  005594  240F               	addwf	?___wmul,w,c
 11933  005596  6E2D               	movwf	LCDstring@n,c
 11934  005598  0E00               	movlw	0
 11935  00559A  2010               	addwfc	?___wmul+1,w,c
 11936  00559C  6E2E               	movwf	LCDstring@n+1,c
 11937                           
 11938                           ;LCDgraphic.c: 1806: LCDpage(0,curr_page);
 11939  00559E  C247  F005         	movff	_curr_page,LCDpage@page
 11940  0055A2  0E00               	movlw	0
 11941  0055A4  EC9A  F01C         	call	_LCDpage
 11942                           
 11943                           ;LCDgraphic.c: 1807: LCDy(0,n);
 11944  0055A8  C02D  F005         	movff	LCDstring@n,LCDy@value
 11945  0055AC  0E00               	movlw	0
 11946  0055AE  ECEE  F01C         	call	_LCDy
 11947                           
 11948                           ;LCDgraphic.c: 1809: for(l=0;l<mem1;l++)
 11949  0055B2  0E00               	movlw	0
 11950  0055B4  6E32               	movwf	LCDstring@l+1,c
 11951  0055B6  0E00               	movlw	0
 11952  0055B8  6E31               	movwf	LCDstring@l,c
 11953  0055BA  D00F               	goto	l4619
 11954  0055BC                     l4611:
 11955                           
 11956                           ;LCDgraphic.c: 1810: {
 11957                           ;LCDgraphic.c: 1812: LCDchar(*buffer++,0);
 11958  0055BC  0E00               	movlw	0
 11959  0055BE  6E15               	movwf	LCDchar@position,c
 11960  0055C0  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 11961  0055C4  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 11962  0055C8  50DF               	movf	indf2,w,c
 11963  0055CA  EC36  F027         	call	_LCDchar
 11964  0055CE  4A21               	infsnz	LCDstring@buffer,f,c
 11965  0055D0  2A22               	incf	LCDstring@buffer+1,f,c
 11966                           
 11967                           ;LCDgraphic.c: 1813: emptycolumn();
 11968  0055D2  ECC6  F01E         	call	_emptycolumn	;wreg free
 11969  0055D6  4A31               	infsnz	LCDstring@l,f,c
 11970  0055D8  2A32               	incf	LCDstring@l+1,f,c
 11971  0055DA                     l4619:
 11972  0055DA  502F               	movf	LCDstring@mem1,w,c
 11973  0055DC  5C31               	subwf	LCDstring@l,w,c
 11974  0055DE  5032               	movf	LCDstring@l+1,w,c
 11975  0055E0  0A80               	xorlw	128
 11976  0055E2  6E23               	movwf	??_LCDstring& (0+255),c
 11977  0055E4  5030               	movf	LCDstring@mem1+1,w,c
 11978  0055E6  0A80               	xorlw	128
 11979  0055E8  5823               	subwfb	??_LCDstring& (0+255),w,c
 11980  0055EA  A0D8               	btfss	status,0,c
 11981  0055EC  D7E7               	goto	l4611
 11982                           
 11983                           ;LCDgraphic.c: 1814: }
 11984                           ;LCDgraphic.c: 1817: LCDpage(0,curr_page);
 11985  0055EE  C247  F005         	movff	_curr_page,LCDpage@page
 11986  0055F2  0E00               	movlw	0
 11987  0055F4  EC9A  F01C         	call	_LCDpage
 11988                           
 11989                           ;LCDgraphic.c: 1818: LCDchar(*buffer++,2);
 11990  0055F8  0E02               	movlw	2
 11991  0055FA  6E15               	movwf	LCDchar@position,c
 11992  0055FC  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 11993  005600  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 11994  005604  50DF               	movf	indf2,w,c
 11995  005606  EC36  F027         	call	_LCDchar
 11996  00560A  4A21               	infsnz	LCDstring@buffer,f,c
 11997  00560C  2A22               	incf	LCDstring@buffer+1,f,c
 11998                           
 11999                           ;LCDgraphic.c: 1821: LCDpage(1,curr_page);
 12000  00560E  C247  F005         	movff	_curr_page,LCDpage@page
 12001  005612  0E01               	movlw	1
 12002  005614  EC9A  F01C         	call	_LCDpage
 12003                           
 12004                           ;LCDgraphic.c: 1822: LCDy(1,3);
 12005  005618  0E03               	movlw	3
 12006  00561A  6E05               	movwf	LCDy@value,c
 12007  00561C  0E01               	movlw	1
 12008  00561E  ECEE  F01C         	call	_LCDy
 12009                           
 12010                           ;LCDgraphic.c: 1824: for(i=mem1+1;i<dim;i++)
 12011  005622  0E01               	movlw	1
 12012  005624  242F               	addwf	LCDstring@mem1,w,c
 12013  005626  6E2A               	movwf	LCDstring@i,c
 12014  005628  0E00               	movlw	0
 12015  00562A  2030               	addwfc	LCDstring@mem1+1,w,c
 12016  00562C  6E2B               	movwf	LCDstring@i+1,c
 12017  00562E  D00F               	goto	l4641
 12018  005630                     l4633:
 12019                           
 12020                           ;LCDgraphic.c: 1825: {
 12021                           ;LCDgraphic.c: 1827: LCDchar(*buffer++,0);
 12022  005630  0E00               	movlw	0
 12023  005632  6E15               	movwf	LCDchar@position,c
 12024  005634  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 12025  005638  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 12026  00563C  50DF               	movf	indf2,w,c
 12027  00563E  EC36  F027         	call	_LCDchar
 12028  005642  4A21               	infsnz	LCDstring@buffer,f,c
 12029  005644  2A22               	incf	LCDstring@buffer+1,f,c
 12030                           
 12031                           ;LCDgraphic.c: 1828: emptycolumn();
 12032  005646  ECC6  F01E         	call	_emptycolumn	;wreg free
 12033  00564A  4A2A               	infsnz	LCDstring@i,f,c
 12034  00564C  2A2B               	incf	LCDstring@i+1,f,c
 12035  00564E                     l4641:
 12036  00564E  5033               	movf	LCDstring@dim,w,c
 12037  005650  5C2A               	subwf	LCDstring@i,w,c
 12038  005652  502B               	movf	LCDstring@i+1,w,c
 12039  005654  0A80               	xorlw	128
 12040  005656  6E23               	movwf	??_LCDstring& (0+255),c
 12041  005658  5034               	movf	LCDstring@dim+1,w,c
 12042  00565A  0A80               	xorlw	128
 12043  00565C  5823               	subwfb	??_LCDstring& (0+255),w,c
 12044  00565E  A0D8               	btfss	status,0,c
 12045  005660  D7E7               	goto	l4633
 12046  005662                     l4643:
 12047                           
 12048                           ;LCDgraphic.c: 1829: }
 12049                           ;LCDgraphic.c: 1830: }
 12050                           ;LCDgraphic.c: 1831: }
 12051                           ;LCDgraphic.c: 1835: if(a==3)
 12052  005662  0E03               	movlw	3
 12053  005664  182C               	xorwf	LCDstring@a,w,c
 12054  005666  A4D8               	btfss	status,2,c
 12055  005668  D10A               	goto	l4735
 12056                           
 12057                           ;LCDgraphic.c: 1836: {
 12058                           ;LCDgraphic.c: 1838: if(dim<11)
 12059  00566A  BE34               	btfsc	LCDstring@dim+1,7,c
 12060  00566C  D006               	goto	l4647
 12061  00566E  5034               	movf	LCDstring@dim+1,w,c
 12062  005670  E141               	bnz	l4665
 12063  005672  0E0B               	movlw	11
 12064  005674  5C33               	subwf	LCDstring@dim,w,c
 12065  005676  B0D8               	btfsc	status,0,c
 12066  005678  D03D               	goto	l4665
 12067  00567A                     l4647:
 12068                           
 12069                           ;LCDgraphic.c: 1839: {
 12070                           ;LCDgraphic.c: 1840: n=63-(6*dim);
 12071  00567A  C033  F00F         	movff	LCDstring@dim,___wmul@multiplier
 12072  00567E  C034  F010         	movff	LCDstring@dim+1,___wmul@multiplier+1
 12073  005682  0E00               	movlw	0
 12074  005684  6E12               	movwf	___wmul@multiplicand+1,c
 12075  005686  0E06               	movlw	6
 12076  005688  6E11               	movwf	___wmul@multiplicand,c
 12077  00568A  ECBF  F01B         	call	___wmul	;wreg free
 12078  00568E  1E0F               	comf	?___wmul,f,c
 12079  005690  1E10               	comf	?___wmul+1,f,c
 12080  005692  4A0F               	infsnz	?___wmul,f,c
 12081  005694  2A10               	incf	?___wmul+1,f,c
 12082  005696  0E3F               	movlw	63
 12083  005698  240F               	addwf	?___wmul,w,c
 12084  00569A  6E2D               	movwf	LCDstring@n,c
 12085  00569C  0E00               	movlw	0
 12086  00569E  2010               	addwfc	?___wmul+1,w,c
 12087  0056A0  6E2E               	movwf	LCDstring@n+1,c
 12088                           
 12089                           ;LCDgraphic.c: 1842: LCDpage(1,curr_page);
 12090  0056A2  C247  F005         	movff	_curr_page,LCDpage@page
 12091  0056A6  0E01               	movlw	1
 12092  0056A8  EC9A  F01C         	call	_LCDpage
 12093                           
 12094                           ;LCDgraphic.c: 1843: LCDy(1,n);
 12095  0056AC  C02D  F005         	movff	LCDstring@n,LCDy@value
 12096  0056B0  0E01               	movlw	1
 12097  0056B2  ECEE  F01C         	call	_LCDy
 12098                           
 12099                           ;LCDgraphic.c: 1846: for(l=0;l<dim;l++)
 12100  0056B6  0E00               	movlw	0
 12101  0056B8  6E32               	movwf	LCDstring@l+1,c
 12102  0056BA  0E00               	movlw	0
 12103  0056BC  6E31               	movwf	LCDstring@l,c
 12104  0056BE  D00F               	goto	l4663
 12105  0056C0                     l4655:
 12106                           
 12107                           ;LCDgraphic.c: 1847: {
 12108                           ;LCDgraphic.c: 1848: LCDchar(*buffer,0);
 12109  0056C0  0E00               	movlw	0
 12110  0056C2  6E15               	movwf	LCDchar@position,c
 12111  0056C4  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 12112  0056C8  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 12113  0056CC  50DF               	movf	indf2,w,c
 12114  0056CE  EC36  F027         	call	_LCDchar
 12115                           
 12116                           ;LCDgraphic.c: 1849: emptycolumn();
 12117  0056D2  ECC6  F01E         	call	_emptycolumn	;wreg free
 12118                           
 12119                           ;LCDgraphic.c: 1851: buffer++;
 12120  0056D6  4A21               	infsnz	LCDstring@buffer,f,c
 12121  0056D8  2A22               	incf	LCDstring@buffer+1,f,c
 12122  0056DA  4A31               	infsnz	LCDstring@l,f,c
 12123  0056DC  2A32               	incf	LCDstring@l+1,f,c
 12124  0056DE                     l4663:
 12125  0056DE  5033               	movf	LCDstring@dim,w,c
 12126  0056E0  5C31               	subwf	LCDstring@l,w,c
 12127  0056E2  5032               	movf	LCDstring@l+1,w,c
 12128  0056E4  0A80               	xorlw	128
 12129  0056E6  6E23               	movwf	??_LCDstring& (0+255),c
 12130  0056E8  5034               	movf	LCDstring@dim+1,w,c
 12131  0056EA  0A80               	xorlw	128
 12132  0056EC  5823               	subwfb	??_LCDstring& (0+255),w,c
 12133  0056EE  B0D8               	btfsc	status,0,c
 12134  0056F0  D0C6               	goto	l4735
 12135  0056F2  D7E6               	goto	l4655
 12136  0056F4                     l4665:
 12137                           
 12138                           ;LCDgraphic.c: 1856: else
 12139                           ;LCDgraphic.c: 1857: {
 12140                           ;LCDgraphic.c: 1858: if(dim==11)
 12141  0056F4  0E0B               	movlw	11
 12142  0056F6  1833               	xorwf	LCDstring@dim,w,c
 12143  0056F8  1034               	iorwf	LCDstring@dim+1,w,c
 12144  0056FA  A4D8               	btfss	status,2,c
 12145  0056FC  D036               	goto	l4693
 12146                           
 12147                           ;LCDgraphic.c: 1859: {
 12148                           ;LCDgraphic.c: 1861: LCDpage(0,curr_page);
 12149  0056FE  C247  F005         	movff	_curr_page,LCDpage@page
 12150  005702  0E00               	movlw	0
 12151  005704  EC9A  F01C         	call	_LCDpage
 12152                           
 12153                           ;LCDgraphic.c: 1862: LCDchar(*buffer++,2);
 12154  005708  0E02               	movlw	2
 12155  00570A  6E15               	movwf	LCDchar@position,c
 12156  00570C  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 12157  005710  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 12158  005714  50DF               	movf	indf2,w,c
 12159  005716  EC36  F027         	call	_LCDchar
 12160  00571A  4A21               	infsnz	LCDstring@buffer,f,c
 12161  00571C  2A22               	incf	LCDstring@buffer+1,f,c
 12162                           
 12163                           ;LCDgraphic.c: 1863: LCDpage(1,curr_page);
 12164  00571E  C247  F005         	movff	_curr_page,LCDpage@page
 12165  005722  0E01               	movlw	1
 12166  005724  EC9A  F01C         	call	_LCDpage
 12167                           
 12168                           ;LCDgraphic.c: 1864: LCDy(1,3);
 12169  005728  0E03               	movlw	3
 12170  00572A  6E05               	movwf	LCDy@value,c
 12171  00572C  0E01               	movlw	1
 12172  00572E  ECEE  F01C         	call	_LCDy
 12173                           
 12174                           ;LCDgraphic.c: 1866: for(l=0;l<10;l++)
 12175  005732  0E00               	movlw	0
 12176  005734  6E32               	movwf	LCDstring@l+1,c
 12177  005736  0E00               	movlw	0
 12178  005738  6E31               	movwf	LCDstring@l,c
 12179  00573A                     l4679:
 12180  00573A  BE32               	btfsc	LCDstring@l+1,7,c
 12181  00573C  D006               	goto	l4683
 12182  00573E  5032               	movf	LCDstring@l+1,w,c
 12183  005740  E114               	bnz	l4693
 12184  005742  0E0A               	movlw	10
 12185  005744  5C31               	subwf	LCDstring@l,w,c
 12186  005746  B0D8               	btfsc	status,0,c
 12187  005748  D010               	goto	l4693
 12188  00574A                     l4683:
 12189                           
 12190                           ;LCDgraphic.c: 1867: {
 12191                           ;LCDgraphic.c: 1868: LCDchar(*buffer++,0);
 12192  00574A  0E00               	movlw	0
 12193  00574C  6E15               	movwf	LCDchar@position,c
 12194  00574E  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 12195  005752  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 12196  005756  50DF               	movf	indf2,w,c
 12197  005758  EC36  F027         	call	_LCDchar
 12198  00575C  4A21               	infsnz	LCDstring@buffer,f,c
 12199  00575E  2A22               	incf	LCDstring@buffer+1,f,c
 12200                           
 12201                           ;LCDgraphic.c: 1869: emptycolumn();
 12202  005760  ECC6  F01E         	call	_emptycolumn	;wreg free
 12203  005764  4A31               	infsnz	LCDstring@l,f,c
 12204  005766  2A32               	incf	LCDstring@l+1,f,c
 12205  005768  D7E8               	goto	l4679
 12206  00576A                     l4693:
 12207                           
 12208                           ;LCDgraphic.c: 1870: }
 12209                           ;LCDgraphic.c: 1872: }
 12210                           ;LCDgraphic.c: 1874: if(dim>11)
 12211  00576A  BE34               	btfsc	LCDstring@dim+1,7,c
 12212  00576C  D088               	goto	l4735
 12213  00576E  5034               	movf	LCDstring@dim+1,w,c
 12214  005770  E104               	bnz	u5170
 12215  005772  0E0C               	movlw	12
 12216  005774  5C33               	subwf	LCDstring@dim,w,c
 12217  005776  A0D8               	btfss	status,0,c
 12218  005778  D082               	goto	l4735
 12219  00577A                     u5170:
 12220                           
 12221                           ;LCDgraphic.c: 1875: {
 12222                           ;LCDgraphic.c: 1876: n=126-(6*dim);
 12223  00577A  C033  F00F         	movff	LCDstring@dim,___wmul@multiplier
 12224  00577E  C034  F010         	movff	LCDstring@dim+1,___wmul@multiplier+1
 12225  005782  0E00               	movlw	0
 12226  005784  6E12               	movwf	___wmul@multiplicand+1,c
 12227  005786  0E06               	movlw	6
 12228  005788  6E11               	movwf	___wmul@multiplicand,c
 12229  00578A  ECBF  F01B         	call	___wmul	;wreg free
 12230  00578E  1E0F               	comf	?___wmul,f,c
 12231  005790  1E10               	comf	?___wmul+1,f,c
 12232  005792  4A0F               	infsnz	?___wmul,f,c
 12233  005794  2A10               	incf	?___wmul+1,f,c
 12234  005796  0E7E               	movlw	126
 12235  005798  240F               	addwf	?___wmul,w,c
 12236  00579A  6E2D               	movwf	LCDstring@n,c
 12237  00579C  0E00               	movlw	0
 12238  00579E  2010               	addwfc	?___wmul+1,w,c
 12239  0057A0  6E2E               	movwf	LCDstring@n+1,c
 12240                           
 12241                           ;LCDgraphic.c: 1878: LCDpage(0,curr_page);
 12242  0057A2  C247  F005         	movff	_curr_page,LCDpage@page
 12243  0057A6  0E00               	movlw	0
 12244  0057A8  EC9A  F01C         	call	_LCDpage
 12245                           
 12246                           ;LCDgraphic.c: 1879: LCDy(0,n);
 12247  0057AC  C02D  F005         	movff	LCDstring@n,LCDy@value
 12248  0057B0  0E00               	movlw	0
 12249  0057B2  ECEE  F01C         	call	_LCDy
 12250                           
 12251                           ;LCDgraphic.c: 1881: for(l=0;l<dim-11;l++)
 12252  0057B6  0E00               	movlw	0
 12253  0057B8  6E32               	movwf	LCDstring@l+1,c
 12254  0057BA  0E00               	movlw	0
 12255  0057BC  6E31               	movwf	LCDstring@l,c
 12256  0057BE  D00F               	goto	l4711
 12257  0057C0                     l4703:
 12258                           
 12259                           ;LCDgraphic.c: 1882: {
 12260                           ;LCDgraphic.c: 1883: LCDchar(*buffer++,0);
 12261  0057C0  0E00               	movlw	0
 12262  0057C2  6E15               	movwf	LCDchar@position,c
 12263  0057C4  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 12264  0057C8  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 12265  0057CC  50DF               	movf	indf2,w,c
 12266  0057CE  EC36  F027         	call	_LCDchar
 12267  0057D2  4A21               	infsnz	LCDstring@buffer,f,c
 12268  0057D4  2A22               	incf	LCDstring@buffer+1,f,c
 12269                           
 12270                           ;LCDgraphic.c: 1884: emptycolumn();
 12271  0057D6  ECC6  F01E         	call	_emptycolumn	;wreg free
 12272  0057DA  4A31               	infsnz	LCDstring@l,f,c
 12273  0057DC  2A32               	incf	LCDstring@l+1,f,c
 12274  0057DE                     l4711:
 12275  0057DE  0EF5               	movlw	245
 12276  0057E0  6E23               	movwf	??_LCDstring& (0+255),c
 12277  0057E2  0EFF               	movlw	255
 12278  0057E4  6E24               	movwf	(??_LCDstring+1)& (0+255),c
 12279  0057E6  C033  F025         	movff	LCDstring@dim,??_LCDstring+2
 12280  0057EA  C034  F026         	movff	LCDstring@dim+1,??_LCDstring+3
 12281  0057EE  5023               	movf	??_LCDstring,w,c
 12282  0057F0  2625               	addwf	??_LCDstring+2,f,c
 12283  0057F2  5024               	movf	??_LCDstring+1,w,c
 12284  0057F4  2226               	addwfc	??_LCDstring+3,f,c
 12285  0057F6  5025               	movf	??_LCDstring+2,w,c
 12286  0057F8  5C31               	subwf	LCDstring@l,w,c
 12287  0057FA  5032               	movf	LCDstring@l+1,w,c
 12288  0057FC  0A80               	xorlw	128
 12289  0057FE  6E27               	movwf	(??_LCDstring+4)& (0+255),c
 12290  005800  5026               	movf	??_LCDstring+3,w,c
 12291  005802  0A80               	xorlw	128
 12292  005804  5827               	subwfb	(??_LCDstring+4)& (0+255),w,c
 12293  005806  A0D8               	btfss	status,0,c
 12294  005808  D7DB               	goto	l4703
 12295                           
 12296                           ;LCDgraphic.c: 1885: }
 12297                           ;LCDgraphic.c: 1887: LCDpage(0,curr_page);
 12298  00580A  C247  F005         	movff	_curr_page,LCDpage@page
 12299  00580E  0E00               	movlw	0
 12300  005810  EC9A  F01C         	call	_LCDpage
 12301                           
 12302                           ;LCDgraphic.c: 1888: LCDchar(*buffer++,2);
 12303  005814  0E02               	movlw	2
 12304  005816  6E15               	movwf	LCDchar@position,c
 12305  005818  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 12306  00581C  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 12307  005820  50DF               	movf	indf2,w,c
 12308  005822  EC36  F027         	call	_LCDchar
 12309  005826  4A21               	infsnz	LCDstring@buffer,f,c
 12310  005828  2A22               	incf	LCDstring@buffer+1,f,c
 12311                           
 12312                           ;LCDgraphic.c: 1889: LCDpage(1,curr_page);
 12313  00582A  C247  F005         	movff	_curr_page,LCDpage@page
 12314  00582E  0E01               	movlw	1
 12315  005830  EC9A  F01C         	call	_LCDpage
 12316                           
 12317                           ;LCDgraphic.c: 1890: LCDy(1,3);
 12318  005834  0E03               	movlw	3
 12319  005836  6E05               	movwf	LCDy@value,c
 12320  005838  0E01               	movlw	1
 12321  00583A  ECEE  F01C         	call	_LCDy
 12322                           
 12323                           ;LCDgraphic.c: 1892: for(l=dim-10;l<dim;l++)
 12324  00583E  0EF6               	movlw	246
 12325  005840  2433               	addwf	LCDstring@dim,w,c
 12326  005842  6E31               	movwf	LCDstring@l,c
 12327  005844  0EFF               	movlw	255
 12328  005846  2034               	addwfc	LCDstring@dim+1,w,c
 12329  005848  6E32               	movwf	LCDstring@l+1,c
 12330  00584A  D00F               	goto	l4733
 12331  00584C                     l4725:
 12332                           
 12333                           ;LCDgraphic.c: 1893: {
 12334                           ;LCDgraphic.c: 1894: LCDchar(*buffer++,0);
 12335  00584C  0E00               	movlw	0
 12336  00584E  6E15               	movwf	LCDchar@position,c
 12337  005850  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 12338  005854  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 12339  005858  50DF               	movf	indf2,w,c
 12340  00585A  EC36  F027         	call	_LCDchar
 12341  00585E  4A21               	infsnz	LCDstring@buffer,f,c
 12342  005860  2A22               	incf	LCDstring@buffer+1,f,c
 12343                           
 12344                           ;LCDgraphic.c: 1895: emptycolumn();
 12345  005862  ECC6  F01E         	call	_emptycolumn	;wreg free
 12346  005866  4A31               	infsnz	LCDstring@l,f,c
 12347  005868  2A32               	incf	LCDstring@l+1,f,c
 12348  00586A                     l4733:
 12349  00586A  5033               	movf	LCDstring@dim,w,c
 12350  00586C  5C31               	subwf	LCDstring@l,w,c
 12351  00586E  5032               	movf	LCDstring@l+1,w,c
 12352  005870  0A80               	xorlw	128
 12353  005872  6E23               	movwf	??_LCDstring& (0+255),c
 12354  005874  5034               	movf	LCDstring@dim+1,w,c
 12355  005876  0A80               	xorlw	128
 12356  005878  5823               	subwfb	??_LCDstring& (0+255),w,c
 12357  00587A  A0D8               	btfss	status,0,c
 12358  00587C  D7E7               	goto	l4725
 12359  00587E                     l4735:
 12360                           
 12361                           ;LCDgraphic.c: 1896: }
 12362                           ;LCDgraphic.c: 1897: }
 12363                           ;LCDgraphic.c: 1898: }
 12364                           ;LCDgraphic.c: 1899: }
 12365                           ;LCDgraphic.c: 1901: if(a==0)
 12366  00587E  502C               	movf	LCDstring@a,w,c
 12367  005880  A4D8               	btfss	status,2,c
 12368  005882  0012               	return	
 12369  005884  D00D               	goto	l4745
 12370  005886                     l4739:
 12371                           
 12372                           ;LCDgraphic.c: 1905: {
 12373                           ;LCDgraphic.c: 1907: LCDchar(*buffer++,0);
 12374  005886  0E00               	movlw	0
 12375  005888  6E15               	movwf	LCDchar@position,c
 12376  00588A  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 12377  00588E  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 12378  005892  50DF               	movf	indf2,w,c
 12379  005894  EC36  F027         	call	_LCDchar
 12380  005898  4A21               	infsnz	LCDstring@buffer,f,c
 12381  00589A  2A22               	incf	LCDstring@buffer+1,f,c
 12382                           
 12383                           ;LCDgraphic.c: 1908: emptycolumn();
 12384  00589C  ECC6  F01E         	call	_emptycolumn	;wreg free
 12385  0058A0                     l4745:
 12386  0058A0  C021  FFD9         	movff	LCDstring@buffer,fsr2l
 12387  0058A4  C022  FFDA         	movff	LCDstring@buffer+1,fsr2h
 12388  0058A8  50DF               	movf	indf2,w,c
 12389  0058AA  B4D8               	btfsc	status,2,c
 12390  0058AC  0012               	return	
 12391  0058AE  D7EB               	goto	l4739
 12392  0058B0                     __end_of_LCDstring:
 12393                           	opt stack 0
 12394                           tblptru	equ	0xFF8
 12395                           tblptrh	equ	0xFF7
 12396                           tblptrl	equ	0xFF6
 12397                           tablat	equ	0xFF5
 12398                           prodh	equ	0xFF4
 12399                           prodl	equ	0xFF3
 12400                           postinc0	equ	0xFEE
 12401                           wreg	equ	0xFE8
 12402                           indf1	equ	0xFE7
 12403                           postdec1	equ	0xFE5
 12404                           fsr1h	equ	0xFE2
 12405                           fsr1l	equ	0xFE1
 12406                           indf2	equ	0xFDF
 12407                           postinc2	equ	0xFDE
 12408                           postdec2	equ	0xFDD
 12409                           fsr2h	equ	0xFDA
 12410                           fsr2l	equ	0xFD9
 12411                           status	equ	0xFD8
 12412                           
 12413 ;; *************** function _strlen *****************
 12414 ;; Defined at:
 12415 ;;		line 4 in file "/opt/microchip/xc8/v1.37/sources/common/strlen.c"
 12416 ;; Parameters:    Size  Location     Type
 12417 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12418 ;;		 -> main@buf2(17), main@buf_384(40), main@buf_371(10), main@buf(10), 
 12419 ;; Auto vars:     Size  Location     Type
 12420 ;;  cp              2    4[COMRAM] PTR const unsigned char 
 12421 ;;		 -> main@buf2(17), main@buf_384(40), main@buf_371(10), main@buf(10), 
 12422 ;; Return value:  Size  Location     Type
 12423 ;;                  2    0[COMRAM] unsigned int 
 12424 ;; Registers used:
 12425 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12426 ;; Tracked objects:
 12427 ;;		On entry : 0/0
 12428 ;;		On exit  : 0/0
 12429 ;;		Unchanged: 0/0
 12430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12431 ;;      Params:         2       0       0       0       0       0       0       0       0
 12432 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12433 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12434 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12435 ;;Total ram usage:        6 bytes
 12436 ;; Hardware stack levels used:    1
 12437 ;; This function calls:
 12438 ;;		Nothing
 12439 ;; This function is called by:
 12440 ;;		_LCDstring
 12441 ;; This function uses a non-reentrant model
 12442 ;;
 12443                           
 12444                           	psect	text26
 12445  00382E                     __ptext26:
 12446                           	opt stack 0
 12447  00382E                     _strlen:
 12448                           	opt stack 29
 12449                           
 12450                           ;incstack = 0
 12451  00382E  C001  F005         	movff	strlen@s,strlen@cp
 12452  003832  C002  F006         	movff	strlen@s+1,strlen@cp+1
 12453  003836  D002               	goto	l3847
 12454  003838                     l3845:
 12455  003838  4A05               	infsnz	strlen@cp,f,c
 12456  00383A  2A06               	incf	strlen@cp+1,f,c
 12457  00383C                     l3847:
 12458  00383C  C005  FFD9         	movff	strlen@cp,fsr2l
 12459  003840  C006  FFDA         	movff	strlen@cp+1,fsr2h
 12460  003844  50DF               	movf	indf2,w,c
 12461  003846  A4D8               	btfss	status,2,c
 12462  003848  D7F7               	goto	l3845
 12463  00384A  C001  F003         	movff	strlen@s,??_strlen
 12464  00384E  C002  F004         	movff	strlen@s+1,??_strlen+1
 12465  003852  1E03               	comf	??_strlen,f,c
 12466  003854  1E04               	comf	??_strlen+1,f,c
 12467  003856  4A03               	infsnz	??_strlen,f,c
 12468  003858  2A04               	incf	??_strlen+1,f,c
 12469  00385A  5005               	movf	strlen@cp,w,c
 12470  00385C  2403               	addwf	??_strlen,w,c
 12471  00385E  6E01               	movwf	?_strlen,c
 12472  003860  5006               	movf	strlen@cp+1,w,c
 12473  003862  2004               	addwfc	??_strlen+1,w,c
 12474  003864  6E02               	movwf	?_strlen+1,c
 12475  003866  0012               	return	
 12476  003868                     __end_of_strlen:
 12477                           	opt stack 0
 12478                           tblptru	equ	0xFF8
 12479                           tblptrh	equ	0xFF7
 12480                           tblptrl	equ	0xFF6
 12481                           tablat	equ	0xFF5
 12482                           prodh	equ	0xFF4
 12483                           prodl	equ	0xFF3
 12484                           postinc0	equ	0xFEE
 12485                           wreg	equ	0xFE8
 12486                           indf1	equ	0xFE7
 12487                           postdec1	equ	0xFE5
 12488                           fsr1h	equ	0xFE2
 12489                           fsr1l	equ	0xFE1
 12490                           indf2	equ	0xFDF
 12491                           postinc2	equ	0xFDE
 12492                           postdec2	equ	0xFDD
 12493                           fsr2h	equ	0xFDA
 12494                           fsr2l	equ	0xFD9
 12495                           status	equ	0xFD8
 12496                           
 12497 ;; *************** function _emptycolumn *****************
 12498 ;; Defined at:
 12499 ;;		line 1538 in file "LCDgraphic.c"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;		None
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;		None
 12504 ;; Return value:  Size  Location     Type
 12505 ;;                  1    wreg      void 
 12506 ;; Registers used:
 12507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12508 ;; Tracked objects:
 12509 ;;		On entry : 0/0
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12513 ;;      Params:         0       0       0       0       0       0       0       0       0
 12514 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12515 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12516 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12517 ;;Total ram usage:        2 bytes
 12518 ;; Hardware stack levels used:    1
 12519 ;; Hardware stack levels required when called:    2
 12520 ;; This function calls:
 12521 ;;		_LCDcmd
 12522 ;; This function is called by:
 12523 ;;		_LCDstring
 12524 ;; This function uses a non-reentrant model
 12525 ;;
 12526                           
 12527                           	psect	text27
 12528  003D8C                     __ptext27:
 12529                           	opt stack 0
 12530  003D8C                     _emptycolumn:
 12531                           	opt stack 27
 12532                           
 12533                           ;LCDgraphic.c: 1540: LATCbits.LATC2=1;
 12534                           
 12535                           ;incstack = 0
 12536  003D8C  848B               	bsf	3979,2,c	;volatile
 12537                           
 12538                           ;LCDgraphic.c: 1541: LATCbits.LATC1=0;
 12539  003D8E  928B               	bcf	3979,1,c	;volatile
 12540                           
 12541                           ;LCDgraphic.c: 1543: if(selected_side==0)
 12542  003D90  0102               	movlb	2	; () banked
 12543  003D92  5145               	movf	_selected_side& (0+255),w,b
 12544  003D94  0102               	movlb	2	; () banked
 12545  003D96  1146               	iorwf	(_selected_side+1)& (0+255),w,b
 12546  003D98  A4D8               	btfss	status,2,c
 12547  003D9A  D012               	goto	l3837
 12548                           
 12549                           ; BSR set to: 2
 12550                           ;LCDgraphic.c: 1544: {
 12551                           ;LCDgraphic.c: 1545: char_index = (128*curr_page) + curr_y_pos;
 12552  003D9C  C247  F002         	movff	_curr_page,??_emptycolumn
 12553  003DA0  C248  F003         	movff	_curr_page+1,??_emptycolumn+1
 12554  003DA4  0E07               	movlw	7
 12555  003DA6                     u3945:
 12556  003DA6  90D8               	bcf	status,0,c
 12557  003DA8  3602               	rlcf	??_emptycolumn,f,c
 12558  003DAA  3603               	rlcf	??_emptycolumn+1,f,c
 12559  003DAC  2EE8               	decfsz	wreg,f,c
 12560  003DAE  D7FB               	goto	u3945
 12561  003DB0  0102               	movlb	2	; () banked
 12562  003DB2  5143               	movf	_curr_y_pos& (0+255),w,b
 12563  003DB4  2402               	addwf	??_emptycolumn,w,c
 12564  003DB6  0102               	movlb	2	; () banked
 12565  003DB8  6F41               	movwf	_char_index& (0+255),b
 12566  003DBA  0102               	movlb	2	; () banked
 12567  003DBC  5144               	movf	(_curr_y_pos+1)& (0+255),w,b
 12568  003DBE  D015               	goto	L16
 12569  003DC0                     l3837:
 12570                           
 12571                           ; BSR set to: 2
 12572                           ;LCDgraphic.c: 1548: else
 12573                           ;LCDgraphic.c: 1549: {
 12574                           ;LCDgraphic.c: 1550: char_index = (128*curr_page) + curr_y_pos+64;
 12575  003DC0  C247  F002         	movff	_curr_page,??_emptycolumn
 12576  003DC4  C248  F003         	movff	_curr_page+1,??_emptycolumn+1
 12577  003DC8  0E07               	movlw	7
 12578  003DCA                     u3955:
 12579  003DCA  90D8               	bcf	status,0,c
 12580  003DCC  3602               	rlcf	??_emptycolumn,f,c
 12581  003DCE  3603               	rlcf	??_emptycolumn+1,f,c
 12582  003DD0  2EE8               	decfsz	wreg,f,c
 12583  003DD2  D7FB               	goto	u3955
 12584  003DD4  0102               	movlb	2	; () banked
 12585  003DD6  5143               	movf	_curr_y_pos& (0+255),w,b
 12586  003DD8  2602               	addwf	??_emptycolumn,f,c
 12587  003DDA  0102               	movlb	2	; () banked
 12588  003DDC  5144               	movf	(_curr_y_pos+1)& (0+255),w,b
 12589  003DDE  2203               	addwfc	??_emptycolumn+1,f,c
 12590  003DE0  0E40               	movlw	64
 12591  003DE2  2402               	addwf	??_emptycolumn,w,c
 12592  003DE4  0102               	movlb	2	; () banked
 12593  003DE6  6F41               	movwf	_char_index& (0+255),b
 12594  003DE8  0E00               	movlw	0
 12595  003DEA                     L16:
 12596  003DEA  2003               	addwfc	??_emptycolumn+1,w,c
 12597  003DEC  0102               	movlb	2	; () banked
 12598  003DEE  6F42               	movwf	(_char_index+1)& (0+255),b
 12599                           
 12600                           ; BSR set to: 2
 12601                           ;LCDgraphic.c: 1551: }
 12602                           ;LCDgraphic.c: 1554: LCDcmd (0x00 | pixels[char_index+5]);
 12603                           
 12604                           ; BSR set to: 2
 12605  003DF0  0E05               	movlw	5
 12606  003DF2  0102               	movlb	2	; () banked
 12607  003DF4  2541               	addwf	_char_index& (0+255),w,b
 12608  003DF6  6E02               	movwf	??_emptycolumn& (0+255),c
 12609  003DF8  0E00               	movlw	0
 12610  003DFA  0102               	movlb	2	; () banked
 12611  003DFC  2142               	addwfc	(_char_index+1)& (0+255),w,b
 12612  003DFE  6E03               	movwf	(??_emptycolumn+1)& (0+255),c
 12613  003E00  0EFF               	movlw	low _pixels
 12614  003E02  2402               	addwf	??_emptycolumn,w,c
 12615  003E04  6ED9               	movwf	fsr2l,c
 12616  003E06  0E03               	movlw	high _pixels
 12617  003E08  2003               	addwfc	??_emptycolumn+1,w,c
 12618  003E0A  6EDA               	movwf	fsr2h,c
 12619  003E0C  50DF               	movf	indf2,w,c
 12620  003E0E  EC55  F01B         	call	_LCDcmd
 12621                           
 12622                           ;LCDgraphic.c: 1556: curr_y_pos = curr_y_pos+6;
 12623  003E12  0E06               	movlw	6
 12624  003E14  0102               	movlb	2	; () banked
 12625  003E16  2543               	addwf	_curr_y_pos& (0+255),w,b
 12626  003E18  0102               	movlb	2	; () banked
 12627  003E1A  6F43               	movwf	_curr_y_pos& (0+255),b
 12628  003E1C  0E00               	movlw	0
 12629  003E1E  0102               	movlb	2	; () banked
 12630  003E20  2144               	addwfc	(_curr_y_pos+1)& (0+255),w,b
 12631  003E22  0102               	movlb	2	; () banked
 12632  003E24  6F44               	movwf	(_curr_y_pos+1)& (0+255),b
 12633                           
 12634                           ; BSR set to: 2
 12635  003E26  0012               	return		;funcret
 12636  003E28                     __end_of_emptycolumn:
 12637                           	opt stack 0
 12638                           tblptru	equ	0xFF8
 12639                           tblptrh	equ	0xFF7
 12640                           tblptrl	equ	0xFF6
 12641                           tablat	equ	0xFF5
 12642                           prodh	equ	0xFF4
 12643                           prodl	equ	0xFF3
 12644                           postinc0	equ	0xFEE
 12645                           wreg	equ	0xFE8
 12646                           indf1	equ	0xFE7
 12647                           postdec1	equ	0xFE5
 12648                           fsr1h	equ	0xFE2
 12649                           fsr1l	equ	0xFE1
 12650                           indf2	equ	0xFDF
 12651                           postinc2	equ	0xFDE
 12652                           postdec2	equ	0xFDD
 12653                           fsr2h	equ	0xFDA
 12654                           fsr2l	equ	0xFD9
 12655                           status	equ	0xFD8
 12656                           
 12657 ;; *************** function ___awdiv *****************
 12658 ;; Defined at:
 12659 ;;		line 8 in file "/opt/microchip/xc8/v1.37/sources/common/awdiv.c"
 12660 ;; Parameters:    Size  Location     Type
 12661 ;;  dividend        2    6[COMRAM] int 
 12662 ;;  divisor         2    8[COMRAM] int 
 12663 ;; Auto vars:     Size  Location     Type
 12664 ;;  quotient        2   12[COMRAM] int 
 12665 ;;  sign            1   11[COMRAM] unsigned char 
 12666 ;;  counter         1   10[COMRAM] unsigned char 
 12667 ;; Return value:  Size  Location     Type
 12668 ;;                  2    6[COMRAM] int 
 12669 ;; Registers used:
 12670 ;;		wreg, status,2, status,0
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12676 ;;      Params:         4       0       0       0       0       0       0       0       0
 12677 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12678 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12679 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12680 ;;Total ram usage:        8 bytes
 12681 ;; Hardware stack levels used:    1
 12682 ;; This function calls:
 12683 ;;		Nothing
 12684 ;; This function is called by:
 12685 ;;		_main
 12686 ;;		_LCDstring
 12687 ;;		_lcdplotpixel2
 12688 ;;		_fround
 12689 ;;		_scale
 12690 ;;		_sprintf
 12691 ;; This function uses a non-reentrant model
 12692 ;;
 12693                           
 12694                           	psect	text28
 12695  003BE8                     __ptext28:
 12696                           	opt stack 0
 12697  003BE8                     ___awdiv:
 12698                           	opt stack 28
 12699                           
 12700                           ; BSR set to: 2
 12701                           ;incstack = 0
 12702  003BE8  0E00               	movlw	0
 12703  003BEA  6E0C               	movwf	___awdiv@sign,c
 12704  003BEC  AE0A               	btfss	___awdiv@divisor+1,7,c
 12705  003BEE  D006               	goto	l3651
 12706  003BF0  6C09               	negf	___awdiv@divisor,c
 12707  003BF2  1E0A               	comf	___awdiv@divisor+1,f,c
 12708  003BF4  B0D8               	btfsc	status,0,c
 12709  003BF6  2A0A               	incf	___awdiv@divisor+1,f,c
 12710  003BF8  0E01               	movlw	1
 12711  003BFA  6E0C               	movwf	___awdiv@sign,c
 12712  003BFC                     l3651:
 12713  003BFC  AE08               	btfss	___awdiv@dividend+1,7,c
 12714  003BFE  D006               	goto	l3657
 12715  003C00  6C07               	negf	___awdiv@dividend,c
 12716  003C02  1E08               	comf	___awdiv@dividend+1,f,c
 12717  003C04  B0D8               	btfsc	status,0,c
 12718  003C06  2A08               	incf	___awdiv@dividend+1,f,c
 12719  003C08  0E01               	movlw	1
 12720  003C0A  1A0C               	xorwf	___awdiv@sign,f,c
 12721  003C0C                     l3657:
 12722  003C0C  0E00               	movlw	0
 12723  003C0E  6E0E               	movwf	___awdiv@quotient+1,c
 12724  003C10  0E00               	movlw	0
 12725  003C12  6E0D               	movwf	___awdiv@quotient,c
 12726  003C14  5009               	movf	___awdiv@divisor,w,c
 12727  003C16  100A               	iorwf	___awdiv@divisor+1,w,c
 12728  003C18  B4D8               	btfsc	status,2,c
 12729  003C1A  D01C               	goto	l3679
 12730  003C1C  0E01               	movlw	1
 12731  003C1E  6E0B               	movwf	___awdiv@counter,c
 12732  003C20  D004               	goto	l3665
 12733  003C22                     l3663:
 12734  003C22  90D8               	bcf	status,0,c
 12735  003C24  3609               	rlcf	___awdiv@divisor,f,c
 12736  003C26  360A               	rlcf	___awdiv@divisor+1,f,c
 12737  003C28  2A0B               	incf	___awdiv@counter,f,c
 12738  003C2A                     l3665:
 12739  003C2A  AE0A               	btfss	___awdiv@divisor+1,7,c
 12740  003C2C  D7FA               	goto	l3663
 12741  003C2E                     l3667:
 12742  003C2E  90D8               	bcf	status,0,c
 12743  003C30  360D               	rlcf	___awdiv@quotient,f,c
 12744  003C32  360E               	rlcf	___awdiv@quotient+1,f,c
 12745  003C34  5009               	movf	___awdiv@divisor,w,c
 12746  003C36  5C07               	subwf	___awdiv@dividend,w,c
 12747  003C38  500A               	movf	___awdiv@divisor+1,w,c
 12748  003C3A  5808               	subwfb	___awdiv@dividend+1,w,c
 12749  003C3C  A0D8               	btfss	status,0,c
 12750  003C3E  D005               	goto	l3675
 12751  003C40  5009               	movf	___awdiv@divisor,w,c
 12752  003C42  5E07               	subwf	___awdiv@dividend,f,c
 12753  003C44  500A               	movf	___awdiv@divisor+1,w,c
 12754  003C46  5A08               	subwfb	___awdiv@dividend+1,f,c
 12755  003C48  800D               	bsf	___awdiv@quotient,0,c
 12756  003C4A                     l3675:
 12757  003C4A  90D8               	bcf	status,0,c
 12758  003C4C  320A               	rrcf	___awdiv@divisor+1,f,c
 12759  003C4E  3209               	rrcf	___awdiv@divisor,f,c
 12760  003C50  2E0B               	decfsz	___awdiv@counter,f,c
 12761  003C52  D7ED               	goto	l3667
 12762  003C54                     l3679:
 12763  003C54  500C               	movf	___awdiv@sign,w,c
 12764  003C56  B4D8               	btfsc	status,2,c
 12765  003C58  D004               	goto	l3683
 12766  003C5A  6C0D               	negf	___awdiv@quotient,c
 12767  003C5C  1E0E               	comf	___awdiv@quotient+1,f,c
 12768  003C5E  B0D8               	btfsc	status,0,c
 12769  003C60  2A0E               	incf	___awdiv@quotient+1,f,c
 12770  003C62                     l3683:
 12771  003C62  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 12772  003C66  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 12773  003C6A  0012               	return	
 12774  003C6C                     __end_of___awdiv:
 12775                           	opt stack 0
 12776                           tblptru	equ	0xFF8
 12777                           tblptrh	equ	0xFF7
 12778                           tblptrl	equ	0xFF6
 12779                           tablat	equ	0xFF5
 12780                           prodh	equ	0xFF4
 12781                           prodl	equ	0xFF3
 12782                           postinc0	equ	0xFEE
 12783                           wreg	equ	0xFE8
 12784                           indf1	equ	0xFE7
 12785                           postdec1	equ	0xFE5
 12786                           fsr1h	equ	0xFE2
 12787                           fsr1l	equ	0xFE1
 12788                           indf2	equ	0xFDF
 12789                           postinc2	equ	0xFDE
 12790                           postdec2	equ	0xFDD
 12791                           fsr2h	equ	0xFDA
 12792                           fsr2l	equ	0xFD9
 12793                           status	equ	0xFD8
 12794                           
 12795 ;; *************** function _LCDinit *****************
 12796 ;; Defined at:
 12797 ;;		line 1214 in file "LCDgraphic.c"
 12798 ;; Parameters:    Size  Location     Type
 12799 ;;		None
 12800 ;; Auto vars:     Size  Location     Type
 12801 ;;  i               2   39[COMRAM] int 
 12802 ;; Return value:  Size  Location     Type
 12803 ;;                  1    wreg      void 
 12804 ;; Registers used:
 12805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12806 ;; Tracked objects:
 12807 ;;		On entry : 0/0
 12808 ;;		On exit  : 0/0
 12809 ;;		Unchanged: 0/0
 12810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12811 ;;      Params:         0       0       0       0       0       0       0       0       0
 12812 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12813 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12814 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12815 ;;Total ram usage:        3 bytes
 12816 ;; Hardware stack levels used:    1
 12817 ;; Hardware stack levels required when called:    6
 12818 ;; This function calls:
 12819 ;;		_LCDclear
 12820 ;;		_LCDon
 12821 ;;		_LCDreset
 12822 ;;		__lcd_status
 12823 ;; This function is called by:
 12824 ;;		_main
 12825 ;; This function uses a non-reentrant model
 12826 ;;
 12827                           
 12828                           	psect	text29
 12829  0038EA                     __ptext29:
 12830                           	opt stack 0
 12831  0038EA                     _LCDinit:
 12832                           	opt stack 24
 12833                           
 12834                           ;LCDgraphic.c: 1217: for (int i = 0; i < 15; i++)
 12835                           
 12836                           ;incstack = 0
 12837  0038EA  0E00               	movlw	0
 12838  0038EC  6E29               	movwf	LCDinit@i+1,c
 12839  0038EE  0E00               	movlw	0
 12840  0038F0  6E28               	movwf	LCDinit@i,c
 12841  0038F2                     l4171:
 12842  0038F2  BE29               	btfsc	LCDinit@i+1,7,c
 12843  0038F4  D006               	goto	l4175
 12844  0038F6  5029               	movf	LCDinit@i+1,w,c
 12845  0038F8  E10E               	bnz	l4179
 12846  0038FA  0E0F               	movlw	15
 12847  0038FC  5C28               	subwf	LCDinit@i,w,c
 12848  0038FE  B0D8               	btfsc	status,0,c
 12849  003900  D00A               	goto	l4179
 12850  003902                     l4175:
 12851                           
 12852                           ;LCDgraphic.c: 1218: {
 12853                           ;LCDgraphic.c: 1219: _delay((unsigned long)((10)*(40000000/4000.0)));
 12854  003902  0E82               	movlw	130
 12855  003904  6E27               	movwf	??_LCDinit& (0+255),c
 12856  003906  0EDE               	movlw	222
 12857  003908                     u6207:
 12858  003908  2EE8               	decfsz	wreg,f,c
 12859  00390A  D7FE               	goto	u6207
 12860  00390C  2E27               	decfsz	??_LCDinit& (0+255),f,c
 12861  00390E  D7FC               	goto	u6207
 12862  003910  4A28               	infsnz	LCDinit@i,f,c
 12863  003912  2A29               	incf	LCDinit@i+1,f,c
 12864  003914  D7EE               	goto	l4171
 12865  003916                     l4179:
 12866  003916  ECC2  F01C         	call	__lcd_status	;wreg free
 12867  00391A  6E27               	movwf	??_LCDinit& (0+255),c
 12868  00391C  0E90               	movlw	144
 12869  00391E  1627               	andwf	??_LCDinit,f,c
 12870  003920  A4D8               	btfss	status,2,c
 12871  003922  D7F9               	goto	l4179
 12872                           
 12873                           ;LCDgraphic.c: 1226: LCDreset();
 12874  003924  EC79  F01B         	call	_LCDreset	;wreg free
 12875                           
 12876                           ;LCDgraphic.c: 1228: LCDon(1);
 12877  003928  0E01               	movlw	1
 12878  00392A  EC89  F01B         	call	_LCDon
 12879                           
 12880                           ;LCDgraphic.c: 1230: LCDclear();
 12881  00392E  EC36  F01E         	call	_LCDclear	;wreg free
 12882  003932  0012               	return		;funcret
 12883  003934                     __end_of_LCDinit:
 12884                           	opt stack 0
 12885                           tblptru	equ	0xFF8
 12886                           tblptrh	equ	0xFF7
 12887                           tblptrl	equ	0xFF6
 12888                           tablat	equ	0xFF5
 12889                           prodh	equ	0xFF4
 12890                           prodl	equ	0xFF3
 12891                           postinc0	equ	0xFEE
 12892                           wreg	equ	0xFE8
 12893                           indf1	equ	0xFE7
 12894                           postdec1	equ	0xFE5
 12895                           fsr1h	equ	0xFE2
 12896                           fsr1l	equ	0xFE1
 12897                           indf2	equ	0xFDF
 12898                           postinc2	equ	0xFDE
 12899                           postdec2	equ	0xFDD
 12900                           fsr2h	equ	0xFDA
 12901                           fsr2l	equ	0xFD9
 12902                           status	equ	0xFD8
 12903                           
 12904 ;; *************** function _LCDreset *****************
 12905 ;; Defined at:
 12906 ;;		line 1361 in file "LCDgraphic.c"
 12907 ;; Parameters:    Size  Location     Type
 12908 ;;		None
 12909 ;; Auto vars:     Size  Location     Type
 12910 ;;		None
 12911 ;; Return value:  Size  Location     Type
 12912 ;;                  1    wreg      void 
 12913 ;; Registers used:
 12914 ;;		wreg, status,2, status,0, cstack
 12915 ;; Tracked objects:
 12916 ;;		On entry : 0/0
 12917 ;;		On exit  : 0/0
 12918 ;;		Unchanged: 0/0
 12919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12920 ;;      Params:         0       0       0       0       0       0       0       0       0
 12921 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12922 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12923 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12924 ;;Total ram usage:        1 bytes
 12925 ;; Hardware stack levels used:    1
 12926 ;; Hardware stack levels required when called:    2
 12927 ;; This function calls:
 12928 ;;		__lcd_status
 12929 ;; This function is called by:
 12930 ;;		_LCDinit
 12931 ;; This function uses a non-reentrant model
 12932 ;;
 12933                           
 12934                           	psect	text30
 12935  0036F2                     __ptext30:
 12936                           	opt stack 0
 12937  0036F2                     _LCDreset:
 12938                           	opt stack 27
 12939                           
 12940                           ;LCDgraphic.c: 1364: PORTD = 0x00;
 12941                           
 12942                           ;incstack = 0
 12943  0036F2  0E00               	movlw	0
 12944  0036F4  6E83               	movwf	3971,c	;volatile
 12945                           
 12946                           ;LCDgraphic.c: 1367: LATCbits.LATC6 = 0;
 12947  0036F6  9C8B               	bcf	3979,6,c	;volatile
 12948                           
 12949                           ;LCDgraphic.c: 1368: _delay((unsigned long)((20)*(40000000/4000000.0)));
 12950  0036F8  0E42               	movlw	66
 12951  0036FA                     u6217:
 12952  0036FA  2EE8               	decfsz	wreg,f,c
 12953  0036FC  D7FE               	goto	u6217
 12954  0036FE  D000               	nop2		;nop
 12955                           
 12956                           ;LCDgraphic.c: 1369: LATCbits.LATC6 = 1;
 12957  003700  8C8B               	bsf	3979,6,c	;volatile
 12958  003702                     l3813:
 12959  003702  ECC2  F01C         	call	__lcd_status	;wreg free
 12960  003706  6E04               	movwf	??_LCDreset& (0+255),c
 12961  003708  0E90               	movlw	144
 12962  00370A  1604               	andwf	??_LCDreset,f,c
 12963  00370C  B4D8               	btfsc	status,2,c
 12964  00370E  0012               	return	
 12965  003710  D7F8               	goto	l3813
 12966  003712                     __end_of_LCDreset:
 12967                           	opt stack 0
 12968                           tblptru	equ	0xFF8
 12969                           tblptrh	equ	0xFF7
 12970                           tblptrl	equ	0xFF6
 12971                           tablat	equ	0xFF5
 12972                           prodh	equ	0xFF4
 12973                           prodl	equ	0xFF3
 12974                           postinc0	equ	0xFEE
 12975                           wreg	equ	0xFE8
 12976                           indf1	equ	0xFE7
 12977                           postdec1	equ	0xFE5
 12978                           fsr1h	equ	0xFE2
 12979                           fsr1l	equ	0xFE1
 12980                           indf2	equ	0xFDF
 12981                           postinc2	equ	0xFDE
 12982                           postdec2	equ	0xFDD
 12983                           fsr2h	equ	0xFDA
 12984                           fsr2l	equ	0xFD9
 12985                           status	equ	0xFD8
 12986                           
 12987 ;; *************** function _LCDon *****************
 12988 ;; Defined at:
 12989 ;;		line 1458 in file "LCDgraphic.c"
 12990 ;; Parameters:    Size  Location     Type
 12991 ;;  on              1    wreg     unsigned char 
 12992 ;; Auto vars:     Size  Location     Type
 12993 ;;  on              1    4[COMRAM] unsigned char 
 12994 ;; Return value:  Size  Location     Type
 12995 ;;                  1    wreg      void 
 12996 ;; Registers used:
 12997 ;;		wreg, status,2, status,0, cstack
 12998 ;; Tracked objects:
 12999 ;;		On entry : 0/0
 13000 ;;		On exit  : 0/0
 13001 ;;		Unchanged: 0/0
 13002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13003 ;;      Params:         0       0       0       0       0       0       0       0       0
 13004 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13005 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13006 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13007 ;;Total ram usage:        1 bytes
 13008 ;; Hardware stack levels used:    1
 13009 ;; Hardware stack levels required when called:    3
 13010 ;; This function calls:
 13011 ;;		_LCDcmd
 13012 ;;		__lcd_waitbusy
 13013 ;; This function is called by:
 13014 ;;		_LCDinit
 13015 ;; This function uses a non-reentrant model
 13016 ;;
 13017                           
 13018                           	psect	text31
 13019  003712                     __ptext31:
 13020                           	opt stack 0
 13021  003712                     _LCDon:
 13022                           	opt stack 26
 13023                           
 13024                           ;incstack = 0
 13025                           ;LCDon@on stored from wreg
 13026  003712  6E05               	movwf	LCDon@on,c
 13027                           
 13028                           ;LCDgraphic.c: 1461: _lcd_waitbusy();
 13029  003714  EC62  F01B         	call	__lcd_waitbusy	;wreg free
 13030                           
 13031                           ;LCDgraphic.c: 1463: LATCbits.LATC2=0;
 13032  003718  948B               	bcf	3979,2,c	;volatile
 13033                           
 13034                           ;LCDgraphic.c: 1464: LATCbits.LATC1=0;
 13035  00371A  928B               	bcf	3979,1,c	;volatile
 13036                           
 13037                           ;LCDgraphic.c: 1465: LATEbits.LATE0=1;
 13038  00371C  808D               	bsf	3981,0,c	;volatile
 13039                           
 13040                           ;LCDgraphic.c: 1466: LATEbits.LATE1=1;
 13041  00371E  828D               	bsf	3981,1,c	;volatile
 13042                           
 13043                           ;LCDgraphic.c: 1467: if(on)
 13044  003720  5005               	movf	LCDon@on,w,c
 13045  003722  B4D8               	btfsc	status,2,c
 13046  003724  D004               	goto	l3829
 13047                           
 13048                           ;LCDgraphic.c: 1468: {
 13049                           ;LCDgraphic.c: 1469: LCDcmd(0b00111111);
 13050  003726  0E3F               	movlw	63
 13051  003728  EC55  F01B         	call	_LCDcmd
 13052                           
 13053                           ;LCDgraphic.c: 1470: }
 13054  00372C  0012               	return	
 13055  00372E                     l3829:
 13056                           
 13057                           ;LCDgraphic.c: 1471: else
 13058                           ;LCDgraphic.c: 1472: {
 13059                           ;LCDgraphic.c: 1473: LCDcmd(0b00111110);
 13060  00372E  0E3E               	movlw	62
 13061  003730  EC55  F01B         	call	_LCDcmd
 13062  003734  0012               	return	
 13063  003736                     __end_of_LCDon:
 13064                           	opt stack 0
 13065                           tblptru	equ	0xFF8
 13066                           tblptrh	equ	0xFF7
 13067                           tblptrl	equ	0xFF6
 13068                           tablat	equ	0xFF5
 13069                           prodh	equ	0xFF4
 13070                           prodl	equ	0xFF3
 13071                           postinc0	equ	0xFEE
 13072                           wreg	equ	0xFE8
 13073                           indf1	equ	0xFE7
 13074                           postdec1	equ	0xFE5
 13075                           fsr1h	equ	0xFE2
 13076                           fsr1l	equ	0xFE1
 13077                           indf2	equ	0xFDF
 13078                           postinc2	equ	0xFDE
 13079                           postdec2	equ	0xFDD
 13080                           fsr2h	equ	0xFDA
 13081                           fsr2l	equ	0xFD9
 13082                           status	equ	0xFD8
 13083                           
 13084 ;; *************** function _LCDclear *****************
 13085 ;; Defined at:
 13086 ;;		line 1683 in file "LCDgraphic.c"
 13087 ;; Parameters:    Size  Location     Type
 13088 ;;		None
 13089 ;; Auto vars:     Size  Location     Type
 13090 ;;  j               2   36[COMRAM] int 
 13091 ;;  i               2   34[COMRAM] int 
 13092 ;;  i               2   32[COMRAM] int 
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      void 
 13095 ;; Registers used:
 13096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13102 ;;      Params:         0       0       0       0       0       0       0       0       0
 13103 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13104 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13105 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13106 ;;Total ram usage:        6 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:    5
 13109 ;; This function calls:
 13110 ;;		_LCDchar
 13111 ;;		_LCDpage
 13112 ;;		_LCDy
 13113 ;;		__lcd_waitbusy
 13114 ;; This function is called by:
 13115 ;;		_main
 13116 ;;		_LCDinit
 13117 ;; This function uses a non-reentrant model
 13118 ;;
 13119                           
 13120                           	psect	text32
 13121  003C6C                     __ptext32:
 13122                           	opt stack 0
 13123  003C6C                     _LCDclear:
 13124                           	opt stack 24
 13125                           
 13126                           ;LCDgraphic.c: 1685: _lcd_waitbusy();
 13127                           
 13128                           ;incstack = 0
 13129  003C6C  EC62  F01B         	call	__lcd_waitbusy	;wreg free
 13130                           
 13131                           ;LCDgraphic.c: 1687: for(int i = 0; i < 1025; i++)
 13132  003C70  0E00               	movlw	0
 13133  003C72  6E22               	movwf	LCDclear@i+1,c
 13134  003C74  0E00               	movlw	0
 13135  003C76  6E21               	movwf	LCDclear@i,c
 13136  003C78                     l3769:
 13137  003C78  BE22               	btfsc	LCDclear@i+1,7,c
 13138  003C7A  D005               	goto	l3773
 13139  003C7C  0421               	decf	LCDclear@i,w,c
 13140  003C7E  0E04               	movlw	4
 13141  003C80  5822               	subwfb	LCDclear@i+1,w,c
 13142  003C82  B0D8               	btfsc	status,0,c
 13143  003C84  D00B               	goto	l3779
 13144  003C86                     l3773:
 13145                           
 13146                           ;LCDgraphic.c: 1688: {
 13147                           ;LCDgraphic.c: 1689: pixels[i] = 0x00;
 13148  003C86  0EFF               	movlw	low _pixels
 13149  003C88  2421               	addwf	LCDclear@i,w,c
 13150  003C8A  6ED9               	movwf	fsr2l,c
 13151  003C8C  0E03               	movlw	high _pixels
 13152  003C8E  2022               	addwfc	LCDclear@i+1,w,c
 13153  003C90  6EDA               	movwf	fsr2h,c
 13154  003C92  0E00               	movlw	0
 13155  003C94  6EDF               	movwf	indf2,c
 13156  003C96  4A21               	infsnz	LCDclear@i,f,c
 13157  003C98  2A22               	incf	LCDclear@i+1,f,c
 13158  003C9A  D7EE               	goto	l3769
 13159  003C9C                     l3779:
 13160                           
 13161                           ;LCDgraphic.c: 1690: }
 13162                           ;LCDgraphic.c: 1692: for(int i = 0; i < 8;i++)
 13163  003C9C  0E00               	movlw	0
 13164  003C9E  6E24               	movwf	LCDclear@i_556+1,c
 13165  003CA0  0E00               	movlw	0
 13166  003CA2  6E23               	movwf	LCDclear@i_556,c
 13167  003CA4                     l3781:
 13168  003CA4  BE24               	btfsc	LCDclear@i_556+1,7,c
 13169  003CA6  D006               	goto	l3785
 13170  003CA8  5024               	movf	LCDclear@i_556+1,w,c
 13171  003CAA  E127               	bnz	l289
 13172  003CAC  0E08               	movlw	8
 13173  003CAE  5C23               	subwf	LCDclear@i_556,w,c
 13174  003CB0  B0D8               	btfsc	status,0,c
 13175  003CB2  0012               	return	
 13176  003CB4                     l3785:
 13177                           
 13178                           ;LCDgraphic.c: 1693: {
 13179                           ;LCDgraphic.c: 1694: LCDpage(2,i);
 13180  003CB4  C023  F005         	movff	LCDclear@i_556,LCDpage@page
 13181  003CB8  0E02               	movlw	2
 13182  003CBA  EC9A  F01C         	call	_LCDpage
 13183                           
 13184                           ;LCDgraphic.c: 1695: for(int j = 0;j < 13; j++)
 13185  003CBE  0E00               	movlw	0
 13186  003CC0  6E26               	movwf	LCDclear@j+1,c
 13187  003CC2  0E00               	movlw	0
 13188  003CC4  6E25               	movwf	LCDclear@j,c
 13189  003CC6                     l3789:
 13190  003CC6  BE26               	btfsc	LCDclear@j+1,7,c
 13191  003CC8  D006               	goto	l3793
 13192  003CCA  5026               	movf	LCDclear@j+1,w,c
 13193  003CCC  E113               	bnz	l3801
 13194  003CCE  0E0D               	movlw	13
 13195  003CD0  5C25               	subwf	LCDclear@j,w,c
 13196  003CD2  B0D8               	btfsc	status,0,c
 13197  003CD4  D00F               	goto	l3801
 13198  003CD6                     l3793:
 13199                           
 13200                           ;LCDgraphic.c: 1696: {
 13201                           ;LCDgraphic.c: 1697: LCDy(2,j*5);
 13202  003CD6  5025               	movf	LCDclear@j,w,c
 13203  003CD8  0D05               	mullw	5
 13204  003CDA  CFF3 F005          	movff	prodl,LCDy@value
 13205  003CDE  0E02               	movlw	2
 13206  003CE0  ECEE  F01C         	call	_LCDy
 13207                           
 13208                           ;LCDgraphic.c: 1698: LCDchar(' ',0);
 13209  003CE4  0E00               	movlw	0
 13210  003CE6  6E15               	movwf	LCDchar@position,c
 13211  003CE8  0E20               	movlw	32
 13212  003CEA  EC36  F027         	call	_LCDchar
 13213  003CEE  4A25               	infsnz	LCDclear@j,f,c
 13214  003CF0  2A26               	incf	LCDclear@j+1,f,c
 13215  003CF2  D7E9               	goto	l3789
 13216  003CF4                     l3801:
 13217  003CF4  4A23               	infsnz	LCDclear@i_556,f,c
 13218  003CF6  2A24               	incf	LCDclear@i_556+1,f,c
 13219  003CF8  D7D5               	goto	l3781
 13220  003CFA                     l289:
 13221  003CFA  0012               	return		;funcret
 13222  003CFC                     __end_of_LCDclear:
 13223                           	opt stack 0
 13224                           tblptru	equ	0xFF8
 13225                           tblptrh	equ	0xFF7
 13226                           tblptrl	equ	0xFF6
 13227                           tablat	equ	0xFF5
 13228                           prodh	equ	0xFF4
 13229                           prodl	equ	0xFF3
 13230                           postinc0	equ	0xFEE
 13231                           wreg	equ	0xFE8
 13232                           indf1	equ	0xFE7
 13233                           postdec1	equ	0xFE5
 13234                           fsr1h	equ	0xFE2
 13235                           fsr1l	equ	0xFE1
 13236                           indf2	equ	0xFDF
 13237                           postinc2	equ	0xFDE
 13238                           postdec2	equ	0xFDD
 13239                           fsr2h	equ	0xFDA
 13240                           fsr2l	equ	0xFD9
 13241                           status	equ	0xFD8
 13242                           
 13243 ;; *************** function _LCDchar *****************
 13244 ;; Defined at:
 13245 ;;		line 1576 in file "LCDgraphic.c"
 13246 ;; Parameters:    Size  Location     Type
 13247 ;;  c               1    wreg     unsigned char 
 13248 ;;  position        1   20[COMRAM] unsigned char 
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;  c               1   26[COMRAM] unsigned char 
 13251 ;;  a               2   30[COMRAM] int 
 13252 ;;  k               2   27[COMRAM] int 
 13253 ;;  l               1   29[COMRAM] unsigned char 
 13254 ;; Return value:  Size  Location     Type
 13255 ;;                  1    wreg      unsigned char 
 13256 ;; Registers used:
 13257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13258 ;; Tracked objects:
 13259 ;;		On entry : 0/0
 13260 ;;		On exit  : 0/0
 13261 ;;		Unchanged: 0/0
 13262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13263 ;;      Params:         1       0       0       0       0       0       0       0       0
 13264 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13265 ;;      Temps:          5       0       0       0       0       0       0       0       0
 13266 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13267 ;;Total ram usage:       12 bytes
 13268 ;; Hardware stack levels used:    1
 13269 ;; Hardware stack levels required when called:    4
 13270 ;; This function calls:
 13271 ;;		_LCDcmd
 13272 ;;		_LCDpage
 13273 ;;		_LCDy
 13274 ;;		___wmul
 13275 ;;		__lcd_waitbusy
 13276 ;; This function is called by:
 13277 ;;		_LCDclear
 13278 ;;		_LCDstring
 13279 ;; This function uses a non-reentrant model
 13280 ;;
 13281                           
 13282                           	psect	text33
 13283  004E6C                     __ptext33:
 13284                           	opt stack 0
 13285  004E6C                     _LCDchar:
 13286                           	opt stack 25
 13287                           
 13288                           ;incstack = 0
 13289                           ;LCDchar@c stored from wreg
 13290  004E6C  6E1B               	movwf	LCDchar@c,c
 13291                           
 13292                           ;LCDgraphic.c: 1578: char l;
 13293                           ;LCDgraphic.c: 1579: int a,k;
 13294                           ;LCDgraphic.c: 1581: _lcd_waitbusy();
 13295  004E6E  EC62  F01B         	call	__lcd_waitbusy	;wreg free
 13296                           
 13297                           ;LCDgraphic.c: 1583: k=c-32;
 13298  004E72  0EE0               	movlw	224
 13299  004E74  241B               	addwf	LCDchar@c,w,c
 13300  004E76  6E1C               	movwf	LCDchar@k,c
 13301  004E78  6A1D               	clrf	LCDchar@k+1,c
 13302  004E7A  0EFF               	movlw	255
 13303  004E7C  221D               	addwfc	LCDchar@k+1,f,c
 13304                           
 13305                           ;LCDgraphic.c: 1585: switch (position)
 13306  004E7E  D247               	goto	l3523
 13307  004E80                     l3401:
 13308                           
 13309                           ;LCDgraphic.c: 1588: if(selected_side==0)
 13310  004E80  0102               	movlb	2	; () banked
 13311  004E82  5145               	movf	_selected_side& (0+255),w,b
 13312  004E84  0102               	movlb	2	; () banked
 13313  004E86  1146               	iorwf	(_selected_side+1)& (0+255),w,b
 13314  004E88  A4D8               	btfss	status,2,c
 13315  004E8A  D012               	goto	l3405
 13316                           
 13317                           ; BSR set to: 2
 13318                           ;LCDgraphic.c: 1589: {
 13319                           ;LCDgraphic.c: 1590: char_index=(128*curr_page)+curr_y_pos;
 13320  004E8C  C247  F016         	movff	_curr_page,??_LCDchar
 13321  004E90  C248  F017         	movff	_curr_page+1,??_LCDchar+1
 13322  004E94  0E07               	movlw	7
 13323  004E96                     u3265:
 13324  004E96  90D8               	bcf	status,0,c
 13325  004E98  3616               	rlcf	??_LCDchar,f,c
 13326  004E9A  3617               	rlcf	??_LCDchar+1,f,c
 13327  004E9C  2EE8               	decfsz	wreg,f,c
 13328  004E9E  D7FB               	goto	u3265
 13329  004EA0  0102               	movlb	2	; () banked
 13330  004EA2  5143               	movf	_curr_y_pos& (0+255),w,b
 13331  004EA4  2416               	addwf	??_LCDchar,w,c
 13332  004EA6  0102               	movlb	2	; () banked
 13333  004EA8  6F41               	movwf	_char_index& (0+255),b
 13334  004EAA  0102               	movlb	2	; () banked
 13335  004EAC  5144               	movf	(_curr_y_pos+1)& (0+255),w,b
 13336  004EAE  D015               	goto	L17
 13337  004EB0                     l3405:
 13338                           
 13339                           ; BSR set to: 2
 13340                           ;LCDgraphic.c: 1593: else
 13341                           ;LCDgraphic.c: 1594: {
 13342                           ;LCDgraphic.c: 1595: char_index=(128*curr_page)+64+curr_y_pos;
 13343  004EB0  C247  F016         	movff	_curr_page,??_LCDchar
 13344  004EB4  C248  F017         	movff	_curr_page+1,??_LCDchar+1
 13345  004EB8  0E07               	movlw	7
 13346  004EBA                     u3275:
 13347  004EBA  90D8               	bcf	status,0,c
 13348  004EBC  3616               	rlcf	??_LCDchar,f,c
 13349  004EBE  3617               	rlcf	??_LCDchar+1,f,c
 13350  004EC0  2EE8               	decfsz	wreg,f,c
 13351  004EC2  D7FB               	goto	u3275
 13352  004EC4  0102               	movlb	2	; () banked
 13353  004EC6  5143               	movf	_curr_y_pos& (0+255),w,b
 13354  004EC8  2616               	addwf	??_LCDchar,f,c
 13355  004ECA  0102               	movlb	2	; () banked
 13356  004ECC  5144               	movf	(_curr_y_pos+1)& (0+255),w,b
 13357  004ECE  2217               	addwfc	??_LCDchar+1,f,c
 13358  004ED0  0E40               	movlw	64
 13359  004ED2  2416               	addwf	??_LCDchar,w,c
 13360  004ED4  0102               	movlb	2	; () banked
 13361  004ED6  6F41               	movwf	_char_index& (0+255),b
 13362  004ED8  0E00               	movlw	0
 13363  004EDA                     L17:
 13364  004EDA  2017               	addwfc	??_LCDchar+1,w,c
 13365  004EDC  0102               	movlb	2	; () banked
 13366  004EDE  6F42               	movwf	(_char_index+1)& (0+255),b
 13367                           
 13368                           ; BSR set to: 2
 13369                           ;LCDgraphic.c: 1596: }
 13370                           ;LCDgraphic.c: 1598: LATCbits.LATC2=1;
 13371                           
 13372                           ; BSR set to: 2
 13373  004EE0  848B               	bsf	3979,2,c	;volatile
 13374                           
 13375                           ; BSR set to: 2
 13376                           ;LCDgraphic.c: 1599: LATCbits.LATC1=0;
 13377  004EE2  928B               	bcf	3979,1,c	;volatile
 13378                           
 13379                           ; BSR set to: 2
 13380                           ;LCDgraphic.c: 1600: for (a=0;a<5;a++)
 13381  004EE4  0E00               	movlw	0
 13382  004EE6  6E20               	movwf	LCDchar@a+1,c
 13383  004EE8  0E00               	movlw	0
 13384  004EEA  6E1F               	movwf	LCDchar@a,c
 13385                           
 13386                           ; BSR set to: 2
 13387  004EEC  BE20               	btfsc	LCDchar@a+1,7,c
 13388  004EEE  D008               	goto	l3417
 13389  004EF0  5020               	movf	LCDchar@a+1,w,c
 13390  004EF2  E105               	bnz	u3280
 13391  004EF4  0E05               	movlw	5
 13392  004EF6  5C1F               	subwf	LCDchar@a,w,c
 13393  004EF8  B0D8               	btfsc	status,0,c
 13394  004EFA  0012               	return	
 13395  004EFC  D001               	goto	l3417
 13396  004EFE                     u3280:
 13397                           
 13398                           ; BSR set to: 2
 13399  004EFE  0012               	return	
 13400  004F00                     l3417:
 13401                           
 13402                           ; BSR set to: 2
 13403                           ;LCDgraphic.c: 1601: {
 13404                           ;LCDgraphic.c: 1602: l = pixels[char_index+a] | pic[k][a];
 13405  004F00  C01C  F00F         	movff	LCDchar@k,___wmul@multiplier
 13406  004F04  C01D  F010         	movff	LCDchar@k+1,___wmul@multiplier+1
 13407  004F08  0E00               	movlw	0
 13408  004F0A  6E12               	movwf	___wmul@multiplicand+1,c
 13409  004F0C  0E05               	movlw	5
 13410  004F0E  6E11               	movwf	___wmul@multiplicand,c
 13411  004F10  ECBF  F01B         	call	___wmul	;wreg free
 13412  004F14  0E43               	movlw	low _pic
 13413  004F16  6E16               	movwf	??_LCDchar& (0+255),c
 13414  004F18  0E7D               	movlw	high _pic
 13415  004F1A  6E17               	movwf	(??_LCDchar+1)& (0+255),c
 13416  004F1C  500F               	movf	?___wmul,w,c
 13417  004F1E  2616               	addwf	??_LCDchar,f,c
 13418  004F20  5010               	movf	?___wmul+1,w,c
 13419  004F22  2217               	addwfc	??_LCDchar+1,f,c
 13420  004F24  501F               	movf	LCDchar@a,w,c
 13421  004F26  2616               	addwf	??_LCDchar,f,c
 13422  004F28  5020               	movf	LCDchar@a+1,w,c
 13423  004F2A  2217               	addwfc	??_LCDchar+1,f,c
 13424  004F2C  C016  FFF6         	movff	??_LCDchar,tblptrl
 13425  004F30  C017  FFF7         	movff	??_LCDchar+1,tblptrh
 13426  004F34                     	if	0	;tblptru may be non-zero
 13427  004F34                     	endif
 13428  004F34                     	if	0	;tblptru may be non-zero
 13429  004F34                     	endif
 13430  004F34  0008               	tblrd		*
 13431  004F36  CFF5 F018          	movff	tablat,??_LCDchar+2
 13432  004F3A  501F               	movf	LCDchar@a,w,c
 13433  004F3C  0102               	movlb	2	; () banked
 13434  004F3E  2541               	addwf	_char_index& (0+255),w,b
 13435  004F40  6E19               	movwf	(??_LCDchar+3)& (0+255),c
 13436  004F42  5020               	movf	LCDchar@a+1,w,c
 13437  004F44  0102               	movlb	2	; () banked
 13438  004F46  2142               	addwfc	(_char_index+1)& (0+255),w,b
 13439  004F48  6E1A               	movwf	(??_LCDchar+4)& (0+255),c
 13440  004F4A  0EFF               	movlw	low _pixels
 13441  004F4C  2419               	addwf	??_LCDchar+3,w,c
 13442  004F4E  6ED9               	movwf	fsr2l,c
 13443  004F50  0E03               	movlw	high _pixels
 13444  004F52  201A               	addwfc	??_LCDchar+4,w,c
 13445  004F54  6EDA               	movwf	fsr2h,c
 13446  004F56  50DF               	movf	indf2,w,c
 13447  004F58  1018               	iorwf	??_LCDchar+2,w,c
 13448  004F5A  6E1E               	movwf	LCDchar@l,c
 13449                           
 13450                           ; BSR set to: 2
 13451                           ;LCDgraphic.c: 1603: LCDcmd(l);
 13452  004F5C  501E               	movf	LCDchar@l,w,c
 13453  004F5E  EC55  F01B         	call	_LCDcmd
 13454                           
 13455                           ;LCDgraphic.c: 1604: pixels[char_index+a] = l;
 13456  004F62  501F               	movf	LCDchar@a,w,c
 13457  004F64  0102               	movlb	2	; () banked
 13458  004F66  2541               	addwf	_char_index& (0+255),w,b
 13459  004F68  6E16               	movwf	??_LCDchar& (0+255),c
 13460  004F6A  5020               	movf	LCDchar@a+1,w,c
 13461  004F6C  0102               	movlb	2	; () banked
 13462  004F6E  2142               	addwfc	(_char_index+1)& (0+255),w,b
 13463  004F70  6E17               	movwf	(??_LCDchar+1)& (0+255),c
 13464  004F72  0EFF               	movlw	low _pixels
 13465  004F74  2416               	addwf	??_LCDchar,w,c
 13466  004F76  6ED9               	movwf	fsr2l,c
 13467  004F78  0E03               	movlw	high _pixels
 13468  004F7A  2017               	addwfc	??_LCDchar+1,w,c
 13469  004F7C  6EDA               	movwf	fsr2h,c
 13470  004F7E  C01E  FFDF         	movff	LCDchar@l,indf2
 13471                           
 13472                           ; BSR set to: 2
 13473  004F82  4A1F               	infsnz	LCDchar@a,f,c
 13474  004F84  2A20               	incf	LCDchar@a+1,f,c
 13475                           
 13476                           ; BSR set to: 2
 13477  004F86  BE20               	btfsc	LCDchar@a+1,7,c
 13478  004F88  D7BB               	goto	l3417
 13479  004F8A  5020               	movf	LCDchar@a+1,w,c
 13480  004F8C  E101               	bnz	u3290
 13481  004F8E  D7B2               	goto	L18
 13482  004F90                     u3290:
 13483                           
 13484                           ; BSR set to: 2
 13485                           ;LCDgraphic.c: 1605: }
 13486                           ;LCDgraphic.c: 1607: break;
 13487  004F90  0012               	return	
 13488  004F92                     l3427:
 13489                           
 13490                           ;LCDgraphic.c: 1610: LCDpage(0,curr_page);
 13491  004F92  C247  F005         	movff	_curr_page,LCDpage@page
 13492  004F96  0E00               	movlw	0
 13493  004F98  EC9A  F01C         	call	_LCDpage
 13494                           
 13495                           ;LCDgraphic.c: 1611: LCDy(0,1);
 13496  004F9C  0E01               	movlw	1
 13497  004F9E  6E05               	movwf	LCDy@value,c
 13498  004FA0  0E00               	movlw	0
 13499  004FA2  ECEE  F01C         	call	_LCDy
 13500                           
 13501                           ;LCDgraphic.c: 1613: char_index=(128*curr_page)+curr_y_pos;
 13502  004FA6  C247  F016         	movff	_curr_page,??_LCDchar
 13503  004FAA  C248  F017         	movff	_curr_page+1,??_LCDchar+1
 13504  004FAE  0E07               	movlw	7
 13505  004FB0                     u3305:
 13506  004FB0  90D8               	bcf	status,0,c
 13507  004FB2  3616               	rlcf	??_LCDchar,f,c
 13508  004FB4  3617               	rlcf	??_LCDchar+1,f,c
 13509  004FB6  2EE8               	decfsz	wreg,f,c
 13510  004FB8  D7FB               	goto	u3305
 13511  004FBA  0102               	movlb	2	; () banked
 13512  004FBC  5143               	movf	_curr_y_pos& (0+255),w,b
 13513  004FBE  2416               	addwf	??_LCDchar,w,c
 13514  004FC0  0102               	movlb	2	; () banked
 13515  004FC2  6F41               	movwf	_char_index& (0+255),b
 13516  004FC4  0102               	movlb	2	; () banked
 13517  004FC6  5144               	movf	(_curr_y_pos+1)& (0+255),w,b
 13518  004FC8  2017               	addwfc	??_LCDchar+1,w,c
 13519  004FCA  0102               	movlb	2	; () banked
 13520  004FCC  6F42               	movwf	(_char_index+1)& (0+255),b
 13521                           
 13522                           ; BSR set to: 2
 13523                           ;LCDgraphic.c: 1615: LATCbits.LATC2=1;
 13524  004FCE  848B               	bsf	3979,2,c	;volatile
 13525                           
 13526                           ; BSR set to: 2
 13527                           ;LCDgraphic.c: 1616: LATCbits.LATC1=0;
 13528  004FD0  928B               	bcf	3979,1,c	;volatile
 13529                           
 13530                           ; BSR set to: 2
 13531                           ;LCDgraphic.c: 1617: for (a=0;a<5;a++)
 13532  004FD2  0E00               	movlw	0
 13533  004FD4  6E20               	movwf	LCDchar@a+1,c
 13534  004FD6  0E00               	movlw	0
 13535  004FD8  6E1F               	movwf	LCDchar@a,c
 13536                           
 13537                           ; BSR set to: 2
 13538  004FDA  BE20               	btfsc	LCDchar@a+1,7,c
 13539  004FDC  D008               	goto	l3441
 13540  004FDE  5020               	movf	LCDchar@a+1,w,c
 13541  004FE0  E105               	bnz	u3310
 13542  004FE2  0E05               	movlw	5
 13543  004FE4  5C1F               	subwf	LCDchar@a,w,c
 13544  004FE6  B0D8               	btfsc	status,0,c
 13545  004FE8  0012               	return	
 13546  004FEA  D001               	goto	l3441
 13547  004FEC                     u3310:
 13548                           
 13549                           ; BSR set to: 2
 13550  004FEC  0012               	return	
 13551  004FEE                     l3441:
 13552                           
 13553                           ; BSR set to: 2
 13554                           ;LCDgraphic.c: 1618: {
 13555                           ;LCDgraphic.c: 1619: l= pixels[char_index+a] | pic[k][a];
 13556  004FEE  C01C  F00F         	movff	LCDchar@k,___wmul@multiplier
 13557  004FF2  C01D  F010         	movff	LCDchar@k+1,___wmul@multiplier+1
 13558  004FF6  0E00               	movlw	0
 13559  004FF8  6E12               	movwf	___wmul@multiplicand+1,c
 13560  004FFA  0E05               	movlw	5
 13561  004FFC  6E11               	movwf	___wmul@multiplicand,c
 13562  004FFE  ECBF  F01B         	call	___wmul	;wreg free
 13563  005002  0E43               	movlw	low _pic
 13564  005004  6E16               	movwf	??_LCDchar& (0+255),c
 13565  005006  0E7D               	movlw	high _pic
 13566  005008  6E17               	movwf	(??_LCDchar+1)& (0+255),c
 13567  00500A  500F               	movf	?___wmul,w,c
 13568  00500C  2616               	addwf	??_LCDchar,f,c
 13569  00500E  5010               	movf	?___wmul+1,w,c
 13570  005010  2217               	addwfc	??_LCDchar+1,f,c
 13571  005012  501F               	movf	LCDchar@a,w,c
 13572  005014  2616               	addwf	??_LCDchar,f,c
 13573  005016  5020               	movf	LCDchar@a+1,w,c
 13574  005018  2217               	addwfc	??_LCDchar+1,f,c
 13575  00501A  C016  FFF6         	movff	??_LCDchar,tblptrl
 13576  00501E  C017  FFF7         	movff	??_LCDchar+1,tblptrh
 13577  005022                     	if	0	;tblptru may be non-zero
 13578  005022                     	endif
 13579  005022                     	if	0	;tblptru may be non-zero
 13580  005022                     	endif
 13581  005022  0008               	tblrd		*
 13582  005024  CFF5 F018          	movff	tablat,??_LCDchar+2
 13583  005028  501F               	movf	LCDchar@a,w,c
 13584  00502A  0102               	movlb	2	; () banked
 13585  00502C  2541               	addwf	_char_index& (0+255),w,b
 13586  00502E  6E19               	movwf	(??_LCDchar+3)& (0+255),c
 13587  005030  5020               	movf	LCDchar@a+1,w,c
 13588  005032  0102               	movlb	2	; () banked
 13589  005034  2142               	addwfc	(_char_index+1)& (0+255),w,b
 13590  005036  6E1A               	movwf	(??_LCDchar+4)& (0+255),c
 13591  005038  0EFF               	movlw	low _pixels
 13592  00503A  2419               	addwf	??_LCDchar+3,w,c
 13593  00503C  6ED9               	movwf	fsr2l,c
 13594  00503E  0E03               	movlw	high _pixels
 13595  005040  201A               	addwfc	??_LCDchar+4,w,c
 13596  005042  6EDA               	movwf	fsr2h,c
 13597  005044  50DF               	movf	indf2,w,c
 13598  005046  1018               	iorwf	??_LCDchar+2,w,c
 13599  005048  6E1E               	movwf	LCDchar@l,c
 13600                           
 13601                           ; BSR set to: 2
 13602                           ;LCDgraphic.c: 1620: LCDcmd(l);
 13603  00504A  501E               	movf	LCDchar@l,w,c
 13604  00504C  EC55  F01B         	call	_LCDcmd
 13605                           
 13606                           ;LCDgraphic.c: 1621: pixels[char_index+a]=l;
 13607  005050  501F               	movf	LCDchar@a,w,c
 13608  005052  0102               	movlb	2	; () banked
 13609  005054  2541               	addwf	_char_index& (0+255),w,b
 13610  005056  6E16               	movwf	??_LCDchar& (0+255),c
 13611  005058  5020               	movf	LCDchar@a+1,w,c
 13612  00505A  0102               	movlb	2	; () banked
 13613  00505C  2142               	addwfc	(_char_index+1)& (0+255),w,b
 13614  00505E  6E17               	movwf	(??_LCDchar+1)& (0+255),c
 13615  005060  0EFF               	movlw	low _pixels
 13616  005062  2416               	addwf	??_LCDchar,w,c
 13617  005064  6ED9               	movwf	fsr2l,c
 13618  005066  0E03               	movlw	high _pixels
 13619  005068  2017               	addwfc	??_LCDchar+1,w,c
 13620  00506A  6EDA               	movwf	fsr2h,c
 13621  00506C  C01E  FFDF         	movff	LCDchar@l,indf2
 13622                           
 13623                           ; BSR set to: 2
 13624  005070  4A1F               	infsnz	LCDchar@a,f,c
 13625  005072  2A20               	incf	LCDchar@a+1,f,c
 13626                           
 13627                           ; BSR set to: 2
 13628  005074  BE20               	btfsc	LCDchar@a+1,7,c
 13629  005076  D7BB               	goto	l3441
 13630  005078  5020               	movf	LCDchar@a+1,w,c
 13631  00507A  E101               	bnz	u3320
 13632  00507C  D7B2               	goto	L19
 13633  00507E                     u3320:
 13634                           
 13635                           ; BSR set to: 2
 13636                           ;LCDgraphic.c: 1622: }
 13637                           ;LCDgraphic.c: 1623: break;
 13638  00507E  0012               	return	
 13639  005080                     l3451:
 13640                           
 13641                           ;LCDgraphic.c: 1626: LCDpage(0,curr_page);
 13642  005080  C247  F005         	movff	_curr_page,LCDpage@page
 13643  005084  0E00               	movlw	0
 13644  005086  EC9A  F01C         	call	_LCDpage
 13645                           
 13646                           ;LCDgraphic.c: 1627: LCDy(0,61);
 13647  00508A  0E3D               	movlw	61
 13648  00508C  6E05               	movwf	LCDy@value,c
 13649  00508E  0E00               	movlw	0
 13650  005090  ECEE  F01C         	call	_LCDy
 13651                           
 13652                           ;LCDgraphic.c: 1629: char_index=(128*curr_page)+curr_y_pos;
 13653  005094  C247  F016         	movff	_curr_page,??_LCDchar
 13654  005098  C248  F017         	movff	_curr_page+1,??_LCDchar+1
 13655  00509C  0E07               	movlw	7
 13656  00509E                     u3335:
 13657  00509E  90D8               	bcf	status,0,c
 13658  0050A0  3616               	rlcf	??_LCDchar,f,c
 13659  0050A2  3617               	rlcf	??_LCDchar+1,f,c
 13660  0050A4  2EE8               	decfsz	wreg,f,c
 13661  0050A6  D7FB               	goto	u3335
 13662  0050A8  0102               	movlb	2	; () banked
 13663  0050AA  5143               	movf	_curr_y_pos& (0+255),w,b
 13664  0050AC  2416               	addwf	??_LCDchar,w,c
 13665  0050AE  0102               	movlb	2	; () banked
 13666  0050B0  6F41               	movwf	_char_index& (0+255),b
 13667  0050B2  0102               	movlb	2	; () banked
 13668  0050B4  5144               	movf	(_curr_y_pos+1)& (0+255),w,b
 13669  0050B6  2017               	addwfc	??_LCDchar+1,w,c
 13670  0050B8  0102               	movlb	2	; () banked
 13671  0050BA  6F42               	movwf	(_char_index+1)& (0+255),b
 13672                           
 13673                           ; BSR set to: 2
 13674                           ;LCDgraphic.c: 1631: LATCbits.LATC2=1;
 13675  0050BC  848B               	bsf	3979,2,c	;volatile
 13676                           
 13677                           ; BSR set to: 2
 13678                           ;LCDgraphic.c: 1632: LATCbits.LATC1=0;
 13679  0050BE  928B               	bcf	3979,1,c	;volatile
 13680                           
 13681                           ; BSR set to: 2
 13682                           ;LCDgraphic.c: 1633: for (a=0;a<3;a++)
 13683  0050C0  0E00               	movlw	0
 13684  0050C2  6E20               	movwf	LCDchar@a+1,c
 13685  0050C4  0E00               	movlw	0
 13686  0050C6  6E1F               	movwf	LCDchar@a,c
 13687  0050C8                     l3461:
 13688                           
 13689                           ; BSR set to: 2
 13690  0050C8  BE20               	btfsc	LCDchar@a+1,7,c
 13691  0050CA  D006               	goto	l3465
 13692  0050CC  5020               	movf	LCDchar@a+1,w,c
 13693  0050CE  E148               	bnz	l3475
 13694  0050D0  0E03               	movlw	3
 13695  0050D2  5C1F               	subwf	LCDchar@a,w,c
 13696  0050D4  B0D8               	btfsc	status,0,c
 13697  0050D6  D044               	goto	l3475
 13698  0050D8                     l3465:
 13699                           
 13700                           ; BSR set to: 2
 13701                           ;LCDgraphic.c: 1634: {
 13702                           ;LCDgraphic.c: 1635: l = pixels[char_index+a] | pic[k][a];
 13703  0050D8  C01C  F00F         	movff	LCDchar@k,___wmul@multiplier
 13704  0050DC  C01D  F010         	movff	LCDchar@k+1,___wmul@multiplier+1
 13705  0050E0  0E00               	movlw	0
 13706  0050E2  6E12               	movwf	___wmul@multiplicand+1,c
 13707  0050E4  0E05               	movlw	5
 13708  0050E6  6E11               	movwf	___wmul@multiplicand,c
 13709  0050E8  ECBF  F01B         	call	___wmul	;wreg free
 13710  0050EC  0E43               	movlw	low _pic
 13711  0050EE  6E16               	movwf	??_LCDchar& (0+255),c
 13712  0050F0  0E7D               	movlw	high _pic
 13713  0050F2  6E17               	movwf	(??_LCDchar+1)& (0+255),c
 13714  0050F4  500F               	movf	?___wmul,w,c
 13715  0050F6  2616               	addwf	??_LCDchar,f,c
 13716  0050F8  5010               	movf	?___wmul+1,w,c
 13717  0050FA  2217               	addwfc	??_LCDchar+1,f,c
 13718  0050FC  501F               	movf	LCDchar@a,w,c
 13719  0050FE  2616               	addwf	??_LCDchar,f,c
 13720  005100  5020               	movf	LCDchar@a+1,w,c
 13721  005102  2217               	addwfc	??_LCDchar+1,f,c
 13722  005104  C016  FFF6         	movff	??_LCDchar,tblptrl
 13723  005108  C017  FFF7         	movff	??_LCDchar+1,tblptrh
 13724  00510C                     	if	0	;tblptru may be non-zero
 13725  00510C                     	endif
 13726  00510C                     	if	0	;tblptru may be non-zero
 13727  00510C                     	endif
 13728  00510C  0008               	tblrd		*
 13729  00510E  CFF5 F018          	movff	tablat,??_LCDchar+2
 13730  005112  501F               	movf	LCDchar@a,w,c
 13731  005114  0102               	movlb	2	; () banked
 13732  005116  2541               	addwf	_char_index& (0+255),w,b
 13733  005118  6E19               	movwf	(??_LCDchar+3)& (0+255),c
 13734  00511A  5020               	movf	LCDchar@a+1,w,c
 13735  00511C  0102               	movlb	2	; () banked
 13736  00511E  2142               	addwfc	(_char_index+1)& (0+255),w,b
 13737  005120  6E1A               	movwf	(??_LCDchar+4)& (0+255),c
 13738  005122  0EFF               	movlw	low _pixels
 13739  005124  2419               	addwf	??_LCDchar+3,w,c
 13740  005126  6ED9               	movwf	fsr2l,c
 13741  005128  0E03               	movlw	high _pixels
 13742  00512A  201A               	addwfc	??_LCDchar+4,w,c
 13743  00512C  6EDA               	movwf	fsr2h,c
 13744  00512E  50DF               	movf	indf2,w,c
 13745  005130  1018               	iorwf	??_LCDchar+2,w,c
 13746  005132  6E1E               	movwf	LCDchar@l,c
 13747                           
 13748                           ; BSR set to: 2
 13749                           ;LCDgraphic.c: 1636: LCDcmd(l);
 13750  005134  501E               	movf	LCDchar@l,w,c
 13751  005136  EC55  F01B         	call	_LCDcmd
 13752                           
 13753                           ;LCDgraphic.c: 1637: pixels[char_index+a]=l;
 13754  00513A  501F               	movf	LCDchar@a,w,c
 13755  00513C  0102               	movlb	2	; () banked
 13756  00513E  2541               	addwf	_char_index& (0+255),w,b
 13757  005140  6E16               	movwf	??_LCDchar& (0+255),c
 13758  005142  5020               	movf	LCDchar@a+1,w,c
 13759  005144  0102               	movlb	2	; () banked
 13760  005146  2142               	addwfc	(_char_index+1)& (0+255),w,b
 13761  005148  6E17               	movwf	(??_LCDchar+1)& (0+255),c
 13762  00514A  0EFF               	movlw	low _pixels
 13763  00514C  2416               	addwf	??_LCDchar,w,c
 13764  00514E  6ED9               	movwf	fsr2l,c
 13765  005150  0E03               	movlw	high _pixels
 13766  005152  2017               	addwfc	??_LCDchar+1,w,c
 13767  005154  6EDA               	movwf	fsr2h,c
 13768  005156  C01E  FFDF         	movff	LCDchar@l,indf2
 13769                           
 13770                           ; BSR set to: 2
 13771  00515A  4A1F               	infsnz	LCDchar@a,f,c
 13772  00515C  2A20               	incf	LCDchar@a+1,f,c
 13773  00515E  D7B4               	goto	l3461
 13774  005160                     l3475:
 13775                           
 13776                           ; BSR set to: 2
 13777                           ;LCDgraphic.c: 1638: }
 13778                           ;LCDgraphic.c: 1640: LCDpage(1,curr_page);
 13779  005160  C247  F005         	movff	_curr_page,LCDpage@page
 13780  005164  0E01               	movlw	1
 13781  005166  EC9A  F01C         	call	_LCDpage
 13782                           
 13783                           ;LCDgraphic.c: 1641: LCDy(1,0);
 13784  00516A  0E00               	movlw	0
 13785  00516C  6E05               	movwf	LCDy@value,c
 13786  00516E  0E01               	movlw	1
 13787  005170  ECEE  F01C         	call	_LCDy
 13788                           
 13789                           ;LCDgraphic.c: 1644: LATCbits.LATC2=1;
 13790  005174  848B               	bsf	3979,2,c	;volatile
 13791                           
 13792                           ;LCDgraphic.c: 1645: LATCbits.LATC1=0;
 13793  005176  928B               	bcf	3979,1,c	;volatile
 13794                           
 13795                           ;LCDgraphic.c: 1646: for (a=3;a<5;a++)
 13796  005178  0E00               	movlw	0
 13797  00517A  6E20               	movwf	LCDchar@a+1,c
 13798  00517C  0E03               	movlw	3
 13799  00517E  6E1F               	movwf	LCDchar@a,c
 13800  005180  BE20               	btfsc	LCDchar@a+1,7,c
 13801  005182  D008               	goto	l3487
 13802  005184  5020               	movf	LCDchar@a+1,w,c
 13803  005186  E105               	bnz	u3360
 13804  005188  0E05               	movlw	5
 13805  00518A  5C1F               	subwf	LCDchar@a,w,c
 13806  00518C  B0D8               	btfsc	status,0,c
 13807  00518E  0012               	return	
 13808  005190  D001               	goto	l3487
 13809  005192                     u3360:
 13810  005192  0012               	return	
 13811  005194                     l3487:
 13812                           
 13813                           ;LCDgraphic.c: 1647: {
 13814                           ;LCDgraphic.c: 1648: l= pixels[char_index+a] | pic[k][a];
 13815  005194  C01C  F00F         	movff	LCDchar@k,___wmul@multiplier
 13816  005198  C01D  F010         	movff	LCDchar@k+1,___wmul@multiplier+1
 13817  00519C  0E00               	movlw	0
 13818  00519E  6E12               	movwf	___wmul@multiplicand+1,c
 13819  0051A0  0E05               	movlw	5
 13820  0051A2  6E11               	movwf	___wmul@multiplicand,c
 13821  0051A4  ECBF  F01B         	call	___wmul	;wreg free
 13822  0051A8  0E43               	movlw	low _pic
 13823  0051AA  6E16               	movwf	??_LCDchar& (0+255),c
 13824  0051AC  0E7D               	movlw	high _pic
 13825  0051AE  6E17               	movwf	(??_LCDchar+1)& (0+255),c
 13826  0051B0  500F               	movf	?___wmul,w,c
 13827  0051B2  2616               	addwf	??_LCDchar,f,c
 13828  0051B4  5010               	movf	?___wmul+1,w,c
 13829  0051B6  2217               	addwfc	??_LCDchar+1,f,c
 13830  0051B8  501F               	movf	LCDchar@a,w,c
 13831  0051BA  2616               	addwf	??_LCDchar,f,c
 13832  0051BC  5020               	movf	LCDchar@a+1,w,c
 13833  0051BE  2217               	addwfc	??_LCDchar+1,f,c
 13834  0051C0  C016  FFF6         	movff	??_LCDchar,tblptrl
 13835  0051C4  C017  FFF7         	movff	??_LCDchar+1,tblptrh
 13836  0051C8                     	if	0	;tblptru may be non-zero
 13837  0051C8                     	endif
 13838  0051C8                     	if	0	;tblptru may be non-zero
 13839  0051C8                     	endif
 13840  0051C8  0008               	tblrd		*
 13841  0051CA  CFF5 F018          	movff	tablat,??_LCDchar+2
 13842  0051CE  501F               	movf	LCDchar@a,w,c
 13843  0051D0  0102               	movlb	2	; () banked
 13844  0051D2  2541               	addwf	_char_index& (0+255),w,b
 13845  0051D4  6E19               	movwf	(??_LCDchar+3)& (0+255),c
 13846  0051D6  5020               	movf	LCDchar@a+1,w,c
 13847  0051D8  0102               	movlb	2	; () banked
 13848  0051DA  2142               	addwfc	(_char_index+1)& (0+255),w,b
 13849  0051DC  6E1A               	movwf	(??_LCDchar+4)& (0+255),c
 13850  0051DE  0EFF               	movlw	low _pixels
 13851  0051E0  2419               	addwf	??_LCDchar+3,w,c
 13852  0051E2  6ED9               	movwf	fsr2l,c
 13853  0051E4  0E03               	movlw	high _pixels
 13854  0051E6  201A               	addwfc	??_LCDchar+4,w,c
 13855  0051E8  6EDA               	movwf	fsr2h,c
 13856  0051EA  50DF               	movf	indf2,w,c
 13857  0051EC  1018               	iorwf	??_LCDchar+2,w,c
 13858  0051EE  6E1E               	movwf	LCDchar@l,c
 13859                           
 13860                           ; BSR set to: 2
 13861                           ;LCDgraphic.c: 1649: LCDcmd(l);
 13862  0051F0  501E               	movf	LCDchar@l,w,c
 13863  0051F2  EC55  F01B         	call	_LCDcmd
 13864                           
 13865                           ;LCDgraphic.c: 1650: pixels[char_index+a]=l;
 13866  0051F6  501F               	movf	LCDchar@a,w,c
 13867  0051F8  0102               	movlb	2	; () banked
 13868  0051FA  2541               	addwf	_char_index& (0+255),w,b
 13869  0051FC  6E16               	movwf	??_LCDchar& (0+255),c
 13870  0051FE  5020               	movf	LCDchar@a+1,w,c
 13871  005200  0102               	movlb	2	; () banked
 13872  005202  2142               	addwfc	(_char_index+1)& (0+255),w,b
 13873  005204  6E17               	movwf	(??_LCDchar+1)& (0+255),c
 13874  005206  0EFF               	movlw	low _pixels
 13875  005208  2416               	addwf	??_LCDchar,w,c
 13876  00520A  6ED9               	movwf	fsr2l,c
 13877  00520C  0E03               	movlw	high _pixels
 13878  00520E  2017               	addwfc	??_LCDchar+1,w,c
 13879  005210  6EDA               	movwf	fsr2h,c
 13880  005212  C01E  FFDF         	movff	LCDchar@l,indf2
 13881                           
 13882                           ; BSR set to: 2
 13883  005216  4A1F               	infsnz	LCDchar@a,f,c
 13884  005218  2A20               	incf	LCDchar@a+1,f,c
 13885                           
 13886                           ; BSR set to: 2
 13887  00521A  BE20               	btfsc	LCDchar@a+1,7,c
 13888  00521C  D7BB               	goto	l3487
 13889  00521E  5020               	movf	LCDchar@a+1,w,c
 13890  005220  E101               	bnz	u3370
 13891  005222  D7B2               	goto	L20
 13892  005224                     u3370:
 13893                           
 13894                           ; BSR set to: 2
 13895                           ;LCDgraphic.c: 1651: }
 13896                           ;LCDgraphic.c: 1653: break;
 13897  005224  0012               	return	
 13898  005226                     l3497:
 13899                           
 13900                           ;LCDgraphic.c: 1656: LCDpage(1,curr_page);
 13901  005226  C247  F005         	movff	_curr_page,LCDpage@page
 13902  00522A  0E01               	movlw	1
 13903  00522C  EC9A  F01C         	call	_LCDpage
 13904                           
 13905                           ;LCDgraphic.c: 1657: LCDy(1,59);
 13906  005230  0E3B               	movlw	59
 13907  005232  6E05               	movwf	LCDy@value,c
 13908  005234  0E01               	movlw	1
 13909  005236  ECEE  F01C         	call	_LCDy
 13910                           
 13911                           ;LCDgraphic.c: 1659: char_index=(128*curr_page)+curr_y_pos+64;
 13912  00523A  C247  F016         	movff	_curr_page,??_LCDchar
 13913  00523E  C248  F017         	movff	_curr_page+1,??_LCDchar+1
 13914  005242  0E07               	movlw	7
 13915  005244                     u3385:
 13916  005244  90D8               	bcf	status,0,c
 13917  005246  3616               	rlcf	??_LCDchar,f,c
 13918  005248  3617               	rlcf	??_LCDchar+1,f,c
 13919  00524A  2EE8               	decfsz	wreg,f,c
 13920  00524C  D7FB               	goto	u3385
 13921  00524E  0102               	movlb	2	; () banked
 13922  005250  5143               	movf	_curr_y_pos& (0+255),w,b
 13923  005252  2616               	addwf	??_LCDchar,f,c
 13924  005254  0102               	movlb	2	; () banked
 13925  005256  5144               	movf	(_curr_y_pos+1)& (0+255),w,b
 13926  005258  2217               	addwfc	??_LCDchar+1,f,c
 13927  00525A  0E40               	movlw	64
 13928  00525C  2416               	addwf	??_LCDchar,w,c
 13929  00525E  0102               	movlb	2	; () banked
 13930  005260  6F41               	movwf	_char_index& (0+255),b
 13931  005262  0E00               	movlw	0
 13932  005264  2017               	addwfc	??_LCDchar+1,w,c
 13933  005266  0102               	movlb	2	; () banked
 13934  005268  6F42               	movwf	(_char_index+1)& (0+255),b
 13935                           
 13936                           ; BSR set to: 2
 13937                           ;LCDgraphic.c: 1661: LATCbits.LATC2=1;
 13938  00526A  848B               	bsf	3979,2,c	;volatile
 13939                           
 13940                           ; BSR set to: 2
 13941                           ;LCDgraphic.c: 1662: LATCbits.LATC1=0;
 13942  00526C  928B               	bcf	3979,1,c	;volatile
 13943                           
 13944                           ; BSR set to: 2
 13945                           ;LCDgraphic.c: 1663: for (a=0;a<5;a++)
 13946  00526E  0E00               	movlw	0
 13947  005270  6E20               	movwf	LCDchar@a+1,c
 13948  005272  0E00               	movlw	0
 13949  005274  6E1F               	movwf	LCDchar@a,c
 13950  005276                     l3507:
 13951                           
 13952                           ; BSR set to: 2
 13953  005276  BE20               	btfsc	LCDchar@a+1,7,c
 13954  005278  D006               	goto	l3511
 13955  00527A  5020               	movf	LCDchar@a+1,w,c
 13956  00527C  E156               	bnz	l280
 13957  00527E  0E05               	movlw	5
 13958  005280  5C1F               	subwf	LCDchar@a,w,c
 13959  005282  B0D8               	btfsc	status,0,c
 13960  005284  0012               	return	
 13961  005286                     l3511:
 13962                           
 13963                           ; BSR set to: 2
 13964                           ;LCDgraphic.c: 1664: {
 13965                           ;LCDgraphic.c: 1665: l= pixels[char_index+a] | pic[k][a];
 13966  005286  C01C  F00F         	movff	LCDchar@k,___wmul@multiplier
 13967  00528A  C01D  F010         	movff	LCDchar@k+1,___wmul@multiplier+1
 13968  00528E  0E00               	movlw	0
 13969  005290  6E12               	movwf	___wmul@multiplicand+1,c
 13970  005292  0E05               	movlw	5
 13971  005294  6E11               	movwf	___wmul@multiplicand,c
 13972  005296  ECBF  F01B         	call	___wmul	;wreg free
 13973  00529A  0E43               	movlw	low _pic
 13974  00529C  6E16               	movwf	??_LCDchar& (0+255),c
 13975  00529E  0E7D               	movlw	high _pic
 13976  0052A0  6E17               	movwf	(??_LCDchar+1)& (0+255),c
 13977  0052A2  500F               	movf	?___wmul,w,c
 13978  0052A4  2616               	addwf	??_LCDchar,f,c
 13979  0052A6  5010               	movf	?___wmul+1,w,c
 13980  0052A8  2217               	addwfc	??_LCDchar+1,f,c
 13981  0052AA  501F               	movf	LCDchar@a,w,c
 13982  0052AC  2616               	addwf	??_LCDchar,f,c
 13983  0052AE  5020               	movf	LCDchar@a+1,w,c
 13984  0052B0  2217               	addwfc	??_LCDchar+1,f,c
 13985  0052B2  C016  FFF6         	movff	??_LCDchar,tblptrl
 13986  0052B6  C017  FFF7         	movff	??_LCDchar+1,tblptrh
 13987  0052BA                     	if	0	;tblptru may be non-zero
 13988  0052BA                     	endif
 13989  0052BA                     	if	0	;tblptru may be non-zero
 13990  0052BA                     	endif
 13991  0052BA  0008               	tblrd		*
 13992  0052BC  CFF5 F018          	movff	tablat,??_LCDchar+2
 13993  0052C0  501F               	movf	LCDchar@a,w,c
 13994  0052C2  0102               	movlb	2	; () banked
 13995  0052C4  2541               	addwf	_char_index& (0+255),w,b
 13996  0052C6  6E19               	movwf	(??_LCDchar+3)& (0+255),c
 13997  0052C8  5020               	movf	LCDchar@a+1,w,c
 13998  0052CA  0102               	movlb	2	; () banked
 13999  0052CC  2142               	addwfc	(_char_index+1)& (0+255),w,b
 14000  0052CE  6E1A               	movwf	(??_LCDchar+4)& (0+255),c
 14001  0052D0  0EFF               	movlw	low _pixels
 14002  0052D2  2419               	addwf	??_LCDchar+3,w,c
 14003  0052D4  6ED9               	movwf	fsr2l,c
 14004  0052D6  0E03               	movlw	high _pixels
 14005  0052D8  201A               	addwfc	??_LCDchar+4,w,c
 14006  0052DA  6EDA               	movwf	fsr2h,c
 14007  0052DC  50DF               	movf	indf2,w,c
 14008  0052DE  1018               	iorwf	??_LCDchar+2,w,c
 14009  0052E0  6E1E               	movwf	LCDchar@l,c
 14010                           
 14011                           ; BSR set to: 2
 14012                           ;LCDgraphic.c: 1666: LCDcmd(l);
 14013  0052E2  501E               	movf	LCDchar@l,w,c
 14014  0052E4  EC55  F01B         	call	_LCDcmd
 14015                           
 14016                           ;LCDgraphic.c: 1667: pixels[char_index+a]=l;
 14017  0052E8  501F               	movf	LCDchar@a,w,c
 14018  0052EA  0102               	movlb	2	; () banked
 14019  0052EC  2541               	addwf	_char_index& (0+255),w,b
 14020  0052EE  6E16               	movwf	??_LCDchar& (0+255),c
 14021  0052F0  5020               	movf	LCDchar@a+1,w,c
 14022  0052F2  0102               	movlb	2	; () banked
 14023  0052F4  2142               	addwfc	(_char_index+1)& (0+255),w,b
 14024  0052F6  6E17               	movwf	(??_LCDchar+1)& (0+255),c
 14025  0052F8  0EFF               	movlw	low _pixels
 14026  0052FA  2416               	addwf	??_LCDchar,w,c
 14027  0052FC  6ED9               	movwf	fsr2l,c
 14028  0052FE  0E03               	movlw	high _pixels
 14029  005300  2017               	addwfc	??_LCDchar+1,w,c
 14030  005302  6EDA               	movwf	fsr2h,c
 14031  005304  C01E  FFDF         	movff	LCDchar@l,indf2
 14032                           
 14033                           ; BSR set to: 2
 14034  005308  4A1F               	infsnz	LCDchar@a,f,c
 14035  00530A  2A20               	incf	LCDchar@a+1,f,c
 14036  00530C  D7B4               	goto	l3507
 14037  00530E                     l3523:
 14038  00530E  5015               	movf	LCDchar@position,w,c
 14039                           
 14040                           ; Switch size 1, requested type "space"
 14041                           ; Number of cases is 4, Range of values is 0 to 3
 14042                           ; switch strategies available:
 14043                           ; Name         Instructions Cycles
 14044                           ; simple_byte           13     7 (average)
 14045                           ;	Chosen strategy is simple_byte
 14046  005310  0A00               	xorlw	0	; case 0
 14047  005312  B4D8               	btfsc	status,2,c
 14048  005314  D5B5               	goto	l3401
 14049  005316  0A01               	xorlw	1	; case 1
 14050  005318  B4D8               	btfsc	status,2,c
 14051  00531A  D63B               	goto	l3427
 14052  00531C  0A03               	xorlw	3	; case 2
 14053  00531E  B4D8               	btfsc	status,2,c
 14054  005320  D6AF               	goto	l3451
 14055  005322  0A01               	xorlw	1	; case 3
 14056  005324  A4D8               	btfss	status,2,c
 14057  005326  0012               	return	
 14058  005328  D77E               	goto	l3497
 14059  00532A                     l280:
 14060  00532A  0012               	return		;funcret
 14061  00532C                     __end_of_LCDchar:
 14062                           	opt stack 0
 14063                           tblptru	equ	0xFF8
 14064                           tblptrh	equ	0xFF7
 14065                           tblptrl	equ	0xFF6
 14066                           tablat	equ	0xFF5
 14067                           prodh	equ	0xFF4
 14068                           prodl	equ	0xFF3
 14069                           postinc0	equ	0xFEE
 14070                           wreg	equ	0xFE8
 14071                           indf1	equ	0xFE7
 14072                           postdec1	equ	0xFE5
 14073                           fsr1h	equ	0xFE2
 14074                           fsr1l	equ	0xFE1
 14075                           indf2	equ	0xFDF
 14076                           postinc2	equ	0xFDE
 14077                           postdec2	equ	0xFDD
 14078                           fsr2h	equ	0xFDA
 14079                           fsr2l	equ	0xFD9
 14080                           status	equ	0xFD8
 14081                           
 14082 ;; *************** function ___wmul *****************
 14083 ;; Defined at:
 14084 ;;		line 15 in file "/opt/microchip/xc8/v1.37/sources/common/Umul16.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;  multiplier      2   14[COMRAM] unsigned int 
 14087 ;;  multiplicand    2   16[COMRAM] unsigned int 
 14088 ;; Auto vars:     Size  Location     Type
 14089 ;;  product         2   18[COMRAM] unsigned int 
 14090 ;; Return value:  Size  Location     Type
 14091 ;;                  2   14[COMRAM] unsigned int 
 14092 ;; Registers used:
 14093 ;;		wreg, status,2, status,0, prodl, prodh
 14094 ;; Tracked objects:
 14095 ;;		On entry : 0/0
 14096 ;;		On exit  : 0/0
 14097 ;;		Unchanged: 0/0
 14098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14099 ;;      Params:         4       0       0       0       0       0       0       0       0
 14100 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14101 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14102 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14103 ;;Total ram usage:        6 bytes
 14104 ;; Hardware stack levels used:    1
 14105 ;; This function calls:
 14106 ;;		Nothing
 14107 ;; This function is called by:
 14108 ;;		_main
 14109 ;;		_LCDchar
 14110 ;;		_LCDstring
 14111 ;;		_fround
 14112 ;;		_scale
 14113 ;;		_sprintf
 14114 ;; This function uses a non-reentrant model
 14115 ;;
 14116                           
 14117                           	psect	text34
 14118  00377E                     __ptext34:
 14119                           	opt stack 0
 14120  00377E                     ___wmul:
 14121                           	opt stack 28
 14122                           
 14123                           ;incstack = 0
 14124  00377E  500F               	movf	___wmul@multiplier,w,c
 14125  003780  0211               	mulwf	___wmul@multiplicand,c
 14126  003782  CFF3 F013          	movff	prodl,___wmul@product
 14127  003786  CFF4 F014          	movff	prodh,___wmul@product+1
 14128  00378A  500F               	movf	___wmul@multiplier,w,c
 14129  00378C  0212               	mulwf	___wmul@multiplicand+1,c
 14130  00378E  50F3               	movf	prodl,w,c
 14131  003790  2614               	addwf	___wmul@product+1,f,c
 14132  003792  5010               	movf	___wmul@multiplier+1,w,c
 14133  003794  0211               	mulwf	___wmul@multiplicand,c
 14134  003796  50F3               	movf	prodl,w,c
 14135  003798  2614               	addwf	___wmul@product+1,f,c
 14136  00379A  C013  F00F         	movff	___wmul@product,?___wmul
 14137  00379E  C014  F010         	movff	___wmul@product+1,?___wmul+1
 14138  0037A2  0012               	return	
 14139  0037A4                     __end_of___wmul:
 14140                           	opt stack 0
 14141                           tblptru	equ	0xFF8
 14142                           tblptrh	equ	0xFF7
 14143                           tblptrl	equ	0xFF6
 14144                           tablat	equ	0xFF5
 14145                           prodh	equ	0xFF4
 14146                           prodl	equ	0xFF3
 14147                           postinc0	equ	0xFEE
 14148                           wreg	equ	0xFE8
 14149                           indf1	equ	0xFE7
 14150                           postdec1	equ	0xFE5
 14151                           fsr1h	equ	0xFE2
 14152                           fsr1l	equ	0xFE1
 14153                           indf2	equ	0xFDF
 14154                           postinc2	equ	0xFDE
 14155                           postdec2	equ	0xFDD
 14156                           fsr2h	equ	0xFDA
 14157                           fsr2l	equ	0xFD9
 14158                           status	equ	0xFD8
 14159                           
 14160 ;; *************** function _LCDy *****************
 14161 ;; Defined at:
 14162 ;;		line 1492 in file "LCDgraphic.c"
 14163 ;; Parameters:    Size  Location     Type
 14164 ;;  side            1    wreg     unsigned char 
 14165 ;;  value           1    4[COMRAM] unsigned char 
 14166 ;; Auto vars:     Size  Location     Type
 14167 ;;  side            1    5[COMRAM] unsigned char 
 14168 ;; Return value:  Size  Location     Type
 14169 ;;                  1    wreg      unsigned char 
 14170 ;; Registers used:
 14171 ;;		wreg, status,2, status,0, cstack
 14172 ;; Tracked objects:
 14173 ;;		On entry : 0/0
 14174 ;;		On exit  : 0/0
 14175 ;;		Unchanged: 0/0
 14176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14177 ;;      Params:         1       0       0       0       0       0       0       0       0
 14178 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14179 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14180 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14181 ;;Total ram usage:        2 bytes
 14182 ;; Hardware stack levels used:    1
 14183 ;; Hardware stack levels required when called:    3
 14184 ;; This function calls:
 14185 ;;		_LCDcmd
 14186 ;;		__lcd_waitbusy
 14187 ;; This function is called by:
 14188 ;;		_LCDchar
 14189 ;;		_LCDclear
 14190 ;;		_LCDstring
 14191 ;;		_lcdplotpixel2
 14192 ;;		_write
 14193 ;; This function uses a non-reentrant model
 14194 ;;
 14195                           
 14196                           	psect	text35
 14197  0039DC                     __ptext35:
 14198                           	opt stack 0
 14199  0039DC                     _LCDy:
 14200                           	opt stack 25
 14201                           
 14202                           ;incstack = 0
 14203                           ;LCDy@side stored from wreg
 14204  0039DC  6E06               	movwf	LCDy@side,c
 14205                           
 14206                           ;LCDgraphic.c: 1494: if (side < 0 || side > 7 || value < 0 || value > 63)
 14207  0039DE  0E08               	movlw	8
 14208  0039E0  6006               	cpfslt	LCDy@side,c
 14209  0039E2  0012               	return	
 14210  0039E4  0E3F               	movlw	63
 14211  0039E6  6405               	cpfsgt	LCDy@value,c
 14212  0039E8  D001               	goto	l246
 14213  0039EA  0012               	return	
 14214  0039EC                     l246:
 14215                           
 14216                           ;LCDgraphic.c: 1498: selected_side = side;
 14217  0039EC  C006  F245         	movff	LCDy@side,_selected_side
 14218  0039F0  0102               	movlb	2	; () banked
 14219  0039F2  6B46               	clrf	(_selected_side+1)& (0+255),b
 14220                           
 14221                           ;LCDgraphic.c: 1500: curr_y_pos = value;
 14222  0039F4  C005  F243         	movff	LCDy@value,_curr_y_pos
 14223  0039F8  0102               	movlb	2	; () banked
 14224  0039FA  6B44               	clrf	(_curr_y_pos+1)& (0+255),b
 14225                           
 14226                           ; BSR set to: 2
 14227                           ;LCDgraphic.c: 1502: _lcd_waitbusy();
 14228  0039FC  EC62  F01B         	call	__lcd_waitbusy	;wreg free
 14229                           
 14230                           ;LCDgraphic.c: 1504: LATCbits.LATC2=0;
 14231  003A00  948B               	bcf	3979,2,c	;volatile
 14232                           
 14233                           ;LCDgraphic.c: 1505: LATCbits.LATC1=0;
 14234  003A02  928B               	bcf	3979,1,c	;volatile
 14235                           
 14236                           ;LCDgraphic.c: 1507: switch(side)
 14237  003A04  D008               	goto	l3349
 14238  003A06                     l251:
 14239                           
 14240                           ;LCDgraphic.c: 1510: LATEbits.LATE0=1;
 14241  003A06  808D               	bsf	3981,0,c	;volatile
 14242                           
 14243                           ;LCDgraphic.c: 1511: LATEbits.LATE1=0;
 14244  003A08  928D               	bcf	3981,1,c	;volatile
 14245                           
 14246                           ;LCDgraphic.c: 1512: break;
 14247  003A0A  D00F               	goto	l3351
 14248  003A0C                     l253:
 14249                           
 14250                           ;LCDgraphic.c: 1514: LATEbits.LATE0=0;
 14251  003A0C  908D               	bcf	3981,0,c	;volatile
 14252  003A0E  D001               	goto	L21
 14253  003A10                     l254:
 14254                           
 14255                           ;LCDgraphic.c: 1518: LATEbits.LATE0=1;
 14256  003A10  808D               	bsf	3981,0,c	;volatile
 14257  003A12                     L21:
 14258                           
 14259                           ;LCDgraphic.c: 1519: LATEbits.LATE1=1;
 14260  003A12  828D               	bsf	3981,1,c	;volatile
 14261                           
 14262                           ;LCDgraphic.c: 1521: }
 14263                           
 14264                           ;LCDgraphic.c: 1520: break;
 14265  003A14  D00A               	goto	l3351
 14266  003A16                     l3349:
 14267  003A16  5006               	movf	LCDy@side,w,c
 14268                           
 14269                           ; Switch size 1, requested type "space"
 14270                           ; Number of cases is 3, Range of values is 0 to 2
 14271                           ; switch strategies available:
 14272                           ; Name         Instructions Cycles
 14273                           ; simple_byte           10     6 (average)
 14274                           ;	Chosen strategy is simple_byte
 14275  003A18  0A00               	xorlw	0	; case 0
 14276  003A1A  B4D8               	btfsc	status,2,c
 14277  003A1C  D7F4               	goto	l251
 14278  003A1E  0A01               	xorlw	1	; case 1
 14279  003A20  B4D8               	btfsc	status,2,c
 14280  003A22  D7F4               	goto	l253
 14281  003A24  0A03               	xorlw	3	; case 2
 14282  003A26  B4D8               	btfsc	status,2,c
 14283  003A28  D7F3               	goto	l254
 14284  003A2A                     l3351:
 14285                           
 14286                           ;LCDgraphic.c: 1523: LCDcmd(0b01000000 | value);
 14287  003A2A  5005               	movf	LCDy@value,w,c
 14288  003A2C  0940               	iorlw	64
 14289  003A2E  EC55  F01B         	call	_LCDcmd
 14290  003A32  0012               	return	
 14291  003A34                     __end_of_LCDy:
 14292                           	opt stack 0
 14293                           tblptru	equ	0xFF8
 14294                           tblptrh	equ	0xFF7
 14295                           tblptrl	equ	0xFF6
 14296                           tablat	equ	0xFF5
 14297                           prodh	equ	0xFF4
 14298                           prodl	equ	0xFF3
 14299                           postinc0	equ	0xFEE
 14300                           wreg	equ	0xFE8
 14301                           indf1	equ	0xFE7
 14302                           postdec1	equ	0xFE5
 14303                           fsr1h	equ	0xFE2
 14304                           fsr1l	equ	0xFE1
 14305                           indf2	equ	0xFDF
 14306                           postinc2	equ	0xFDE
 14307                           postdec2	equ	0xFDD
 14308                           fsr2h	equ	0xFDA
 14309                           fsr2l	equ	0xFD9
 14310                           status	equ	0xFD8
 14311                           
 14312 ;; *************** function _LCDpage *****************
 14313 ;; Defined at:
 14314 ;;		line 1410 in file "LCDgraphic.c"
 14315 ;; Parameters:    Size  Location     Type
 14316 ;;  side            1    wreg     unsigned char 
 14317 ;;  page            1    4[COMRAM] unsigned char 
 14318 ;; Auto vars:     Size  Location     Type
 14319 ;;  side            1    5[COMRAM] unsigned char 
 14320 ;; Return value:  Size  Location     Type
 14321 ;;                  1    wreg      unsigned char 
 14322 ;; Registers used:
 14323 ;;		wreg, status,2, status,0, cstack
 14324 ;; Tracked objects:
 14325 ;;		On entry : 0/0
 14326 ;;		On exit  : 0/0
 14327 ;;		Unchanged: 0/0
 14328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14329 ;;      Params:         1       0       0       0       0       0       0       0       0
 14330 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14331 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14332 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14333 ;;Total ram usage:        2 bytes
 14334 ;; Hardware stack levels used:    1
 14335 ;; Hardware stack levels required when called:    3
 14336 ;; This function calls:
 14337 ;;		_LCDcmd
 14338 ;;		__lcd_waitbusy
 14339 ;; This function is called by:
 14340 ;;		_main
 14341 ;;		_LCDchar
 14342 ;;		_LCDclear
 14343 ;;		_LCDstring
 14344 ;;		_lcdplotpixel2
 14345 ;;		_write
 14346 ;; This function uses a non-reentrant model
 14347 ;;
 14348                           
 14349                           	psect	text36
 14350  003934                     __ptext36:
 14351                           	opt stack 0
 14352  003934                     _LCDpage:
 14353                           	opt stack 25
 14354                           
 14355                           ;incstack = 0
 14356                           ;LCDpage@side stored from wreg
 14357  003934  6E06               	movwf	LCDpage@side,c
 14358                           
 14359                           ;LCDgraphic.c: 1412: if (side < 0 || side > 2 || page < 0 || page > 7)
 14360  003936  0E03               	movlw	3
 14361  003938  6006               	cpfslt	LCDpage@side,c
 14362  00393A  0012               	return	
 14363  00393C  0E07               	movlw	7
 14364  00393E  6405               	cpfsgt	LCDpage@page,c
 14365  003940  D001               	goto	l3321
 14366  003942  0012               	return	
 14367  003944                     l3321:
 14368                           
 14369                           ;LCDgraphic.c: 1416: _lcd_waitbusy();
 14370  003944  EC62  F01B         	call	__lcd_waitbusy	;wreg free
 14371                           
 14372                           ;LCDgraphic.c: 1419: curr_page = page;
 14373  003948  C005  F247         	movff	LCDpage@page,_curr_page
 14374  00394C  0102               	movlb	2	; () banked
 14375  00394E  6B48               	clrf	(_curr_page+1)& (0+255),b
 14376                           
 14377                           ; BSR set to: 2
 14378                           ;LCDgraphic.c: 1421: LATCbits.LATC2=0;
 14379  003950  948B               	bcf	3979,2,c	;volatile
 14380                           
 14381                           ; BSR set to: 2
 14382                           ;LCDgraphic.c: 1422: LATCbits.LATC1=0;
 14383  003952  928B               	bcf	3979,1,c	;volatile
 14384                           
 14385                           ;LCDgraphic.c: 1424: switch(side)
 14386  003954  D008               	goto	l3331
 14387  003956                     l235:
 14388                           
 14389                           ;LCDgraphic.c: 1427: LATEbits.LATE0=1;
 14390  003956  808D               	bsf	3981,0,c	;volatile
 14391                           
 14392                           ;LCDgraphic.c: 1428: LATEbits.LATE1=0;
 14393  003958  928D               	bcf	3981,1,c	;volatile
 14394                           
 14395                           ;LCDgraphic.c: 1429: break;
 14396  00395A  D00F               	goto	l3333
 14397  00395C                     l237:
 14398                           
 14399                           ;LCDgraphic.c: 1432: LATEbits.LATE0=0;
 14400  00395C  908D               	bcf	3981,0,c	;volatile
 14401  00395E  D001               	goto	L22
 14402  003960                     l238:
 14403                           
 14404                           ;LCDgraphic.c: 1437: LATEbits.LATE0=1;
 14405  003960  808D               	bsf	3981,0,c	;volatile
 14406  003962                     L22:
 14407                           
 14408                           ;LCDgraphic.c: 1438: LATEbits.LATE1=1;
 14409  003962  828D               	bsf	3981,1,c	;volatile
 14410                           
 14411                           ;LCDgraphic.c: 1440: }
 14412                           
 14413                           ;LCDgraphic.c: 1439: break;
 14414  003964  D00A               	goto	l3333
 14415  003966                     l3331:
 14416  003966  5006               	movf	LCDpage@side,w,c
 14417                           
 14418                           ; Switch size 1, requested type "space"
 14419                           ; Number of cases is 3, Range of values is 0 to 2
 14420                           ; switch strategies available:
 14421                           ; Name         Instructions Cycles
 14422                           ; simple_byte           10     6 (average)
 14423                           ;	Chosen strategy is simple_byte
 14424  003968  0A00               	xorlw	0	; case 0
 14425  00396A  B4D8               	btfsc	status,2,c
 14426  00396C  D7F4               	goto	l235
 14427  00396E  0A01               	xorlw	1	; case 1
 14428  003970  B4D8               	btfsc	status,2,c
 14429  003972  D7F4               	goto	l237
 14430  003974  0A03               	xorlw	3	; case 2
 14431  003976  B4D8               	btfsc	status,2,c
 14432  003978  D7F3               	goto	l238
 14433  00397A                     l3333:
 14434                           
 14435                           ;LCDgraphic.c: 1442: LCDcmd(0b10111000 | page);
 14436  00397A  5005               	movf	LCDpage@page,w,c
 14437  00397C  09B8               	iorlw	184
 14438  00397E  EC55  F01B         	call	_LCDcmd
 14439  003982  0012               	return	
 14440  003984                     __end_of_LCDpage:
 14441                           	opt stack 0
 14442                           tblptru	equ	0xFF8
 14443                           tblptrh	equ	0xFF7
 14444                           tblptrl	equ	0xFF6
 14445                           tablat	equ	0xFF5
 14446                           prodh	equ	0xFF4
 14447                           prodl	equ	0xFF3
 14448                           postinc0	equ	0xFEE
 14449                           wreg	equ	0xFE8
 14450                           indf1	equ	0xFE7
 14451                           postdec1	equ	0xFE5
 14452                           fsr1h	equ	0xFE2
 14453                           fsr1l	equ	0xFE1
 14454                           indf2	equ	0xFDF
 14455                           postinc2	equ	0xFDE
 14456                           postdec2	equ	0xFDD
 14457                           fsr2h	equ	0xFDA
 14458                           fsr2l	equ	0xFD9
 14459                           status	equ	0xFD8
 14460                           
 14461 ;; *************** function __lcd_waitbusy *****************
 14462 ;; Defined at:
 14463 ;;		line 1387 in file "LCDgraphic.c"
 14464 ;; Parameters:    Size  Location     Type
 14465 ;;		None
 14466 ;; Auto vars:     Size  Location     Type
 14467 ;;		None
 14468 ;; Return value:  Size  Location     Type
 14469 ;;                  1    wreg      void 
 14470 ;; Registers used:
 14471 ;;		wreg, status,2, status,0, cstack
 14472 ;; Tracked objects:
 14473 ;;		On entry : 0/0
 14474 ;;		On exit  : 0/0
 14475 ;;		Unchanged: 0/0
 14476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14477 ;;      Params:         0       0       0       0       0       0       0       0       0
 14478 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14479 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14480 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14481 ;;Total ram usage:        1 bytes
 14482 ;; Hardware stack levels used:    1
 14483 ;; Hardware stack levels required when called:    2
 14484 ;; This function calls:
 14485 ;;		__lcd_status
 14486 ;; This function is called by:
 14487 ;;		_LCDpage
 14488 ;;		_LCDon
 14489 ;;		_LCDy
 14490 ;;		_LCDchar
 14491 ;;		_LCDclear
 14492 ;;		_LCDstring
 14493 ;; This function uses a non-reentrant model
 14494 ;;
 14495                           
 14496                           	psect	text37
 14497  0036C4                     __ptext37:
 14498                           	opt stack 0
 14499  0036C4                     __lcd_waitbusy:
 14500                           	opt stack 25
 14501  0036C4                     l3315:
 14502  0036C4  ECC2  F01C         	call	__lcd_status	;wreg free
 14503  0036C8  6E04               	movwf	??__lcd_waitbusy& (0+255),c
 14504  0036CA  0E90               	movlw	144
 14505  0036CC  1604               	andwf	??__lcd_waitbusy,f,c
 14506  0036CE  B4D8               	btfsc	status,2,c
 14507  0036D0  0012               	return	
 14508  0036D2  D7F8               	goto	l3315
 14509  0036D4                     __end_of__lcd_waitbusy:
 14510                           	opt stack 0
 14511                           tblptru	equ	0xFF8
 14512                           tblptrh	equ	0xFF7
 14513                           tblptrl	equ	0xFF6
 14514                           tablat	equ	0xFF5
 14515                           prodh	equ	0xFF4
 14516                           prodl	equ	0xFF3
 14517                           postinc0	equ	0xFEE
 14518                           wreg	equ	0xFE8
 14519                           indf1	equ	0xFE7
 14520                           postdec1	equ	0xFE5
 14521                           fsr1h	equ	0xFE2
 14522                           fsr1l	equ	0xFE1
 14523                           indf2	equ	0xFDF
 14524                           postinc2	equ	0xFDE
 14525                           postdec2	equ	0xFDD
 14526                           fsr2h	equ	0xFDA
 14527                           fsr2l	equ	0xFD9
 14528                           status	equ	0xFD8
 14529                           
 14530 ;; *************** function __lcd_status *****************
 14531 ;; Defined at:
 14532 ;;		line 1289 in file "LCDgraphic.c"
 14533 ;; Parameters:    Size  Location     Type
 14534 ;;		None
 14535 ;; Auto vars:     Size  Location     Type
 14536 ;;  cs2             1    2[COMRAM] unsigned char 
 14537 ;;  cs1             1    1[COMRAM] unsigned char 
 14538 ;;  status          1    0[COMRAM] unsigned char 
 14539 ;; Return value:  Size  Location     Type
 14540 ;;                  1    wreg      unsigned char 
 14541 ;; Registers used:
 14542 ;;		wreg, status,2, cstack
 14543 ;; Tracked objects:
 14544 ;;		On entry : 0/0
 14545 ;;		On exit  : 0/0
 14546 ;;		Unchanged: 0/0
 14547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14548 ;;      Params:         0       0       0       0       0       0       0       0       0
 14549 ;;      Locals:         3       0       0       0       0       0       0       0       0
 14550 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14551 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14552 ;;Total ram usage:        3 bytes
 14553 ;; Hardware stack levels used:    1
 14554 ;; Hardware stack levels required when called:    1
 14555 ;; This function calls:
 14556 ;;		__lcd_enable
 14557 ;; This function is called by:
 14558 ;;		_LCDinit
 14559 ;;		_LCDreset
 14560 ;;		__lcd_waitbusy
 14561 ;; This function uses a non-reentrant model
 14562 ;;
 14563                           
 14564                           	psect	text38
 14565  003984                     __ptext38:
 14566                           	opt stack 0
 14567  003984                     __lcd_status:
 14568                           	opt stack 25
 14569                           
 14570                           ;LCDgraphic.c: 1291: unsigned char status;
 14571                           ;LCDgraphic.c: 1293: unsigned char cs1, cs2;
 14572                           ;LCDgraphic.c: 1294: cs1 = LATEbits.LATE0;
 14573                           
 14574                           ;incstack = 0
 14575  003984  0E00               	movlw	0
 14576  003986  B08D               	btfsc	3981,0,c	;volatile
 14577  003988  0E01               	movlw	1
 14578  00398A  6E02               	movwf	__lcd_status@cs1,c
 14579                           
 14580                           ;LCDgraphic.c: 1295: cs2 = LATEbits.LATE1;
 14581  00398C  0E00               	movlw	0
 14582  00398E  B28D               	btfsc	3981,1,c	;volatile
 14583  003990  0E01               	movlw	1
 14584  003992  6E03               	movwf	__lcd_status@cs2,c
 14585                           
 14586                           ;LCDgraphic.c: 1298: PORTD = 0x00;
 14587  003994  0E00               	movlw	0
 14588  003996  6E83               	movwf	3971,c	;volatile
 14589                           
 14590                           ;LCDgraphic.c: 1300: TRISD = 0xFF;
 14591  003998  6895               	setf	3989,c	;volatile
 14592                           
 14593                           ;LCDgraphic.c: 1303: LATCbits.LATC2=0; LATCbits.LATC1=1; LATEbits.LATE0 = 1; LATEbits.LA
      +                          TE1 = 1;
 14594  00399A  948B               	bcf	3979,2,c	;volatile
 14595  00399C  828B               	bsf	3979,1,c	;volatile
 14596  00399E  808D               	bsf	3981,0,c	;volatile
 14597  0039A0  828D               	bsf	3981,1,c	;volatile
 14598                           
 14599                           ;LCDgraphic.c: 1304: _delay((unsigned long)((1)*(40000000/4000000.0)));
 14600  0039A2  0E03               	movlw	3
 14601  0039A4                     u6227:
 14602  0039A4  2EE8               	decfsz	wreg,f,c
 14603  0039A6  D7FE               	goto	u6227
 14604  0039A8  F000               	nop	
 14605                           
 14606                           ;LCDgraphic.c: 1307: _lcd_enable();
 14607  0039AA  EC5B  F01B         	call	__lcd_enable	;wreg free
 14608                           
 14609                           ;LCDgraphic.c: 1308: _lcd_enable();
 14610  0039AE  EC5B  F01B         	call	__lcd_enable	;wreg free
 14611                           
 14612                           ;LCDgraphic.c: 1311: status = PORTD;
 14613  0039B2  CF83 F001          	movff	3971,__lcd_status@status	;volatile
 14614                           
 14615                           ;LCDgraphic.c: 1314: LATCbits.LATC1 = 0; LATEbits.LATE0 = cs1; LATEbits.LATE1 = cs2;
 14616  0039B6  928B               	bcf	3979,1,c	;volatile
 14617  0039B8  B002               	btfsc	__lcd_status@cs1,0,c
 14618  0039BA  D002               	bra	u3105
 14619  0039BC  908D               	bcf	3981,0,c	;volatile
 14620  0039BE  D001               	bra	u3106
 14621  0039C0                     u3105:
 14622  0039C0  808D               	bsf	3981,0,c	;volatile
 14623  0039C2                     u3106:
 14624  0039C2  B003               	btfsc	__lcd_status@cs2,0,c
 14625  0039C4  D002               	bra	u3115
 14626  0039C6  928D               	bcf	3981,1,c	;volatile
 14627  0039C8  D001               	bra	u3116
 14628  0039CA                     u3115:
 14629  0039CA  828D               	bsf	3981,1,c	;volatile
 14630  0039CC                     u3116:
 14631                           
 14632                           ;LCDgraphic.c: 1318: _delay((unsigned long)((10)*(40000000/4000000.0)));
 14633  0039CC  0E21               	movlw	33
 14634  0039CE                     u6237:
 14635  0039CE  2EE8               	decfsz	wreg,f,c
 14636  0039D0  D7FE               	goto	u6237
 14637  0039D2  F000               	nop	
 14638                           
 14639                           ;LCDgraphic.c: 1321: TRISD = 0x00;
 14640  0039D4  0E00               	movlw	0
 14641  0039D6  6E95               	movwf	3989,c	;volatile
 14642                           
 14643                           ;LCDgraphic.c: 1323: return status;
 14644  0039D8  5001               	movf	__lcd_status@status,w,c
 14645  0039DA  0012               	return	
 14646  0039DC                     __end_of__lcd_status:
 14647                           	opt stack 0
 14648                           tblptru	equ	0xFF8
 14649                           tblptrh	equ	0xFF7
 14650                           tblptrl	equ	0xFF6
 14651                           tablat	equ	0xFF5
 14652                           prodh	equ	0xFF4
 14653                           prodl	equ	0xFF3
 14654                           postinc0	equ	0xFEE
 14655                           wreg	equ	0xFE8
 14656                           indf1	equ	0xFE7
 14657                           postdec1	equ	0xFE5
 14658                           fsr1h	equ	0xFE2
 14659                           fsr1l	equ	0xFE1
 14660                           indf2	equ	0xFDF
 14661                           postinc2	equ	0xFDE
 14662                           postdec2	equ	0xFDD
 14663                           fsr2h	equ	0xFDA
 14664                           fsr2l	equ	0xFD9
 14665                           status	equ	0xFD8
 14666                           
 14667 ;; *************** function _LCDcmd *****************
 14668 ;; Defined at:
 14669 ;;		line 1340 in file "LCDgraphic.c"
 14670 ;; Parameters:    Size  Location     Type
 14671 ;;  data            1    wreg     unsigned char 
 14672 ;; Auto vars:     Size  Location     Type
 14673 ;;  data            1    0[COMRAM] unsigned char 
 14674 ;; Return value:  Size  Location     Type
 14675 ;;                  1    wreg      void 
 14676 ;; Registers used:
 14677 ;;		wreg, cstack
 14678 ;; Tracked objects:
 14679 ;;		On entry : 0/0
 14680 ;;		On exit  : 0/0
 14681 ;;		Unchanged: 0/0
 14682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14683 ;;      Params:         0       0       0       0       0       0       0       0       0
 14684 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14685 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14686 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14687 ;;Total ram usage:        1 bytes
 14688 ;; Hardware stack levels used:    1
 14689 ;; Hardware stack levels required when called:    1
 14690 ;; This function calls:
 14691 ;;		__lcd_enable
 14692 ;; This function is called by:
 14693 ;;		_LCDpage
 14694 ;;		_LCDon
 14695 ;;		_LCDy
 14696 ;;		_emptycolumn
 14697 ;;		_LCDchar
 14698 ;;		_lcdplotpixel2
 14699 ;;		_write
 14700 ;;		_LCDstartline
 14701 ;; This function uses a non-reentrant model
 14702 ;;
 14703                           
 14704                           	psect	text39
 14705  0036AA                     __ptext39:
 14706                           	opt stack 0
 14707  0036AA                     _LCDcmd:
 14708                           	opt stack 26
 14709                           
 14710                           ;incstack = 0
 14711                           ;LCDcmd@data stored from wreg
 14712  0036AA  6E01               	movwf	LCDcmd@data,c
 14713                           
 14714                           ;LCDgraphic.c: 1343: PORTD = data;
 14715  0036AC  C001  FF83         	movff	LCDcmd@data,3971	;volatile
 14716                           
 14717                           ;LCDgraphic.c: 1345: _lcd_enable();
 14718  0036B0  EC5B  F01B         	call	__lcd_enable	;wreg free
 14719  0036B4  0012               	return		;funcret
 14720  0036B6                     __end_of_LCDcmd:
 14721                           	opt stack 0
 14722                           tblptru	equ	0xFF8
 14723                           tblptrh	equ	0xFF7
 14724                           tblptrl	equ	0xFF6
 14725                           tablat	equ	0xFF5
 14726                           prodh	equ	0xFF4
 14727                           prodl	equ	0xFF3
 14728                           postinc0	equ	0xFEE
 14729                           wreg	equ	0xFE8
 14730                           indf1	equ	0xFE7
 14731                           postdec1	equ	0xFE5
 14732                           fsr1h	equ	0xFE2
 14733                           fsr1l	equ	0xFE1
 14734                           indf2	equ	0xFDF
 14735                           postinc2	equ	0xFDE
 14736                           postdec2	equ	0xFDD
 14737                           fsr2h	equ	0xFDA
 14738                           fsr2l	equ	0xFD9
 14739                           status	equ	0xFD8
 14740                           
 14741 ;; *************** function __lcd_enable *****************
 14742 ;; Defined at:
 14743 ;;		line 1195 in file "LCDgraphic.c"
 14744 ;; Parameters:    Size  Location     Type
 14745 ;;		None
 14746 ;; Auto vars:     Size  Location     Type
 14747 ;;		None
 14748 ;; Return value:  Size  Location     Type
 14749 ;;                  1    wreg      void 
 14750 ;; Registers used:
 14751 ;;		wreg
 14752 ;; Tracked objects:
 14753 ;;		On entry : 0/0
 14754 ;;		On exit  : 0/0
 14755 ;;		Unchanged: 0/0
 14756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14757 ;;      Params:         0       0       0       0       0       0       0       0       0
 14758 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14760 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14761 ;;Total ram usage:        0 bytes
 14762 ;; Hardware stack levels used:    1
 14763 ;; This function calls:
 14764 ;;		Nothing
 14765 ;; This function is called by:
 14766 ;;		__lcd_status
 14767 ;;		_LCDcmd
 14768 ;; This function uses a non-reentrant model
 14769 ;;
 14770                           
 14771                           	psect	text40
 14772  0036B6                     __ptext40:
 14773                           	opt stack 0
 14774  0036B6                     __lcd_enable:
 14775                           	opt stack 25
 14776                           
 14777                           ;LCDgraphic.c: 1197: LATCbits.LATC0 = 1;
 14778                           
 14779                           ;incstack = 0
 14780  0036B6  808B               	bsf	3979,0,c	;volatile
 14781                           
 14782                           ;LCDgraphic.c: 1198: _delay((unsigned long)((2)*(40000000/4000000.0)));
 14783  0036B8  0E06               	movlw	6
 14784  0036BA                     u6247:
 14785  0036BA  2EE8               	decfsz	wreg,f,c
 14786  0036BC  D7FE               	goto	u6247
 14787  0036BE  D000               	nop2		;nop
 14788                           
 14789                           ;LCDgraphic.c: 1199: LATCbits.LATC0 = 0;
 14790  0036C0  908B               	bcf	3979,0,c	;volatile
 14791  0036C2  0012               	return		;funcret
 14792  0036C4                     __end_of__lcd_enable:
 14793                           	opt stack 0
 14794                           tblptru	equ	0xFF8
 14795                           tblptrh	equ	0xFF7
 14796                           tblptrl	equ	0xFF6
 14797                           tablat	equ	0xFF5
 14798                           prodh	equ	0xFF4
 14799                           prodl	equ	0xFF3
 14800                           postinc0	equ	0xFEE
 14801                           wreg	equ	0xFE8
 14802                           indf1	equ	0xFE7
 14803                           postdec1	equ	0xFE5
 14804                           fsr1h	equ	0xFE2
 14805                           fsr1l	equ	0xFE1
 14806                           indf2	equ	0xFDF
 14807                           postinc2	equ	0xFDE
 14808                           postdec2	equ	0xFDD
 14809                           fsr2h	equ	0xFDA
 14810                           fsr2l	equ	0xFD9
 14811                           status	equ	0xFD8
 14812                           tblptru	equ	0xFF8
 14813                           tblptrh	equ	0xFF7
 14814                           tblptrl	equ	0xFF6
 14815                           tablat	equ	0xFF5
 14816                           prodh	equ	0xFF4
 14817                           prodl	equ	0xFF3
 14818                           postinc0	equ	0xFEE
 14819                           wreg	equ	0xFE8
 14820                           indf1	equ	0xFE7
 14821                           postdec1	equ	0xFE5
 14822                           fsr1h	equ	0xFE2
 14823                           fsr1l	equ	0xFE1
 14824                           indf2	equ	0xFDF
 14825                           postinc2	equ	0xFDE
 14826                           postdec2	equ	0xFDD
 14827                           fsr2h	equ	0xFDA
 14828                           fsr2l	equ	0xFD9
 14829                           status	equ	0xFD8
 14830                           
 14831                           	psect	rparam
 14832  0000                     tblptru	equ	0xFF8
 14833                           tblptrh	equ	0xFF7
 14834                           tblptrl	equ	0xFF6
 14835                           tablat	equ	0xFF5
 14836                           prodh	equ	0xFF4
 14837                           prodl	equ	0xFF3
 14838                           postinc0	equ	0xFEE
 14839                           wreg	equ	0xFE8
 14840                           indf1	equ	0xFE7
 14841                           postdec1	equ	0xFE5
 14842                           fsr1h	equ	0xFE2
 14843                           fsr1l	equ	0xFE1
 14844                           indf2	equ	0xFDF
 14845                           postinc2	equ	0xFDE
 14846                           postdec2	equ	0xFDD
 14847                           fsr2h	equ	0xFDA
 14848                           fsr2l	equ	0xFD9
 14849                           status	equ	0xFD8


Data Sizes:
    Strings     82
    Constant    1641
    Data        0
    BSS         1033
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    160     160
    BANK1           256    256     256
    BANK2           256     65      73
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 40
		 -> main@buf2(BANK0[17]), main@buf_384(BANK0[40]), main@buf_371(BANK0[10]), main@buf(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 40
		 -> main@buf2(BANK0[17]), main@buf_384(BANK0[40]), main@buf_371(BANK0[10]), main@buf(BANK0[10]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 17
		 -> main@buf2(BANK0[17]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf_384(BANK0[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf_384(BANK0[40]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_12(CODE[9]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[10]), 
		 -> STR_8(CODE[10]), STR_7(CODE[3]), STR_6(CODE[6]), STR_5(CODE[6]), 
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf2(BANK0[17]), main@buf_384(BANK0[40]), main@str(BANK0[15]), main@buf_371(BANK0[10]), 
		 -> main@buf(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    LCDstring@buffer	PTR const unsigned char  size(2) Largest target is 40
		 -> main@buf2(BANK0[17]), main@buf_384(BANK0[40]), main@buf_371(BANK0[10]), main@buf(BANK0[10]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf_384(BANK0[40]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _xyaxis->_lcdplotpixel2
    _lcdplotpixel2->___awdiv
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___awtoft
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftadd
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___lwtoft->___ftpack
    ___ftdiv->___awtoft
    ___awtoft->___wmul
    _LCDstring->_LCDchar
    _emptycolumn->_LCDcmd
    ___awdiv->___awmod
    _LCDinit->_LCDclear
    _LCDreset->__lcd_status
    _LCDon->__lcd_waitbusy
    _LCDclear->_LCDchar
    _LCDchar->___wmul
    ___wmul->___awdiv
    _LCDy->__lcd_waitbusy
    _LCDpage->__lcd_waitbusy
    __lcd_waitbusy->__lcd_status

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               507   507      0  175453
                                             89 COMRAM     6     6      0
                                             25 BANK0    135   135      0
                                              0 BANK1    256   256      0
                                              0 BANK2     65    65      0
                           _LCDclear
                            _LCDinit
                            _LCDpage
                          _LCDstring
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                             ___wmul
                                _abs
                      _lcdplotpixel2
                            _sprintf
                             _strcat
                             _xyaxis
 ---------------------------------------------------------------------------------
 (1) _xyaxis                                               4     4      0   10726
                                             37 COMRAM     4     4      0
                      _lcdplotpixel2
 ---------------------------------------------------------------------------------
 (2) _lcdplotpixel2                                       23    20      3   10590
                                             14 COMRAM    23    20      3
                             _LCDcmd
                            _LCDpage
                               _LCDy
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _strcat                                               6     2      4     226
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             44    37      7   67988
                                             76 COMRAM    13     6      7
                                              0 BANK0     25    25      0
                            ___awdiv
                            ___ftadd
                            ___ftdiv (ARG)
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   16748
                                             39 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   16550
                                             39 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    8464
                                             24 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     431
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     574
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2281
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     671
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     546
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     956
                                             61 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4667
                                             61 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4370
                                             49 COMRAM    12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1032
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     322
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2810
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2914
                                             24 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2559
                                             20 COMRAM     4     1      3
                           ___ftpack
                             ___wmul (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2148
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _LCDstring                                           24    22      2   20772
                                             32 COMRAM    20    18      2
                            _LCDchar
                            _LCDpage
                               _LCDy
                            ___awdiv
                             ___wmul
                      __lcd_waitbusy
                        _emptycolumn
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     154
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _emptycolumn                                          2     2      0      22
                                              1 COMRAM     2     2      0
                             _LCDcmd
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              3     3      0   13040
                                             38 COMRAM     3     3      0
                           _LCDclear
                              _LCDon
                           _LCDreset
                        __lcd_status
 ---------------------------------------------------------------------------------
 (2) _LCDreset                                             1     1      0      69
                                              3 COMRAM     1     1      0
                        __lcd_status
 ---------------------------------------------------------------------------------
 (2) _LCDon                                                1     1      0     113
                                              4 COMRAM     1     1      0
                             _LCDcmd
                      __lcd_waitbusy
 ---------------------------------------------------------------------------------
 (2) _LCDclear                                             6     6      0   12743
                                             32 COMRAM     6     6      0
                            _LCDchar
                            _LCDpage
                               _LCDy
                      __lcd_waitbusy
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                             12    11      1    9166
                                             20 COMRAM    12    11      1
                             _LCDcmd
                            _LCDpage
                               _LCDy
                             ___wmul
                      __lcd_waitbusy
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    3743
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCDy                                                 2     1      1    1375
                                              4 COMRAM     2     1      1
                             _LCDcmd
                      __lcd_waitbusy
 ---------------------------------------------------------------------------------
 (3) _LCDpage                                              2     1      1    1929
                                              4 COMRAM     2     1      1
                             _LCDcmd
                      __lcd_waitbusy
 ---------------------------------------------------------------------------------
 (4) __lcd_waitbusy                                        1     1      0      69
                                              3 COMRAM     1     1      0
                        __lcd_status
 ---------------------------------------------------------------------------------
 (5) __lcd_status                                          3     3      0      69
                                              0 COMRAM     3     3      0
                        __lcd_enable
 ---------------------------------------------------------------------------------
 (4) _LCDcmd                                               1     1      0      22
                                              0 COMRAM     1     1      0
                        __lcd_enable
 ---------------------------------------------------------------------------------
 (6) __lcd_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDclear
     _LCDchar
       _LCDcmd
         __lcd_enable
       _LCDpage
         _LCDcmd
           __lcd_enable
         __lcd_waitbusy
           __lcd_status
             __lcd_enable
       _LCDy
         _LCDcmd
           __lcd_enable
         __lcd_waitbusy
           __lcd_status
             __lcd_enable
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __lcd_waitbusy
         __lcd_status
           __lcd_enable
     _LCDpage
       _LCDcmd
         __lcd_enable
       __lcd_waitbusy
         __lcd_status
           __lcd_enable
     _LCDy
       _LCDcmd
         __lcd_enable
       __lcd_waitbusy
         __lcd_status
           __lcd_enable
     __lcd_waitbusy
       __lcd_status
         __lcd_enable
   _LCDinit
     _LCDclear
       _LCDchar
         _LCDcmd
           __lcd_enable
         _LCDpage
           _LCDcmd
             __lcd_enable
           __lcd_waitbusy
             __lcd_status
               __lcd_enable
         _LCDy
           _LCDcmd
             __lcd_enable
           __lcd_waitbusy
             __lcd_status
               __lcd_enable
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __lcd_waitbusy
           __lcd_status
             __lcd_enable
       _LCDpage
         _LCDcmd
           __lcd_enable
         __lcd_waitbusy
           __lcd_status
             __lcd_enable
       _LCDy
         _LCDcmd
           __lcd_enable
         __lcd_waitbusy
           __lcd_status
             __lcd_enable
       __lcd_waitbusy
         __lcd_status
           __lcd_enable
     _LCDon
       _LCDcmd
         __lcd_enable
       __lcd_waitbusy
         __lcd_status
           __lcd_enable
     _LCDreset
       __lcd_status
         __lcd_enable
     __lcd_status
       __lcd_enable
   _LCDpage
     _LCDcmd
       __lcd_enable
     __lcd_waitbusy
       __lcd_status
         __lcd_enable
   _LCDstring
     _LCDchar
       _LCDcmd
         __lcd_enable
       _LCDpage
         _LCDcmd
           __lcd_enable
         __lcd_waitbusy
           __lcd_status
             __lcd_enable
       _LCDy
         _LCDcmd
           __lcd_enable
         __lcd_waitbusy
           __lcd_status
             __lcd_enable
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __lcd_waitbusy
         __lcd_status
           __lcd_enable
     _LCDpage
       _LCDcmd
         __lcd_enable
       __lcd_waitbusy
         __lcd_status
           __lcd_enable
     _LCDy
       _LCDcmd
         __lcd_enable
       __lcd_waitbusy
         __lcd_status
           __lcd_enable
     ___awdiv
       ___awmod (ARG)
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __lcd_waitbusy
       __lcd_status
         __lcd_enable
     _emptycolumn
       _LCDcmd
         __lcd_enable
     _strlen
   ___awdiv
     ___awmod (ARG)
   ___awtoft
     ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     _abs (ARG)
   ___ftadd
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _abs (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _abs (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _abs (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _abs (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _abs (ARG)
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _abs (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     _abs (ARG)
   ___fttol
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _abs (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _abs (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _abs (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _abs (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _abs (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _abs (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _abs (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _abs (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___lwtoft
     ___ftpack
   ___wmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
   _abs
   _lcdplotpixel2
     _LCDcmd
       __lcd_enable
     _LCDpage
       _LCDcmd
         __lcd_enable
       __lcd_waitbusy
         __lcd_status
           __lcd_enable
     _LCDy
       _LCDcmd
         __lcd_enable
       __lcd_waitbusy
         __lcd_status
           __lcd_enable
     ___awdiv
       ___awmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _abs (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _abs (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _abs (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _abs (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _abs (ARG)
       ___ftpack (ARG)
     ___ftge (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _abs (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _abs (ARG)
     ___ftneg (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _abs (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _abs (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _abs (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _abs (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _abs (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _abs (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _abs (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _abs (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _abs (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _abs (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _abs (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___lltoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _abs (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _abs (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _abs (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _abs (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _strcat
   _xyaxis
     _lcdplotpixel2
       _LCDcmd
         __lcd_enable
       _LCDpage
         _LCDcmd
           __lcd_enable
         __lcd_waitbusy
           __lcd_status
             __lcd_enable
       _LCDy
         _LCDcmd
           __lcd_enable
         __lcd_waitbusy
           __lcd_status
             __lcd_enable
       ___awdiv
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     401      21       50.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     41      49       9       28.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     248      20        0.0%
DATA                 0      0     649       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri May 27 19:48:20 2016

                        l54 37C2                          l63 643C                          l72 66F8  
                        l81 6900                          l65 66DE                          l77 68B8  
                        l86 6AC0                          l78 688A                          l87 6A92  
              ___awdiv@sign 000C         ___wmul@multiplicand 0011                ___ftadd@exp1 003D  
              ___ftadd@exp2 003C                ___ftadd@sign 003B                         l100 6DC0  
                       l105 6FA0                         l122 7322                         l114 71CC  
                       l106 6F74                         l131 7458                         l115 71A0  
                       l125 7384                         l109 6FEC                         l128 73EE  
                       l235 3956                         l251 3A06                         l237 395C  
                       l253 3A0C                         l238 3960                         l254 3A10  
                       l246 39EC                         l280 532A                         l451 5F34  
                       l289 3CFA                         l723 3EB6                         l820 3770  
                       l750 46F8                         l761 47A8                         l770 47C4  
                       l746 46CE                         l691 42BA                         l781 3F8A  
                       l870 3BD6                         l880 3AE4                         l795 43EC  
                       l788 435E                         l789 4386          lcdplotpixel2@F4573 7FA3  
                       _abs 37A4                         _pic 7D43                ___awmod@sign 0006  
                       prod 000FF3                         wreg 000FE8                __CFG_FOSC$HS 000000  
               main@buf_371 00D1                 main@buf_384 0079                __CFG_LVP$OFF 000000  
              ___ftdiv@cntr 0022             __end_of_LCDchar 532C                ___ftdiv@sign 0027  
              __CFG_WDT$OFF 000000                        ?_abs 0001                        l4031 4290  
                      l4015 4252                        l4007 4222                        l3321 3944  
                      l3401 4E80                        l4113 409E                        l4105 4076  
                      l3315 36C4                        l3331 3966                        l4107 4082  
                      l4123 3B88                        l4027 4280                        l4203 4586  
                      l5003 6C1A                        l3333 397A                        l3405 4EB0  
                      l4053 3D2C                        l4045 387E                        l4109 4088  
                      l4125 3B94                        l4037 42A8                        l4301 5BC2  
                      l4213 58C0                        l5021 6D3E                        l3351 3A2A  
                      l3511 5286                        l4063 3D88                        l4135 3BC8  
                      l4127 3B98                        l4151 3AD6                        l4143 3AA2  
                      l4039 42B4                        l4303 5BD8                        l5031 6D90  
                      l3441 4FEE                        l3417 4F00                        l4057 3D5C  
                      l4145 3AAE                        l3601 40D8                        l4401 5FB8  
                      l4313 5C60                        l4305 5C08                        l4225 5910  
                      l4233 5970                        l4209 459E                        l5009 6C3E  
           __end_of_LCDpage 3984                        l3507 5276                        l3451 5080  
                      l3427 4F92                        l3523 530E                        l4171 38F2  
                      l3371 3E50                        l4147 3AB2                        l4411 609C  
                      l4331 5D4A                        l4307 5C1E                        l4251 59FC  
                      l4243 59D0                        l4219 58DE                        l5123 71DE  
                      l5027 6D7C                        l5035 6DA6                        l3349 3A16  
                      l3461 50C8                        l3381 3EAC                        l3373 3E6E  
                      l3365 3E38                        l3533 46DC                        l4077 3FE8  
                      l4157 3A3A                        l3621 4132                        l4413 60AA  
                      l4333 5D50                        l4317 5C86                        l4421 60D0  
                      l4245 59E6                        l5141 72C8                        l5133 720E  
                      l5109 713A                        l5061 6F0E                        l4175 3902  
                      l4095 404E                        l4159 3A46                        l3711 3B44  
                      l3703 3B24                        l3631 415A                        l3607 4100  
                      l4431 611E                        l4327 5CE4                        l4263 5A4C  
                      l4255 5A04                        l4239 5996                        l4191 4556  
                      l5215 7582                        l5143 72E8                        l5127 71F4  
                      l5135 7212                        l5151 730E          lcdplotpixel2@blank 0010  
                      l3465 50D8                        l3801 3CF4                        l4601 5560  
                      l4513 5378                        l3377 3E84                        l3369 3E46  
                      l3561 4758                        l3705 3B2C                        l3625 4142  
                      l4433 6124                        l4361 5E1E                        l4353 5DF2  
                      l4345 5D96                        l4273 5A92                        l4257 5A32  
                      l4249 59F6                        l5217 75A2                        l5153 731C  
                      l3475 5160                        l4179 3916                        l3651 3BFC  
                      l4611 55BC                        l4603 5576                        l4531 53CE  
                      l4515 5382                        l4523 53A0                        l3379 3EA2  
                      l3563 4762                        l3555 4736                        l3539 4706  
                      l4099 405E                        l3707 3B30                        l3715 3B4E  
                      l3635 416A                        l4419 60C2                        l3731 4426  
                      l4187 4546                        l5251 7772                        l5227 75CE  
                      l5075 6FB2                        l5147 7300                        l3813 3702  
                      l4541 53EE                        l4525 53B6                        l3581 47E0  
                      l3573 4796                        l3565 476C                        l4453 61BA  
                      l4445 616A                        l4365 5E42                        l4357 5E02  
                      l4349 5DD8                        l4197 456E                        l5245 773C  
                      l5173 73D8                        l5085 6FE2                        l3487 5194  
                      l3663 3C22                        l4703 57C0                        l4711 57DE  
                      l4527 53BE                        l3591 4810                        l3575 47A0  
                      l3567 4774                        l3719 3B5C                        l3903 4DA4  
                      l4471 6258                        l4383 5F02                        l4367 5E48  
                      l4375 5EDC                        l4359 5E0A                        l4199 4576  
                      l5255 7848                        l5239 76E6                        l5079 6FC8  
                      l5087 6FE6                        l3497 5226             __end_of_LCDinit 3934  
                      l3665 3C2A                        l3657 3C0C                        l4633 5630  
                      l4641 564E                        l4553 542C                        l4561 544A  
                      l3921 36EA                        l4481 6292                        l4473 6262  
                      l4465 621A                        l4449 618E                        l4385 5F16  
                      l4377 5EEA                        l4297 5B9C                        l4289 5B34  
                      l3753 44F6                        l5273 791C                        l5249 775C  
                      l5185 7444                        l5193 7462                        l3683 3C62  
                      l3675 3C4A                        l3667 3C2E                        l4619 55DA  
                      l4643 5662                        l4563 545E                        l4811 380A  
                      l3931 42F8                        l4491 633C                        l4475 626E  
                      l4467 6224                        l4459 61E6                        l5259 7890  
                      l3781 3CA4                        l3773 3C86                        l3829 372E  
                      l3837 3DC0                        l3845 3838                        l4725 584C  
                      l4733 586A                        l3909 4E48                        l4493 6340  
                      l4397 5F66                        l4389 5F38                        l3749 44DC  
                      l3679 3C54                        l3847 383C                        l4655 56C0  
                      l4663 56DE                        l4647 567A                        l4735 587E  
                      l3695 3B0A                        l3871 4A3C                        l3863 497C  
                      l4487 62B8                        l4495 6356                        l4751 38B6  
                      l3793 3CD6                        l3785 3CB4                        l3769 3C78  
                      l4745 58A0                        l4665 56F4                        l4593 5542  
                      l3937 4324                        l4497 6372                        l4753 38C6  
                      l3779 3C9C                        l4739 5886                        l4683 574A  
                      l4579 54F2                        l4587 5510                        l4763 3EFE  
                      l3971 43C2                        l3699 3B16                        l3891 4C54  
                      l4755 38CE                        l3789 3CC6                        l4693 576A  
                      l3885 4BB0                        l4749 38B2                        l4933 68E0  
                      l4909 6774                        l4861 6458                        l4853 6400  
                      l4679 573A                        l3967 43B2                        l3895 4C78  
                      l4769 3F26                        l3993 41E0                        l3977 43DA  
                      l4929 68CA                        l4873 660E                        l3987 41C2  
                      l3979 43E6                        l4955 697C                        l4939 68FA  
                      l4883 6674                        l4789 3F64                        l4893 66CC  
                      l4877 6624                        l4975 6AD2                        l4993 6BA0  
                      l4985 6B02                        l4889 66C4                        l4979 6AE8  
                      l4987 6B06                        l4997 6BE8                        l4999 6C02  
                      STR_1 7FEF                        STR_2 7FDA                        STR_3 7FE1  
                      STR_4 7FE8                        STR_5 7FF5                        STR_6 7FF5  
                      STR_7 7FFB                        STR_8 7FAC                        STR_9 7FB6  
                      u3105 39C0                        u3106 39C2                        u3115 39CA  
                      u3116 39CC                        u3310 4FEC                        u3320 507E  
                      u3305 4FB0                        u3411 469A                        u3421 46AE  
                      u4061 42DC                        u3335 509E          lcdplotpixel2@index 0023  
                      u3360 5192                        u3280 4EFE                        u6000 793E  
                      u3265 4E96                        u4081 4308                        u3370 5224  
                      u3290 4F90                        u3275 4EBA                        u3621 40C0  
                      u4271 3FCC                        u3800 440E                        u3385 5244  
                      u5241 3EE6                        u3641 40E8                        u5170 577A  
                      u4290 4006                        u5410 6750                        u5500 6958  
                      u5420 6772                        u5261 3F0E                        _LCDy 39DC  
                      u3830 44B6                        u5510 697A                        u5430 684C  
                      u5350 664E                        u6207 3908                        u4295 3FFE  
                      u5520 6A54                        u6217 36FA                        u3825 4492  
                      u5610 6C3C                        u5450 6870                        u5370 669E  
                      u6227 39A4                        u5700 6F38                        u5620 6D16  
                      u5540 6A78                        u5460 68B8                        u6237 39CE  
                      u4590 5AD2                        u5550 6AC0                        u6247 36BA  
                      u5720 6F5C                        u5640 6D54                        u3945 3DA6  
                      u5810 7188                        u5730 6FA0                        u3955 3DCA  
                      u4595 5AC8                        u4780 5F2C                        u5820 71CC  
                      u6197 7922                        u5920 7458                        u5680 6E18  
                      u5770 7044                        u5790 7164                        u5990 7918  
        lcdplotpixel2@pixel 001F          lcdplotpixel2@value 0020                        abs@a 0001  
                      _main 6380                ___ftpack@arg 0001        __size_of__lcd_enable 000E  
              ___ftpack@exp 0004                        fsr1h 000FE2                        fsr2h 000FDA  
                      indf1 000FE7                        fsr1l 000FE1                        indf2 000FDF  
                      fsr2l 000FD9                        prodh 000FF4                        prodl 000FF3  
                      start 0000                _sprintf$1215 0060        __size_of__lcd_status 0058  
              ___ftmul@cntr 0026                ___param_bank 000010                ___ftmul@sign 0027  
              ?_emptycolumn 0001                ___fttol@exp1 004C                       ??_abs 0003  
              ___fttol@lval 0048          __size_of_LCDstring 0584                       ?_LCDy 0005  
          __end_of_LCDclear 3CFC                       ?_main 0001             __end_of___awdiv 3C6C  
           __end_of___ftadd 4836                       STR_10 7FD2                       STR_11 7FC0  
                     STR_12 7FC9             __end_of___awmod 3B66             __end_of___ftdiv 3FBC  
          __end_of_LCDreset 3712             __end_of___ftneg 377E             __end_of___lldiv 3BE8  
           __end_of___ftmul 41A4             ___awdiv@divisor 0009             __end_of___llmod 3AF6  
           __end_of___ftsub 38A8             __end_of___fttol 40B0                       _LCDon 3712  
           ___awdiv@counter 000B                       _PORTC 000F82                       _PORTD 000F83  
                     _PORTE 000F84                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
           LCDchar@position 0015                ___lltoft@exp 0011               _lcdplotpixel2 43FE  
             ___awtoft@sign 0018             __end_of_dpowers 7F55                       _image 7943  
                     _scale 4A7C             __end_of_isdigit 36F2               ___ftpack@sign 0005  
                     main@a 022E                       main@i 020E                       main@j 00F8  
                     main@y 00DD                       tablat 000FF5                       status 000FD8  
           __end_of_sprintf 6380                __end_of_LCDy 3A34             __initialization 37CC  
              __end_of_main 7942                      ??_LCDy 0006               main@delta_370 0203  
                    ??_main 005A               ___fttol@sign1 0047               __activetblptr 000002  
                    ?_LCDon 0001        __size_of__tdiv_to_l_ 0132                   ??_LCDchar 0016  
                 ??_LCDpage 0006                   ??_LCDinit 0027              ?_lcdplotpixel2 000F  
               LCDpage@page 0005                 LCDpage@side 0006                      _ADCON0 000FC2  
          ___llmod@dividend 000E                      ?_scale 0028                      _ADRESH 000FC4  
                    _ADRESL 000FC3            ___awdiv@dividend 0007            __end_of___awtoft 382E  
          __end_of___ftpack 3ED6            __end_of___lltoft 3A90           __end_of_LCDstring 58B0  
                    _LCDcmd 36AA            __end_of___lwtoft 375A               main@s_val_363 00F6  
          __end_of__powers_ 7FA3                      ___ftge 3CFC                      ___wmul 377E  
                 ??___awdiv 000B                   ??___ftadd 0038                   ??___awmod 0005  
                 ??___ftdiv 001F                   ??___ftneg 0004                   ??___lldiv 0009  
                 ??___ftmul 001F                   ??___llmod 0016                   ??___ftsub 0044  
                 ??___fttol 0042                      _fround 4836                      clear_0 37D4  
                    clear_1 37E6            ___awdiv@quotient 000D             ___awmod@divisor 0003  
                    _pixels 03FF             ___awmod@counter 0005                      main@y1 005E  
                    main@y2 00DB                      _strcat 38A8                      _strlen 382E  
     ___ftmul@f3_as_product 0023                      _xyaxis 453E                   ??_isdigit 0001  
              __mediumconst 7942                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                   ??_sprintf 0054      __size_of__lcd_waitbusy 0010  
                __accesstop 0060     __end_of__initialization 37EC             __CFG_PBADEN$OFF 000000  
                ___ftadd@f1 0032                  ___ftadd@f2 0035                  ___ftge@ff1 0001  
                ___ftge@ff2 0004                   ?_LCDclear 0001               ___rparam_used 000001  
                ___ftdiv@f1 0019                  ___ftdiv@f2 001C                  ___ftdiv@f3 0023  
             __end_of_LCDon 3736                   ?_LCDreset 0001                  ___ftneg@f1 0001  
                ___awtoft@c 0015                  ___ftmul@f1 0019                  ___ftmul@f2 001C  
                ___ftsub@f1 003E                  ___ftsub@f2 0041                  ___fttol@f1 003E  
            __pcstackCOMRAM 0001                  ___lltoft@c 0009               __end_of_image 7D43  
             __end_of_scale 4E6C        __size_of_emptycolumn 009C                   LCDclear@i 0021  
                 LCDclear@j 0025                  ___lwtoft@c 0009             ??_lcdplotpixel2 0012  
                   ??_LCDon 0005                   LCDy@value 0005                  __div_to_l_ 41A4  
           __div_to_l_@exp1 000C             __div_to_l_@cntr 000B                     ??_scale 002B  
           __div_to_l_@quot 0007                sprintf@width 006B              main@cur1_x_new 0212  
            main@cur1_y_new 020A              main@cur2_x_new 0214              main@cur2_y_new 020C  
                __pbssBANK2 0241                     ?_LCDcmd 0001                  _char_index 0241  
                   LCDon@on 0005                  ??_LCDclear 0021               __div_to_l_@f1 0001  
             __div_to_l_@f2 0004                  ??_LCDreset 0004                     ?___ftge 0001  
                   ?___wmul 000F               __lcd_waitbusy 36C4                     ?_fround 0028  
                 ?___awtoft 0015                   ?___ftpack 0001                   ?___lltoft 0009  
                   ?_strcat 0001                     ?_strlen 0001                   ?___lwtoft 0009  
                   ?_xyaxis 0001          __lcd_status@status 0001                     _LCDchar 4E6C  
                   _LCDpage 3934                     _LCDinit 38EA               ??__lcd_enable 0001  
           __size_of_LCDcmd 000C               ??__lcd_status 0001           __end_of__npowers_ 7F7C  
                   __Hparam 0000                  _scale$1214 002B                     __Lparam 0000  
           __size_of___ftge 0090                     ___awdiv 3BE8                     ___ftadd 468A  
                   ___awmod 3AF6                     ___ftdiv 3ED6                     ___ftneg 375A  
                   ___lldiv 3B66             __size_of___wmul 0026                     ___ftmul 40B0  
                   ___llmod 3A90                     ___ftsub 3868                     ___fttol 3FBC  
            ?__lcd_waitbusy 0001                  _curr_y_pos 0243                     __pcinit 37CC  
                ??___awtoft 0018                  ??___ftpack 0006             __size_of_fround 0246  
                   __ramtop 0800             __lcd_status@cs1 0002             __lcd_status@cs2 0003  
                ??___lltoft 000D                     __ptext0 6380                     __ptext1 453E  
                   __ptext2 43FE                     __ptext3 38A8                     __ptext4 58B0  
                   __ptext5 4A7C                     __ptext6 36D4                     __ptext7 4836  
                   __ptext8 40B0                     __ptext9 3AF6                  ??___lwtoft 000C  
           __size_of_strcat 0042             __size_of_strlen 003A                 ?__div_to_l_ 0001  
                   _dpowers 7F2D                __size_of_abs 0028             __size_of_xyaxis 014C  
                   _isdigit 36D4            ___awmod@dividend 0001                     main@Vpp 00EE  
                   main@buf 00C7                     main@div 021F                     main@max 00FC  
                   _sprintf 58B0                     main@min 00FA                     main@tmp 0206  
                   main@str 00A1        end_of_initialization 37EC               __Lmediumconst 7942  
                 _LCDstring 532C         __end_of__lcd_enable 36C4             ___lldiv@divisor 0005  
           ___lldiv@counter 000D         __end_of__lcd_status 39DC                     postdec1 000FE5  
                   postdec2 000FDD                     postinc0 000FEE                     postinc2 000FDE  
            __tdiv_to_l_@f1 0001              __tdiv_to_l_@f2 0004                     strlen@s 0001  
             ??__tdiv_to_l_ 0007                   _PORTBbits 000F81                LCDstring@dim 0033  
                   xyaxis@i 0026                  main@cur1_x 0234                  main@cur1_y 0230  
                main@cur2_x 0236                  main@cur2_y 0232                 ___ftdiv@exp 0026  
            __end_of_LCDcmd 36B6           lcdplotpixel2@data 0014                  main@freeze 00E5  
         lcdplotpixel2@page 001D           lcdplotpixel2@side 0022                  ?_LCDstring 0021  
       __size_of__div_to_l_ 0128           __size_of_LCDclear 0090                 ___ftmul@exp 0022  
           ??__lcd_waitbusy 0004           __size_of_LCDreset 0020              __end_of___ftge 3D8C  
            __end_of___wmul 37A4              __end_of_fround 4A7C               LCDclear@i_556 0023  
            __end_of_strcat 38EA              __end_of_strlen 3868                  LCDcmd@data 0001  
       start_initialization 37CC              __end_of_xyaxis 468A         __end_of__tdiv_to_l_ 43FE  
               __end_of_abs 37CC                 __end_of_pic 7F2D                 __lcd_enable 36B6  
                  ??_LCDcmd 0001             ___llmod@divisor 0012                 __lcd_status 3984  
           ___llmod@counter 0016                    ??___ftge 0007               ??_emptycolumn 0002  
                  ??___wmul 0013                    ??_fround 002B               sprintf@tmpval 006D  
                  ??_strcat 0005                    ??_strlen 0003                  LCDstring@a 002C  
                LCDstring@i 002A                  LCDstring@l 0031                  LCDstring@n 002D  
                  ??_xyaxis 0026                  fround@prec 0031           __size_of___awtoft 0038  
         __size_of___ftpack 00AE                 __pbssBIGRAM 03FF                    ?_LCDchar 0015  
         __size_of___lltoft 005C                    ?_LCDpage 0005       __end_of_lcdplotpixel2 453E  
                  ?_LCDinit 0001           __size_of___lwtoft 0024               __pcstackBANK0 0060  
             __pcstackBANK1 0100               __pcstackBANK2 0200               _selected_side 0245  
                  LCDchar@a 001F                    LCDchar@c 001B                    LCDchar@k 001C  
                  LCDchar@l 001E                    LCDy@side 0006                    LCDinit@i 0028  
               sprintf@flag 0065                 sprintf@fval 0073                 sprintf@prec 0076  
               ??_LCDstring 0023                   _main$1210 023B                   _main$1211 00F1  
                 _main$1209 0238               __pmediumconst 7942                    ?___awdiv 0007  
                  ?___ftadd 0032                    ?___awmod 0001                    ?___ftdiv 0019  
                  ?___ftneg 0001                    ?___lldiv 0001                    ?___ftmul 0019  
                  ?___llmod 000E                    ?___ftsub 003E                   __npowers_ 7F55  
                  ?___fttol 003E                 __tdiv_to_l_ 42CC         __end_of_emptycolumn 3E28  
              ??__div_to_l_ 0007              __size_of_LCDon 0024                    ?_isdigit 0001  
                 _curr_page 0247                    ?_sprintf 004D              __size_of_scale 03F0  
            ___wmul@product 0013                    _LATCbits 000F8B                    _LATEbits 000F8D  
                  _LCDclear 3C6C                    _LCDreset 36F2  __end_oflcdplotpixel2@F4573 7FAC  
        __end_of__div_to_l_ 42CC                   main@a_351 0224                   main@a_348 0222  
                 main@a_365 0226                   main@a_359 022A                   main@a_368 0228  
                _ADCON0bits 000FC2                  _ADCON1bits 000FC1                  _ADCON2bits 000FC0  
                 main@i_353 0210                   main@i_366 0216                   main@i_377 021A  
                 main@i_369 0218                   main@i_388 022C                   main@i_398 00FE  
         ___wmul@multiplier 000F                   main@y_360 00EC                   main@y_352 00DF  
                 main@y_364 00E1                   main@y_367 00E3                   main@y_393 0208  
                 main@delta 0200                   main@count 005C                   main@max_y 00E8  
                 main@min_y 00E7                   main@s_val 00F4                   main@y_div 021C  
          __size_of_LCDchar 04C0            __size_of_LCDpage 0050            __size_of_LCDinit 004A  
                  __Hrparam 0000                    __Lrparam 0000                 _emptycolumn 3D8C  
          __size_of___awdiv 0084            __size_of___ftadd 01AC            __size_of___awmod 0070  
          __size_of___ftdiv 00E6            __size_of___ftneg 0024            __size_of___lldiv 0082  
          __size_of___ftmul 00F4            __size_of___llmod 0066            __size_of___ftsub 0040  
          __size_of___fttol 00F4                    ___awtoft 37F6                    ___ftpack 3E28  
               _fround$1212 002E                 _fround$1213 002B                    ___lltoft 3A34  
               _isdigit$869 0002                    ___lwtoft 3736                  sprintf@exp 0071  
                sprintf@val 0067                  strcat@from 0003            __size_of_isdigit 001E  
                  __ptext10 42CC                    __ptext11 41A4                    __ptext20 37A4  
                  __ptext12 3A34                    __ptext21 3736                    __ptext13 3A90  
                  __ptext30 36F2                    __ptext22 3ED6                    __ptext14 3B66  
                  __ptext31 3712                    __ptext23 37F6                    __ptext15 3FBC  
                  __ptext40 36B6                    __ptext32 3C6C                    __ptext24 3E28  
                  __ptext16 3868                    __ptext33 4E6C                    __ptext25 532C  
                  __ptext17 468A                    __ptext34 377E                    __ptext26 382E  
                  __ptext18 375A                    __ptext35 39DC                    __ptext27 3D8C  
                  __ptext19 3CFC                    __ptext36 3934                    __ptext28 3BE8  
                  __ptext37 36C4                    __ptext29 38EA                    __ptext38 3984  
                  __ptext39 36AA                    __powers_ 7F7C                ?__lcd_enable 0001  
          __size_of_sprintf 0AD0               __size_of_LCDy 0058               __size_of_main 15C2  
              ?__lcd_status 0001                 xyaxis@i_585 0028       __end_of__lcd_waitbusy 36D4  
                  main@buf2 00B6                    main@data 0100                    main@old1 00B0  
                  main@old2 00B3                    main@val1 023E                    main@val2 00E9  
           lcdplotpixel2@rx 0025             lcdplotpixel2@ry 000F                    isdigit@c 0003  
                  scale@scl 002E                   sprintf@ap 0063            __tdiv_to_l_@exp1 000F  
                 sprintf@sp 004D            __tdiv_to_l_@cntr 000E            __tdiv_to_l_@quot 000A  
           LCDstring@buffer 0021            ___lldiv@dividend 0001              lcdplotpixel2@x 001E  
              ?__tdiv_to_l_ 0001                    sprintf@c 0078                    sprintf@f 004F  
                  strcat@cp 0005                    strcat@to 0001            ___lldiv@quotient 0009  
                  strlen@cp 0005               LCDstring@mem1 002F               LCDstring@mem2 0028  
    __size_of_lcdplotpixel2 0140  
